"use strict";var __extends=this.__extends||function(n,t){function r(){this.constructor=n}for(var i in t)t.hasOwnProperty(i)&&(n[i]=t[i]);r.prototype=t.prototype;n.prototype=new r},moqJS,Tests;(function(n){var e=function(){function n(){}return n}(),i,t,r,u,f;n.InvokeFunctionCallMode=e;i=function(){function n(){this.numberOfMatches=0}return n}();n.VerifyFunctionCallMode=i;t=function(){function n(n){this.override=n}return n}();n.OverrideFunctionCallMode=t;r=function(n){function t(t){n.call(this,t);this.getReturnValue=t}return __extends(t,n),t}(t);n.ReturnsOverrideFunctionCallMode=r;u=function(n){function t(t){n.call(this,t);this.getErrorToThrow=t}return __extends(t,n),t}(t);n.ThrowsOverrideFunctionCallMode=u;f=function(n){function t(t){n.call(this,t);this.callbackFunction=t}return __extends(t,n),t}(t);n.CallbackOverrideFunctionCallMode=f})(moqJS||(moqJS={})),function(n){var r=function(){function n(n,t){this.exptectedArguments=n;this.override=t}return n}(),t,i;(function(n){n[n.ThrowError=0]="ThrowError";n[n.ReturnValue=1]="ReturnValue";n[n.DoNothing=2]="DoNothing"})(t||(t={}));i=function(){function t(n,t,i,r){this.originalFunctionName=n;this.originalFunction=t;this.thisObject=i;this.functionProxyConfigurations=r;this._numberOfTimesCalled=0;this._actualArguments=[];this._argumentsWithOverridesList=[]}return t.prototype.callFunction=function(t){if(this.functionProxyConfigurations.functionCallMode instanceof n.InvokeFunctionCallMode)return this._callFunctionWithoutVerification(t);if(this.functionProxyConfigurations.functionCallMode instanceof n.OverrideFunctionCallMode)this._addOverride(t,this.functionProxyConfigurations.functionCallMode);else if(this.functionProxyConfigurations.functionCallMode instanceof n.VerifyFunctionCallMode)this._verifyFunction(t,this.functionProxyConfigurations.functionCallMode);else throw"not supported functionCallMode";},t.prototype._callFunctionWithoutVerification=function(n){var i,t;if(this._numberOfTimesCalled++,this._actualArguments.push(n),i=this._getMatchingOverrides(n),i.length>0)return t=this._executeOverrides(i,n),this._moleReturnValueIfNeeded(t);if(this.functionProxyConfigurations.isStrict)throw'No function setups defined and using strict mode. Change "isStrict" to false or define a function setup';if(this.functionProxyConfigurations.callBase)return t=this.originalFunction.apply(this.thisObject,n),this._moleReturnValueIfNeeded(t)},t.prototype._getMatchingOverrides=function(n){for(var i,r=[],t=0;t<this._argumentsWithOverridesList.length;t++)i=this._argumentsWithOverridesList[t],this._doArgumentsMatch(i.exptectedArguments,n)&&r.push(i.override);return r},t.prototype._executeOverrides=function(t,i){for(var r,u=2,e,o,f=0;f<t.length;f++){if(r=t[f],r instanceof n.ThrowsOverrideFunctionCallMode){u=0;e=r.override.apply(this.thisObject,i);continue}if(r instanceof n.ReturnsOverrideFunctionCallMode){u=1;o=r.override.apply(this.thisObject,i);continue}if(r instanceof n.CallbackOverrideFunctionCallMode){r.override.apply(this.thisObject,i);continue}}switch(u){case 1:return o;case 0:throw e;}},t.prototype._verifyFunction=function(n,t){for(var r,i=0;i<this._actualArguments.length;i++)r=this._actualArguments[i],this._doArgumentsMatch(n,r)&&t.numberOfMatches++},t.prototype._doArgumentsMatch=function(n,t){if(n.length!==t.length)return!1;if(n.length===0)return!0;for(var i=0;i<n.length;i++)if(!this._isSameArgument(t[i],n[i]))return!1;return!0},t.prototype._isSameArgument=function(t,i){var u=n.It.isAny(n.ItIsBase),r;return u.match(i)?(r=i,r.match(t)):t===i},t.prototype._addOverride=function(n,t){var i=new r(n,t);this._argumentsWithOverridesList.push(i)},t.prototype._moleReturnValueIfNeeded=function(t){if(this.functionProxyConfigurations.moleReturnValue){var i=new n.Mole(t);i.moleReturnValue=!0}return t},t}();n.FunctionProxy=i}(moqJS||(moqJS={})),function(n){var t=function(){function t(){this.callBase=!0;this.isStrict=!1;this.moleReturnValue=!1;this.functionCallMode=new n.InvokeFunctionCallMode}return t}();n.FunctionProxyConfigurations=t}(moqJS||(moqJS={})),function(n){var t=function(){function t(n,t,i){this.functionCall=n;this.object=t;this.functionProxyConfigurations=i}return t.prototype.lazyReturns=function(t){var i=this,r=new n.ReturnsOverrideFunctionCallMode(function(){for(var r=[],n=0;n<arguments.length;n++)r[+n]=arguments[n];return t.apply(i.object,r)});return this._callWithOverrideMode(r)},t.prototype.lazyReturnsInOrder=function(t){var r=this,i=t.map(function(n){return n}),u=new n.ReturnsOverrideFunctionCallMode(function(){for(var u,t=[],n=0;n<arguments.length;n++)t[+n]=arguments[n];return i.length<1?undefined:(u=i.shift(),u.apply(r.object,t))});return this._callWithOverrideMode(u)},t.prototype.returns=function(t){var i=new n.ReturnsOverrideFunctionCallMode(function(){return t});return this._callWithOverrideMode(i)},t.prototype.returnsInOrder=function(n){var t=n.map(function(n){return function(){return n}});return this.lazyReturnsInOrder(t)},t.prototype.callback=function(t){var i=this,r=new n.CallbackOverrideFunctionCallMode(function(){for(var r=[],n=0;n<arguments.length;n++)r[+n]=arguments[n];t.apply(i.object,r)});return this._callWithOverrideMode(r)},t.prototype.lazyThrows=function(t){var i=this,r=new n.ThrowsOverrideFunctionCallMode(function(){for(var r=[],n=0;n<arguments.length;n++)r[+n]=arguments[n];return t.apply(i.object,r)});return this._callWithOverrideMode(r)},t.prototype.throws=function(n){return this.lazyThrows(function(){return n})},t.prototype._callWithOverrideMode=function(t){return this.functionProxyConfigurations.functionCallMode=t,this.functionCall(this.object),this.functionProxyConfigurations.functionCallMode=new n.InvokeFunctionCallMode,this},t}();n.FunctionSetup=t}(moqJS||(moqJS={})),function(n){var t=function(){function n(){}return n.prototype.match=function(){return!1},n}();n.ItIsBase=t;var i=function(n){function t(t){n.call(this);this.expectedType=t}return __extends(t,n),t.prototype.match=function(n){return n===null||n===undefined?!1:n.constructor===this.expectedType||n instanceof this.expectedType},t}(t),r=function(n){function t(t){n.call(this);this.predicate=t}return __extends(t,n),t.prototype.match=function(n){return this.predicate(n)},t}(t),u=function(n){function t(t,i){n.call(this);this.minimumValue=t;this.maximumValue=i}return __extends(t,n),t.prototype.match=function(n){return isNaN(n)?!1:this.minimumValue<=n&&n<=this.maximumValue},t}(t),f=function(n){function t(t){n.call(this);this.regExp=t}return __extends(t,n),t.prototype.match=function(n){return this._isString(n)?this.regExp.test(n):!1},t.prototype._isString=function(n){var t=new i(String);return t.match(n)},t}(t),e=function(){function n(){}return n.isAny=function(n){return new i(n)},n.is=function(n){return new r(n)},n.isInRange=function(n,t){return new u(n,t)},n.isRegExp=function(n){return new f(n)},n}();n.It=e}(moqJS||(moqJS={})),function(n){var t=function(){function t(i){this.object=i;this._FunctionProxyConfigurations=new n.FunctionProxyConfigurations;this._FunctionProxyConfigurations.callBase=!0;this._setFunctionProxies();this._setPropertiesProxies();t._moles.push(this)}return t.prototype.dispose=function(){for(var i,r,u,n=0;n<this._functionProxies.length;n++)i=this._functionProxies[n],this.object[i.originalFunctionName]=i.originalFunction;for(n=0;n<this._propertyGetterProxies.length;n++)i=this._propertyGetterProxies[n],r=this._getPropertyDescriptor(this.object,i.originalFunctionName),r.get=i.originalFunction,this._setProperty(this.object,i.originalFunctionName,r);for(n=0;n<this._propertySetterProxies.length;n++)i=this._propertySetterProxies[n],r=this._getPropertyDescriptor(this.object,i.originalFunctionName),r.set=i.originalFunction,this._setProperty(this.object,i.originalFunctionName,r);u=t._moles.indexOf(this);t._moles.splice(u,1)},Object.defineProperty(t.prototype,"callBase",{get:function(){return this._FunctionProxyConfigurations.callBase},set:function(n){this._FunctionProxyConfigurations.callBase=n},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isStrict",{get:function(){return this._FunctionProxyConfigurations.isStrict},set:function(n){this._FunctionProxyConfigurations.isStrict=n},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"moleReturnValue",{get:function(){return this._FunctionProxyConfigurations.moleReturnValue},set:function(n){this._FunctionProxyConfigurations.moleReturnValue=n},enumerable:!0,configurable:!0}),t.prototype.setup=function(t){return new n.FunctionSetup(t,this.object,this._FunctionProxyConfigurations)},t.prototype.setupPrivate=function(n){for(var i,t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];if(i=this._getPropertyDescriptor(this.object,n),i.value)return this.setup(function(i){var r=i[n];r.apply(i,t)});if(t.length<1&&i.get)return this.setup(function(n){i.get.apply(n,t)});if(t.length===1&&i.set)return this.setup(function(n){i.set.apply(n,t)});throw"Should be an existing function/getter/setter with appropriate number of arguments";},t.prototype.verify=function(t,i){var u=new n.VerifyFunctionCallMode,r;return(this._FunctionProxyConfigurations.functionCallMode=u,t(this.object),this._FunctionProxyConfigurations.functionCallMode=new n.InvokeFunctionCallMode,r=u.numberOfMatches,!i)?r>0:i.match(r)},t.prototype.verifyPrivate=function(n,t,i){var r=function(i){var r=i[n];r.apply(i,t)};return this.verify(r,i)},t.findMoleByObject=function(n){var i,r;if(n===null||n===undefined)return null;for(i=0;i<t._moles.length;i++)if(r=t._moles[i],r.object===n)return r;return null},t.prototype._setFunctionProxies=function(){var i,t,f;for(this._functionProxies=[],i=this._getObjectPropertyNames(),t=0;t<i.length;t++)try{var r=i[t],e=this._getPropertyDescriptor(this.object,r),u=e.value;if(typeof u!="function")continue;f=new n.FunctionProxy(r,u,this.object,this._FunctionProxyConfigurations);this._functionProxies.push(f);this._setFunctionProxy(this._functionProxies,this._functionProxies.length-1,r)}catch(o){}},t.prototype._getObjectPropertyNames=function(){var n=Object.getOwnPropertyNames(this.object);for(var t in this.object)n.lastIndexOf(t)<0&&n.push(t);return n},t.prototype._setFunctionProxy=function(n,t,i){this.object[i]=function(){for(var r=[],i=0;i<arguments.length;i++)r[+i]=arguments[i];return n[t].callFunction(r)}},t.prototype._setPropertiesProxies=function(){var r,i,t,n;for(this._propertyGetterProxies=[],this._propertySetterProxies=[],r=this._getObjectPropertyNames(),i=0;i<r.length;i++)try{if(t=r[i],n=this._getPropertyDescriptor(this.object,t),!n)continue;n.get&&this._setPropertyGetterProxy(t,n);n.set&&this._setPropertySetterProxy(t,n);(n.get||n.set)&&this._setProperty(this.object,t,n)}catch(u){}},t.prototype._getPropertyDescriptor=function(n,t){var i=Object.getOwnPropertyDescriptor(n,t);return i?i:n.__proto__?this._getPropertyDescriptor(n.__proto__,t):undefined},t.prototype._setProperty=function(n,t,i){Object.defineProperty(n,t,i)},t.prototype._setPropertyGetterProxy=function(t,i){var r=new n.FunctionProxy(t,i.get,this.object,this._FunctionProxyConfigurations);this._propertyGetterProxies.push(r);i.get=function(){return r.callFunction([])}},t.prototype._setPropertySetterProxy=function(t,i){var r=new n.FunctionProxy(t,i.set,this.object,this._FunctionProxyConfigurations);this._propertySetterProxies.push(r);i.set=function(n){return r.callFunction([n])}},t._moles=[],t}();n.Mole=t}(moqJS||(moqJS={})),function(n){var t=function(){function n(n){this.expected=n}return n.prototype.match=function(){return!1},n}(),i=function(n){function t(t){n.call(this,t)}return __extends(t,n),t.prototype.match=function(n){return n<this.expected},t}(t),r=function(n){function t(t){n.call(this,t)}return __extends(t,n),t.prototype.match=function(n){return n<=this.expected},t}(t),u=function(n){function t(t){n.call(this,t)}return __extends(t,n),t.prototype.match=function(n){return n===this.expected},t}(t),f=function(n){function t(t){n.call(this,t)}return __extends(t,n),t.prototype.match=function(n){return n>=this.expected},t}(t),e=function(n){function t(t){n.call(this,t)}return __extends(t,n),t.prototype.match=function(n){return n>this.expected},t}(t),o=function(){function n(n,t){this.minimumExpected=n;this.maximumExpected=t}return n.prototype.match=function(n){return n<this.minimumExpected?!1:n>this.maximumExpected?!1:!0},n}(),s=function(){function n(){}return n.lessThan=function(n){return new i(n)},n.atMost=function(n){return new r(n)},n.exact=function(n){return new u(n)},n.atLeast=function(n){return new f(n)},n.moreThan=function(n){return new e(n)},n.between=function(n,t){return new o(n,t)},n}();n.Times=s}(moqJS||(moqJS={})),function(n){var t=function(){function n(){}return n.prototype.complexReturnFunction=function(){return new n},Object.defineProperty(n.prototype,"complexGetterFunction",{get:function(){return new n},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"getter",{get:function(){return this.onGetterCalled&&this.onGetterCalled(),this.getterValue},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"setter",{set:function(n){if(this.setterValue=n,this.onSetterCalled)this.onSetterCalled(n)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"getterAndSetter",{get:function(){return this.onGetterOfGetterAndSetterCalled&&this.onGetterOfGetterAndSetterCalled(),this.getterAndSetterValue},set:function(n){if(this.getterAndSetterValue=n,this.onSetterOfGetterAndSetterCalled)this.onSetterOfGetterAndSetterCalled(n)},enumerable:!0,configurable:!0}),n.staticFunction=function(){this.staticFunctionCalled&&this.staticFunctionCalled()},n.prototype.noArgumentsFunction=function(){this.onNoArgumentsFunctionCalled&&this.onNoArgumentsFunctionCalled()},n.prototype.oneArgumentsFunction=function(n){if(this.onOneArgumentsFunctionCalled)this.onOneArgumentsFunctionCalled(n)},n.prototype.manyArgumentsFunction=function(n,t,i){if(this.onManyArgumentsFunctionCalled)this.onManyArgumentsFunctionCalled(n,t,i)},n.prototype.returning1Function=function(){return this.onReturnung1FunctionCalled&&this.onReturnung1FunctionCalled(),1},n.prototype.callPrivateFunction=function(n){return this._privateFunction(n)},n.prototype._privateFunction=function(n){if(this.onPrivateFunctionCalled)this.onPrivateFunctionCalled(n);return 1},n.prototype.callPrivateGetter=function(){return this._privateGetter},n.prototype.callPrivateSetter=function(n){this._privateSetter=n},n.prototype.callPrivateGetterOfGetterAndSetter=function(){return this._privateGetterAndSetter},n.prototype.callPrivateSetterOfGetterAndSetter=function(n){this._privateGetterAndSetter=n},Object.defineProperty(n.prototype,"_privateGetter",{get:function(){return this.onPrivateGetterCalled&&this.onPrivateGetterCalled(),this.privateGetterValue},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"_privateSetter",{set:function(n){if(this.privateSetterValue=n,this.onPrivateSetterCalled)this.onPrivateSetterCalled(n)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"_privateGetterAndSetter",{get:function(){return this.onPrivateGetterOfGetterAndSetterCalled&&this.onPrivateGetterOfGetterAndSetterCalled(),this.privateGetterAndSetterValue},set:function(n){if(this.privateGetterAndSetterValue=n,this.onPrivateSetterOfGetterAndSetterCalled)this.onPrivateSetterOfGetterAndSetterCalled(n)},enumerable:!0,configurable:!0}),n.PRIVATE_FUNCTION_NAME="_privateFunction",n.PRIVATE_GETTER_NAME="_privateGetter",n.PRIVATE_SETTER_NAME="_privateSetter",n.PRIVATE_GETTER_AND_SETTER_NAME="_privateGetterAndSetter",n}(),i;n.TestObject=t;i=function(n){function t(){n.apply(this,arguments)}return __extends(t,n),t}(t);n.TestObjectSon=i}(Tests||(Tests={})),function(n){var f=moqJS.ItIsBase,t=moqJS.It,o=moqJS.FunctionProxyConfigurations,e=moqJS.FunctionProxy,s=moqJS.VerifyFunctionCallMode,i=moqJS.CallbackOverrideFunctionCallMode,r=moqJS.ReturnsOverrideFunctionCallMode,u=moqJS.ThrowsOverrideFunctionCallMode,h=moqJS.InvokeFunctionCallMode,c=function(){function t(){this.beforeEach=function(){var t=this;t.thisObject=new n.TestObject;t.functionProxyConfigurations=new o;t.noArgsFunctionProxy=new e("noArgumentsFunction",t.thisObject.noArgumentsFunction,t.thisObject,t.functionProxyConfigurations);t.oneArgsFunctionProxy=new e("oneArgumentsFunction",t.thisObject.oneArgumentsFunction,t.thisObject,t.functionProxyConfigurations);t.manyArgsFunctionProxy=new e("manyArgumentsFunction",t.thisObject.manyArgumentsFunction,t.thisObject,t.functionProxyConfigurations);t.returning1FunctionProxy=new e("returning1Function",t.thisObject.returning1Function,t.thisObject,t.functionProxyConfigurations)};this.afterEach=function(){};this.setVerifyMode=function(){var t=this,n=new s;return t.functionProxyConfigurations.functionCallMode=n,n};this.setInvokeMode=function(){var n=this,t=new h;n.functionProxyConfigurations.functionCallMode=t}}return t}();QUnit.module("FunctionProxy",new c);QUnit.test("constructor - should initialize correctly",function(n){QUnit.expect(3);var i=new Function,r={},u=new o,t=new e("originalFunction",i,r,u);n.strictEqual(t.thisObject,r);n.strictEqual(t.originalFunction,i);n.strictEqual(t.functionProxyConfigurations,u)});QUnit.test("callbase - set to true, should call the original function",1,function(n){var t=this;t.functionProxyConfigurations.callBase=!0;t.thisObject.onNoArgumentsFunctionCalled=function(){n.ok(!0,"should call original function")};t.noArgsFunctionProxy.callFunction([])});QUnit.test("callbase - set to false, should not call the original function",0,function(n){var t=this;t.functionProxyConfigurations.callBase=!1;t.thisObject.onNoArgumentsFunctionCalled=function(){n.ok(!1,"should call original function")};t.noArgsFunctionProxy.callFunction([])});QUnit.test("callbase - set to false, should not return the original function result",1,function(n){var t=this,i;t.functionProxyConfigurations.callBase=!1;i=t.returning1FunctionProxy.callFunction([]);n.notStrictEqual(i,1,"should not return the original value")});QUnit.test("callbase - set to false, should not return undefined",1,function(n){var t=this,i;t.functionProxyConfigurations.callBase=!1;i=t.returning1FunctionProxy.callFunction([]);n.strictEqual(i,undefined,"should return undefined")});QUnit.test("callFunction - unknown mode - should throw error",function(n){QUnit.expect(1);var t=this;t.functionProxyConfigurations.functionCallMode={};try{t.noArgsFunctionProxy.callFunction([])}catch(i){n.ok(!0,"should throw error on unknown functionCallMode")}});QUnit.test("callFunction - invoke mode - no arguments should call only the original function",function(n){QUnit.expect(1);var t=this;t.thisObject.onNoArgumentsFunctionCalled=function(){n.ok(!0,"no arguments function should be called")};t.thisObject.onOneArgumentsFunctionCalled=function(){n.ok(!1,"one arguments function should not be called")};t.thisObject.onManyArgumentsFunctionCalled=function(){n.ok(!1,"many arguments function should not be called")};t.noArgsFunctionProxy.callFunction([])});QUnit.test("callFunction - invoke mode - one arguments should call only the original function",function(n){QUnit.expect(1);var t=this,i={};t.thisObject.onNoArgumentsFunctionCalled=function(){n.ok(!1,"no arguments function should not be called")};t.thisObject.onOneArgumentsFunctionCalled=function(t){n.strictEqual(t,i,"The arguments should be the same")};t.thisObject.onManyArgumentsFunctionCalled=function(){n.ok(!1,"many arguments function should not be called")};t.oneArgsFunctionProxy.callFunction([i])});QUnit.test("callFunction - invoke mode - many arguments should call only the original function",function(n){QUnit.expect(3);var t=this,i={},r={},u={};t.thisObject.onNoArgumentsFunctionCalled=function(){n.ok(!1,"no arguments function should not be called")};t.thisObject.onOneArgumentsFunctionCalled=function(){n.ok(!1,"one arguments function should not be called")};t.thisObject.onManyArgumentsFunctionCalled=function(t,f,e){n.strictEqual(t,i,"The 1st argument should be the same");n.strictEqual(f,r,"The 2nd argument should be the same");n.strictEqual(e,u,"The 3rd argument should be the same")};t.manyArgsFunctionProxy.callFunction([i,r,u])});QUnit.test("callFunction - invoke mode - returning1Function - should return the original function result",1,function(n){var t=this,i=t.returning1FunctionProxy.callFunction([]);n.strictEqual(i,1,"should return the original value")});QUnit.test("callFunction - verify mode no arguments -  was not called should not find a match",function(n){QUnit.expect(1);var t=this,i=t.setVerifyMode();t.noArgsFunctionProxy.callFunction([]);n.strictEqual(i.numberOfMatches,0,"should not find a match")});QUnit.test("callFunction - verify mode no arguments - was called should find a match",function(n){var t,i;QUnit.expect(1);t=this;t.noArgsFunctionProxy.callFunction([]);i=t.setVerifyMode();t.noArgsFunctionProxy.callFunction([]);n.strictEqual(i.numberOfMatches,1,"should find a match")});QUnit.test("callFunction - verify mode no arguments - was called twice should find a match",function(n){var t,i;QUnit.expect(1);t=this;t.noArgsFunctionProxy.callFunction([]);t.noArgsFunctionProxy.callFunction([]);i=t.setVerifyMode();t.noArgsFunctionProxy.callFunction([]);n.strictEqual(i.numberOfMatches,2,"should find a match")});QUnit.test("callFunction - verify mode no arguments - was called with arguments should not find a match",function(n){var t,i;QUnit.expect(1);t=this;t.noArgsFunctionProxy.callFunction([{}]);i=t.setVerifyMode();t.noArgsFunctionProxy.callFunction([]);n.strictEqual(i.numberOfMatches,0,"should not find a match")});QUnit.test("callFunction - verify mode no arguments - was called with arguments and without arguments should find a match",function(n){var t,i;QUnit.expect(1);t=this;t.noArgsFunctionProxy.callFunction([{}]);t.noArgsFunctionProxy.callFunction([]);i=t.setVerifyMode();t.noArgsFunctionProxy.callFunction([]);n.strictEqual(i.numberOfMatches,1,"should find a match")});QUnit.test("callFunction - verify mode no arguments - was called with arguments verify with same arguments should find a match",function(n){var t,i,r;QUnit.expect(1);t=this;i={};t.noArgsFunctionProxy.callFunction([i]);r=t.setVerifyMode();t.noArgsFunctionProxy.callFunction([i]);n.strictEqual(r.numberOfMatches,1,"should find a match")});QUnit.test("callFunction - verify mode no arguments - was called with arguments verify with different arguments should not find a match",function(n){var i;QUnit.expect(1);var t=this;t.noArgsFunctionProxy.callFunction([{}]);i=t.setVerifyMode();t.noArgsFunctionProxy.callFunction([{}]);n.strictEqual(i.numberOfMatches,0,"should not find a match")});QUnit.test("callFunction - verify mode one argument -  was not called should not find a match",function(n){QUnit.expect(1);var t=this,i=t.setVerifyMode();t.oneArgsFunctionProxy.callFunction([{}]);n.strictEqual(i.numberOfMatches,0,"should not find a match")});QUnit.test("callFunction - verify mode one argument - was called should find a match",function(n){var t,i,r;QUnit.expect(1);t=this;i={};t.noArgsFunctionProxy.callFunction([i]);r=t.setVerifyMode();t.noArgsFunctionProxy.callFunction([i]);n.strictEqual(r.numberOfMatches,1,"should find a match")});QUnit.test("callFunction - verify mode one argument - was called with IItIs which returns false, should not find a match",function(n){var t,r,u,i;QUnit.expect(1);t=this;r={};t.noArgsFunctionProxy.callFunction([r]);u=t.setVerifyMode();i=new f;i.match=function(){return!1};t.noArgsFunctionProxy.callFunction([i]);n.strictEqual(u.numberOfMatches,0,"should not find a match")});QUnit.test("callFunction - verify mode one argument - was called with IItIs which returns true, should f-nd a match",function(n){var t,r,u,i;QUnit.expect(1);t=this;r={};t.noArgsFunctionProxy.callFunction([r]);u=t.setVerifyMode();i=new f;i.match=function(){return!0};t.noArgsFunctionProxy.callFunction([i]);n.strictEqual(u.numberOfMatches,1,"should find a match")});QUnit.test("callFunction - verify mode one argument - was called twice should find a match",function(n){var t,i,r;QUnit.expect(1);t=this;i={};t.noArgsFunctionProxy.callFunction([i]);t.noArgsFunctionProxy.callFunction([i]);r=t.setVerifyMode();t.noArgsFunctionProxy.callFunction([i]);n.strictEqual(r.numberOfMatches,2,"should find a match")});QUnit.test("callFunction - verify mode one argument - was called twice should find a match for first arg",function(n){var r;QUnit.expect(1);var t=this,i={};t.noArgsFunctionProxy.callFunction([i]);t.noArgsFunctionProxy.callFunction([{}]);r=t.setVerifyMode();t.noArgsFunctionProxy.callFunction([i]);n.strictEqual(r.numberOfMatches,1,"should find a match")});QUnit.test("callFunction - verify mode one argument - was called twice should find a match for second arg",function(n){var r;QUnit.expect(1);var t=this,i={};t.noArgsFunctionProxy.callFunction([{}]);t.noArgsFunctionProxy.callFunction([i]);r=t.setVerifyMode();t.noArgsFunctionProxy.callFunction([i]);n.strictEqual(r.numberOfMatches,1,"should find a match")});QUnit.test("callFunction - verify mode one argument - was called twice should not find a match for another arg",function(n){var i;QUnit.expect(1);var t=this;t.noArgsFunctionProxy.callFunction([{}]);t.noArgsFunctionProxy.callFunction([{}]);i=t.setVerifyMode();t.noArgsFunctionProxy.callFunction([{}]);n.strictEqual(i.numberOfMatches,0,"should not find a match")});QUnit.test("callFunction - verify mode one argument - was called without arguments should not find a match with arg",function(n){var t,i,r;QUnit.expect(1);t=this;i={};t.noArgsFunctionProxy.callFunction([]);r=t.setVerifyMode();t.noArgsFunctionProxy.callFunction([i]);n.strictEqual(r.numberOfMatches,0,"should not find a match")});QUnit.test("callFunction - verify mode one argument - was called without arguments should find a match without arguments",function(n){var t,r,i;QUnit.expect(1);t=this;r={};t.noArgsFunctionProxy.callFunction([]);i=t.setVerifyMode();t.noArgsFunctionProxy.callFunction([]);n.strictEqual(i.numberOfMatches,1,"should find a match")});QUnit.test("callFunction - verify mode one argument - was called with IItIs which returns true 3 times, should find a match",function(n){var t,i;QUnit.expect(1);t=this;i={};t.noArgsFunctionProxy.callFunction([i]);t.noArgsFunctionProxy.callFunction([i]);t.noArgsFunctionProxy.callFunction([i]);t.noArgsFunctionProxy.callFunction([i]);t.noArgsFunctionProxy.callFunction([i]);var e=t.setVerifyMode(),r=0,u=new f;u.match=function(){return r++,r<=3};t.noArgsFunctionProxy.callFunction([u]);n.strictEqual(e.numberOfMatches,3,"should find a match")});QUnit.test("callFunction - verify mode many arguments -  was not called should not find a match",function(n){QUnit.expect(1);var t=this,i=t.setVerifyMode();t.manyArgsFunctionProxy.callFunction([{},{},{}]);n.strictEqual(i.numberOfMatches,0,"should not find a match")});QUnit.test("callFunction - verify mode many arguments -  was called should find a match",function(n){var f;QUnit.expect(1);var t=this,i={},r={},u={};t.manyArgsFunctionProxy.callFunction([i,r,u]);f=t.setVerifyMode();t.manyArgsFunctionProxy.callFunction([i,r,u]);n.strictEqual(f.numberOfMatches,1,"should find a match")});QUnit.test("callFunction - verify mode many arguments -  was called twice should find a match",function(n){var f;QUnit.expect(1);var t=this,i={},r={},u={};t.manyArgsFunctionProxy.callFunction([i,r,u]);t.manyArgsFunctionProxy.callFunction([i,r,u]);f=t.setVerifyMode();t.manyArgsFunctionProxy.callFunction([i,r,u]);n.strictEqual(f.numberOfMatches,2,"should find a match")});QUnit.test("callFunction - verify mode many arguments -  was called twice with different sets should find a match for first set",function(n){var r;QUnit.expect(1);var t=this,i=[{},{},{}];t.manyArgsFunctionProxy.callFunction(i);t.manyArgsFunctionProxy.callFunction([{},{},{}]);r=t.setVerifyMode();t.manyArgsFunctionProxy.callFunction(i);n.strictEqual(r.numberOfMatches,1,"should find a match")});QUnit.test("callFunction - verify mode many arguments -  was called twice with different sets should find a match for second set",function(n){var r;QUnit.expect(1);var t=this,i=[{},{},{}];t.manyArgsFunctionProxy.callFunction([{},{},{}]);t.manyArgsFunctionProxy.callFunction(i);r=t.setVerifyMode();t.manyArgsFunctionProxy.callFunction(i);n.strictEqual(r.numberOfMatches,1,"should find a match")});QUnit.test("callFunction - verify mode many arguments -  was called twice with different sets should not find a match for different set",function(n){var i;QUnit.expect(1);var t=this;t.manyArgsFunctionProxy.callFunction([{},{},{}]);t.manyArgsFunctionProxy.callFunction([{},{},{}]);i=t.setVerifyMode();t.manyArgsFunctionProxy.callFunction([{},{},{}]);n.strictEqual(i.numberOfMatches,0,"should not find a match")});QUnit.test("callFunction - verify mode many arguments - was called twice with different sets should not find a match for set with one different parameter",function(n){var u;QUnit.expect(1);var t=this,i=[{},{},{}],r=[{},{},{}],f=[i[0],i[1],r[2]];t.manyArgsFunctionProxy.callFunction(i);t.manyArgsFunctionProxy.callFunction(r);u=t.setVerifyMode();t.manyArgsFunctionProxy.callFunction(f);n.strictEqual(u.numberOfMatches,0,"should not find a match")});QUnit.test("callFunction - verify mode many arguments -  was called with less parameters should find a match",function(n){var t,i,r;QUnit.expect(1);t=this;i=[{},{}];t.manyArgsFunctionProxy.callFunction(i);r=t.setVerifyMode();t.manyArgsFunctionProxy.callFunction(i);n.strictEqual(r.numberOfMatches,1,"should find a match")});QUnit.test("callFunction - verify mode many arguments -  was called with more parameters should find a match",function(n){var t,i,r;QUnit.expect(1);t=this;i=[{},{},{},{}];t.manyArgsFunctionProxy.callFunction(i);r=t.setVerifyMode();t.manyArgsFunctionProxy.callFunction(i);n.strictEqual(r.numberOfMatches,1,"should find a match")});QUnit.test("callFunction - verify mode many arguments -  was called with more parameters should not find a match with less parameters",function(n){var i,t,r;QUnit.expect(1);i=this;t=[{},{},{},{}];i.manyArgsFunctionProxy.callFunction(t);r=i.setVerifyMode();i.manyArgsFunctionProxy.callFunction([t[0],t[1],t[2]]);n.strictEqual(r.numberOfMatches,0,"should not find a match")});QUnit.test("callFunction - verify mode many arguments -  was called with ItIs that returns false should not find a match with less parameters",function(n){var t,i,u,r;QUnit.expect(1);t=this;i=[{},{},{}];t.manyArgsFunctionProxy.callFunction(i);u=t.setVerifyMode();r=new f;r.match=function(){return!1};t.manyArgsFunctionProxy.callFunction([i[0],i[1],r]);n.strictEqual(u.numberOfMatches,0,"should not find a match")});QUnit.test("callFunction - verify mode many arguments -  was called with ItIs that returns true should find a match with less parameters",function(n){var t,i,u,r;QUnit.expect(1);t=this;i=[{},{},{}];t.manyArgsFunctionProxy.callFunction(i);u=t.setVerifyMode();r=new f;r.match=function(){return!0};t.manyArgsFunctionProxy.callFunction([i[0],i[1],r]);n.strictEqual(u.numberOfMatches,1,"should find a match")});QUnit.test("callFunction - verify mode many arguments -  was called with ItIs that returns true 3 times should find a match with less parameters",function(n){var t,i;QUnit.expect(1);t=this;i=[{},{},{}];t.manyArgsFunctionProxy.callFunction(i);t.manyArgsFunctionProxy.callFunction(i);t.manyArgsFunctionProxy.callFunction(i);t.manyArgsFunctionProxy.callFunction(i);t.manyArgsFunctionProxy.callFunction(i);t.manyArgsFunctionProxy.callFunction(i);var e=t.setVerifyMode(),r=0,u=new f;u.match=function(){return r++,r<=3};t.manyArgsFunctionProxy.callFunction([i[0],i[1],u]);n.strictEqual(e.numberOfMatches,3,"should find a match")});QUnit.test("callFunction - verify mode many arguments -  was called with 3 ItIs that returns true should find a match with less parameters",function(n){var i,r,u,t;QUnit.expect(1);i=this;r=[{},{},{}];i.manyArgsFunctionProxy.callFunction(r);u=i.setVerifyMode();t=new f;t.match=function(){return!0};i.manyArgsFunctionProxy.callFunction([t,t,t]);n.strictEqual(u.numberOfMatches,1,"should find a match")});QUnit.test("callFunction - verify mode many arguments -  was called with 2 ItIs that returns true and one that returns false should find a match with less parameters",function(n){var t,u,e,i,r;QUnit.expect(1);t=this;u=[{},{},{}];t.manyArgsFunctionProxy.callFunction(u);e=t.setVerifyMode();i=new f;i.match=function(){return!0};r=new f;r.match=function(){return!1};t.manyArgsFunctionProxy.callFunction([i,r,i]);n.strictEqual(e.numberOfMatches,0,"should not find a match")});QUnit.test("callFunction - override mode Callback - should not call the original function",0,function(n){var t=this,r,u;t.thisObject.onNoArgumentsFunctionCalled=function(){n.ok(!1,"should not call the original function")};r=function(){};u=new i(r);t.functionProxyConfigurations.functionCallMode=u;t.noArgsFunctionProxy.callFunction([])});QUnit.test("callFunction - override mode Returns - should not call the original function",0,function(n){var t=this,i,u;t.thisObject.onNoArgumentsFunctionCalled=function(){n.ok(!1,"should not call the original function")};i=function(){};u=new r(i);t.functionProxyConfigurations.functionCallMode=u;t.noArgsFunctionProxy.callFunction([])});QUnit.test("callFunction - override mode Throws - should not call the original function",0,function(n){var t=this,i,r;t.thisObject.onNoArgumentsFunctionCalled=function(){n.ok(!1,"should not call the original function")};i=function(){};r=new u(i);t.functionProxyConfigurations.functionCallMode=r;t.noArgsFunctionProxy.callFunction([])});QUnit.test("callFunction - override mode Callback - should not call the original function with arguments",0,function(n){var t=this,r,u;t.thisObject.onNoArgumentsFunctionCalled=function(){n.ok(!1,"should not call the original function")};r=function(){};u=new i(r);t.functionProxyConfigurations.functionCallMode=u;t.manyArgsFunctionProxy.callFunction([{},{},{}])});QUnit.test("callFunction - override mode Returns - should not call the original function with arguments",0,function(n){var t=this,i,u;t.thisObject.onNoArgumentsFunctionCalled=function(){n.ok(!1,"should not call the original function")};i=function(){};u=new r(i);t.functionProxyConfigurations.functionCallMode=u;t.manyArgsFunctionProxy.callFunction([{},{},{}])});QUnit.test("callFunction - override mode Throws - should not call the original function with arguments",0,function(n){var t=this,i,r;t.thisObject.onNoArgumentsFunctionCalled=function(){n.ok(!1,"should not call the original function")};i=function(){};r=new u(i);t.functionProxyConfigurations.functionCallMode=r;t.manyArgsFunctionProxy.callFunction([{},{},{}])});QUnit.test("callFunction - override mode Callback - invoking the function should not call the original function",0,function(n){var t=this,r,u;t.thisObject.onNoArgumentsFunctionCalled=function(){n.ok(!1,"should not call the original function")};r=function(){};u=new i(r);t.functionProxyConfigurations.functionCallMode=u;t.noArgsFunctionProxy.callFunction([]);t.setInvokeMode();t.noArgsFunctionProxy.callFunction([])});QUnit.test("callFunction - override mode Returns - invoking the function should not call the original function",0,function(n){var t=this,i,u;t.thisObject.onNoArgumentsFunctionCalled=function(){n.ok(!1,"should not call the original function")};i=function(){};u=new r(i);t.functionProxyConfigurations.functionCallMode=u;t.noArgsFunctionProxy.callFunction([]);t.setInvokeMode();t.noArgsFunctionProxy.callFunction([])});QUnit.test("callFunction - override mode Throws - invoking the function should not call the original function",0,function(n){var t=this,i,r;t.thisObject.onNoArgumentsFunctionCalled=function(){n.ok(!1,"should not call the original function")};i=function(){};r=new u(i);t.functionProxyConfigurations.functionCallMode=r;t.noArgsFunctionProxy.callFunction([]);t.setInvokeMode();try{t.noArgsFunctionProxy.callFunction([])}catch(f){}});QUnit.test("callFunction - override mode Callback - invoking the function should call the override function",1,function(n){var t=this,r=function(){n.ok(!0,"should call the overriden function")},u=new i(r);t.functionProxyConfigurations.functionCallMode=u;t.noArgsFunctionProxy.callFunction([]);t.setInvokeMode();t.noArgsFunctionProxy.callFunction([])});QUnit.test("callFunction - override mode Returns - invoking the function should call the override function",1,function(n){var t=this,r=function(){n.ok(!0,"should call the overriden function")},u=new i(r);t.functionProxyConfigurations.functionCallMode=u;t.noArgsFunctionProxy.callFunction([]);t.setInvokeMode();t.noArgsFunctionProxy.callFunction([])});QUnit.test("callFunction - override mode Throws - invoking the function should call the override function",1,function(n){var t=this,i=function(){n.ok(!0,"should call the overriden function")},r=new u(i);t.functionProxyConfigurations.functionCallMode=r;t.noArgsFunctionProxy.callFunction([]);t.setInvokeMode();try{t.noArgsFunctionProxy.callFunction([])}catch(f){}});QUnit.test("callFunction - override mode Callback - calling the function should not call the override function",0,function(n){var t=this,r=function(){n.ok(!1,"should not call the overriden function on override mode")},u=new i(r);t.functionProxyConfigurations.functionCallMode=u;t.noArgsFunctionProxy.callFunction([])});QUnit.test("callFunction - override mode Returns - calling the function should not call the override function",0,function(n){var t=this,i=function(){n.ok(!1,"should not call the overriden function on override mode")},u=new r(i);t.functionProxyConfigurations.functionCallMode=u;t.noArgsFunctionProxy.callFunction([])});QUnit.test("callFunction - override mode Throws - calling the function should not call the override function",0,function(n){var t=this,i=function(){n.ok(!1,"should not call the overriden function on override mode")},r=new u(i);t.functionProxyConfigurations.functionCallMode=r;t.noArgsFunctionProxy.callFunction([])});QUnit.test("callFunction - override mode Callback - invoking the function should call the override with same parameters",3,function(n){var r=this,t=[{},{},{}],u=function(i,r,u){n.strictEqual(i,t[0],"should pass the parameters");n.strictEqual(r,t[1],"should pass the parameters");n.strictEqual(u,t[2],"should pass the parameters")},f=new i(u);r.functionProxyConfigurations.functionCallMode=f;r.manyArgsFunctionProxy.callFunction(t);r.setInvokeMode();r.manyArgsFunctionProxy.callFunction(t)});QUnit.test("callFunction - override mode Returns - invoking the function should call the override with same parameters",3,function(n){var i=this,t=[{},{},{}],u=function(i,r,u){n.strictEqual(i,t[0],"should pass the parameters");n.strictEqual(r,t[1],"should pass the parameters");n.strictEqual(u,t[2],"should pass the parameters")},f=new r(u);i.functionProxyConfigurations.functionCallMode=f;i.manyArgsFunctionProxy.callFunction(t);i.setInvokeMode();i.manyArgsFunctionProxy.callFunction(t)});QUnit.test("callFunction - override mode Throws - invoking the function should call the override with same parameters",3,function(n){var i=this,t=[{},{},{}],r=function(i,r,u){n.strictEqual(i,t[0],"should pass the parameters");n.strictEqual(r,t[1],"should pass the parameters");n.strictEqual(u,t[2],"should pass the parameters")},f=new u(r);i.functionProxyConfigurations.functionCallMode=f;i.manyArgsFunctionProxy.callFunction(t);i.setInvokeMode();try{i.manyArgsFunctionProxy.callFunction(t)}catch(e){}});QUnit.test("callFunction - override mode Callback - invoking the function with other parameters should not call the override",0,function(n){var t=this,r=[{},{},{}],u=function(){n.ok(!1,"should not call override")},f=new i(u);t.functionProxyConfigurations.functionCallMode=f;t.manyArgsFunctionProxy.callFunction(r);t.setInvokeMode();t.manyArgsFunctionProxy.callFunction([r[0],r[1],{}])});QUnit.test("callFunction - override mode Returns - invoking the function with other parameters should not call the override",0,function(n){var t=this,i=[{},{},{}],u=function(){n.ok(!1,"should not call override")},f=new r(u);t.functionProxyConfigurations.functionCallMode=f;t.manyArgsFunctionProxy.callFunction(i);t.setInvokeMode();t.manyArgsFunctionProxy.callFunction([i[0],i[1],{}])});QUnit.test("callFunction - override mode Throws - invoking the function with other parameters should not call the override",0,function(n){var t=this,i=[{},{},{}],r=function(){n.ok(!1,"should not call override")},f=new u(r);t.functionProxyConfigurations.functionCallMode=f;t.manyArgsFunctionProxy.callFunction(i);t.setInvokeMode();try{t.manyArgsFunctionProxy.callFunction([i[0],i[1],{}])}catch(e){}});QUnit.test("callFunction - override mode Callback - invoking the function with other parameters should call the original function",3,function(n){var t=this,u=[{},{},{}],r=[u[0],u[1],{}],f,e;t.thisObject.onManyArgumentsFunctionCalled=function(t,i,u){n.strictEqual(t,r[0],"should call with the parameters");n.strictEqual(i,r[1],"should call with the parameters");n.strictEqual(u,r[2],"should call with the parameters")};f=function(){};e=new i(f);t.functionProxyConfigurations.functionCallMode=e;t.manyArgsFunctionProxy.callFunction(u);t.setInvokeMode();t.manyArgsFunctionProxy.callFunction(r)});QUnit.test("callFunction - override mode Returns - invoking the function with other parameters should call the original function",3,function(n){var t=this,u=[{},{},{}],i=[u[0],u[1],{}],f,e;t.thisObject.onManyArgumentsFunctionCalled=function(t,r,u){n.strictEqual(t,i[0],"should call with the parameters");n.strictEqual(r,i[1],"should call with the parameters");n.strictEqual(u,i[2],"should call with the parameters")};f=function(){};e=new r(f);t.functionProxyConfigurations.functionCallMode=e;t.manyArgsFunctionProxy.callFunction(u);t.setInvokeMode();t.manyArgsFunctionProxy.callFunction(i)});QUnit.test("callFunction - override mode Throws - invoking the function with other parameters should call the original function",3,function(n){var t=this,r=[{},{},{}],i=[r[0],r[1],{}],f,e;t.thisObject.onManyArgumentsFunctionCalled=function(t,r,u){n.strictEqual(t,i[0],"should call with the parameters");n.strictEqual(r,i[1],"should call with the parameters");n.strictEqual(u,i[2],"should call with the parameters")};f=function(){};e=new u(f);t.functionProxyConfigurations.functionCallMode=e;t.manyArgsFunctionProxy.callFunction(r);t.setInvokeMode();t.manyArgsFunctionProxy.callFunction(i)});QUnit.test("callFunction - override mode Callback - calling the function with ItIs and than invoking should call the override",3,function(n){var r=this;r.thisObject.onManyArgumentsFunctionCalled=function(){n.ok(!1,"should not call the original")};var f=1,e=2,u=3,o=function(t,i,r){n.strictEqual(t,f,"arguments should be the same");n.strictEqual(i,e,"arguments should be the same");n.strictEqual(r,u,"arguments should be the same")},s=new i(o);r.functionProxyConfigurations.functionCallMode=s;r.manyArgsFunctionProxy.callFunction([t.isAny(Number),t.isAny(Number),u]);r.setInvokeMode();r.manyArgsFunctionProxy.callFunction([f,e,u])});QUnit.test("callFunction - override mode Return - calling the function with ItIs and than invoking should call the override",3,function(n){var i=this;i.thisObject.onManyArgumentsFunctionCalled=function(){n.ok(!1,"should not call the original")};var f=1,e=2,u=3,o=function(t,i,r){n.strictEqual(t,f,"arguments should be the same");n.strictEqual(i,e,"arguments should be the same");n.strictEqual(r,u,"arguments should be the same")},s=new r(o);i.functionProxyConfigurations.functionCallMode=s;i.manyArgsFunctionProxy.callFunction([t.isAny(Number),t.isAny(Number),u]);i.setInvokeMode();i.manyArgsFunctionProxy.callFunction([f,e,u])});QUnit.test("callFunction - override mode Throws - calling the function with ItIs and than invoking should call the override",3,function(n){var i=this;i.thisObject.onManyArgumentsFunctionCalled=function(){n.ok(!1,"should not call the original")};var f=1,e=2,r=3,o=function(t,i,u){n.strictEqual(t,f,"arguments should be the same");n.strictEqual(i,e,"arguments should be the same");n.strictEqual(u,r,"arguments should be the same")},s=new u(o);i.functionProxyConfigurations.functionCallMode=s;i.manyArgsFunctionProxy.callFunction([t.isAny(Number),t.isAny(Number),r]);i.setInvokeMode();try{i.manyArgsFunctionProxy.callFunction([f,e,r])}catch(h){}});QUnit.test("callFunction - override mode Callback - calling the function with ItIs and than invoking with not matching argument should not call the override and call the original",3,function(n){var r=this;r.thisObject.onManyArgumentsFunctionCalled=function(t,i,r){n.strictEqual(t,f,"arguments should be the same");n.strictEqual(i,e,"arguments should be the same");n.strictEqual(r,u,"arguments should be the same")};var f=1,e="",u=3,o=function(){n.ok(!1,"should not call the override")},s=new i(o);r.functionProxyConfigurations.functionCallMode=s;r.manyArgsFunctionProxy.callFunction([t.isAny(Number),t.isAny(Number),u]);r.setInvokeMode();r.manyArgsFunctionProxy.callFunction([f,e,u])});QUnit.test("callFunction - override mode Returns - calling the function with ItIs and than invoking with not matching argument should not call the override and call the original",3,function(n){var i=this;i.thisObject.onManyArgumentsFunctionCalled=function(t,i,r){n.strictEqual(t,f,"arguments should be the same");n.strictEqual(i,e,"arguments should be the same");n.strictEqual(r,u,"arguments should be the same")};var f=1,e="",u=3,o=function(){n.ok(!1,"should not call the override")},s=new r(o);i.functionProxyConfigurations.functionCallMode=s;i.manyArgsFunctionProxy.callFunction([t.isAny(Number),t.isAny(Number),u]);i.setInvokeMode();i.manyArgsFunctionProxy.callFunction([f,e,u])});QUnit.test("callFunction - override mode Throws - calling the function with ItIs and than invoking with not matching argument should not call the override and call the original",3,function(n){var i=this;i.thisObject.onManyArgumentsFunctionCalled=function(t,i,u){n.strictEqual(t,f,"arguments should be the same");n.strictEqual(i,e,"arguments should be the same");n.strictEqual(u,r,"arguments should be the same")};var f=1,e="",r=3,o=function(){n.ok(!1,"should not call the override")},s=new u(o);i.functionProxyConfigurations.functionCallMode=s;i.manyArgsFunctionProxy.callFunction([t.isAny(Number),t.isAny(Number),r]);i.setInvokeMode();i.manyArgsFunctionProxy.callFunction([f,e,r])});QUnit.test("callFunction - override mode mixed - with ItIsAny should call all on invoke",3,function(n){var f=this,e={},o=function(){return n.ok(!0,"throws override should be called"),e},s={},h=function(){return n.ok(!0,"returns override should be called"),s},c=function(){n.ok(!0,"callback override should be called")},l=new u(o),a=new r(h),v=new i(c);f.functionProxyConfigurations.functionCallMode=l;f.oneArgsFunctionProxy.callFunction([t.isAny(Number)]);f.functionProxyConfigurations.functionCallMode=a;f.oneArgsFunctionProxy.callFunction([t.isAny(Number)]);f.functionProxyConfigurations.functionCallMode=v;f.oneArgsFunctionProxy.callFunction([t.isAny(Number)]);f.setInvokeMode();f.oneArgsFunctionProxy.callFunction([1])});QUnit.test("callFunction - override mode mixed - with ItIsAny should call all on invoke with same parameter",3,function(n){var t=this,f={},e={},o=function(t){return n.strictEqual(t,f,"arguments should match"),e},s={},h=function(t){return n.strictEqual(t,f,"arguments should match"),s},c=function(t){n.strictEqual(t,f,"arguments should match")},l=new u(o),a=new r(h),v=new i(c);t.functionProxyConfigurations.functionCallMode=l;t.oneArgsFunctionProxy.callFunction([f]);t.functionProxyConfigurations.functionCallMode=a;t.oneArgsFunctionProxy.callFunction([f]);t.functionProxyConfigurations.functionCallMode=v;t.oneArgsFunctionProxy.callFunction([f]);t.setInvokeMode();t.oneArgsFunctionProxy.callFunction([f])});QUnit.test("callFunction - override mode mixed - with value should call all on invoke",3,function(n){var t=this,f={},e=function(){return n.ok(!0,"throws override should be called"),f},o={},s=function(){return n.ok(!0,"returns override should be called"),o},h=function(){n.ok(!0,"callback override should be called")},c=new u(e),l=new r(s),a=new i(h);t.functionProxyConfigurations.functionCallMode=c;t.oneArgsFunctionProxy.callFunction([1]);t.functionProxyConfigurations.functionCallMode=l;t.oneArgsFunctionProxy.callFunction([1]);t.functionProxyConfigurations.functionCallMode=a;t.oneArgsFunctionProxy.callFunction([1]);t.setInvokeMode();t.oneArgsFunctionProxy.callFunction([1])});QUnit.test("callFunction - override mode mixed - with value should call only a callback on invoke",1,function(n){var t=this,f={},e=function(){return n.ok(!1,"throws override should not be called"),f},o={},s=function(){return n.ok(!1,"returns override should not be called"),o},h=function(){n.ok(!0,"callback override should be called")},c=new u(e),l=new r(s),a=new i(h);t.functionProxyConfigurations.functionCallMode=c;t.oneArgsFunctionProxy.callFunction([0]);t.functionProxyConfigurations.functionCallMode=l;t.oneArgsFunctionProxy.callFunction([0]);t.functionProxyConfigurations.functionCallMode=a;t.oneArgsFunctionProxy.callFunction([1]);t.setInvokeMode();t.oneArgsFunctionProxy.callFunction([1])});QUnit.test("callFunction - override mode mixed - with value should call only a returns on invoke",1,function(n){var t=this,f={},e=function(){return n.ok(!1,"throws override should not be called"),f},o={},s=function(){return n.ok(!0,"returns override should be called"),o},h=function(){n.ok(!1,"callback override should not be called")},c=new u(e),l=new r(s),a=new i(h);t.functionProxyConfigurations.functionCallMode=c;t.oneArgsFunctionProxy.callFunction([0]);t.functionProxyConfigurations.functionCallMode=l;t.oneArgsFunctionProxy.callFunction([1]);t.functionProxyConfigurations.functionCallMode=a;t.oneArgsFunctionProxy.callFunction([0]);t.setInvokeMode();t.oneArgsFunctionProxy.callFunction([1])});QUnit.test("callFunction - override mode mixed - with value should call only a throws on invoke",1,function(n){var t=this,f={},e=function(){return n.ok(!0,"throws override should be called"),f},o={},s=function(){return n.ok(!1,"returns override should not be called"),o},h=function(){n.ok(!1,"callback override should not be called")},c=new u(e),l=new r(s),a=new i(h);t.functionProxyConfigurations.functionCallMode=c;t.oneArgsFunctionProxy.callFunction([1]);t.functionProxyConfigurations.functionCallMode=l;t.oneArgsFunctionProxy.callFunction([0]);t.functionProxyConfigurations.functionCallMode=a;t.oneArgsFunctionProxy.callFunction([0]);t.setInvokeMode();try{t.oneArgsFunctionProxy.callFunction([1])}catch(v){}});QUnit.test("callFunction - override mode mixed - with ItIsAny should return the return value",1,function(n){var f=this,s={},h=function(){return s},e={},c=function(){return e},l=function(){},a=new u(h),v=new r(c),y=new i(l),o;f.functionProxyConfigurations.functionCallMode=a;f.oneArgsFunctionProxy.callFunction([t.isAny(Number)]);f.functionProxyConfigurations.functionCallMode=v;f.oneArgsFunctionProxy.callFunction([t.isAny(Number)]);f.functionProxyConfigurations.functionCallMode=y;f.oneArgsFunctionProxy.callFunction([t.isAny(Number)]);f.setInvokeMode();o=f.oneArgsFunctionProxy.callFunction([1]);n.strictEqual(o,e,"should throw the error")});QUnit.test("callFunction - override mode mixed - with ItIsAny should throw the error",1,function(n){var f=this,e={},o=function(){return e},s={},h=function(){return s},c=function(){},l=new u(o),a=new r(h),v=new i(c);f.functionProxyConfigurations.functionCallMode=a;f.oneArgsFunctionProxy.callFunction([t.isAny(Number)]);f.functionProxyConfigurations.functionCallMode=l;f.oneArgsFunctionProxy.callFunction([t.isAny(Number)]);f.functionProxyConfigurations.functionCallMode=v;f.oneArgsFunctionProxy.callFunction([t.isAny(Number)]);f.setInvokeMode();try{f.oneArgsFunctionProxy.callFunction([1])}catch(y){n.strictEqual(y,e,"should return the return value")}});QUnit.test("callFunction - override mode mixed - with ItIsAny should throw the last error",1,function(n){var r=this,e={},o=function(){return e},f={},s=function(){return f},h=function(){},c=new u(o),l=new u(s),a=new i(h);r.functionProxyConfigurations.functionCallMode=c;r.oneArgsFunctionProxy.callFunction([t.isAny(Number)]);r.functionProxyConfigurations.functionCallMode=l;r.oneArgsFunctionProxy.callFunction([t.isAny(Number)]);r.functionProxyConfigurations.functionCallMode=a;r.oneArgsFunctionProxy.callFunction([t.isAny(Number)]);r.setInvokeMode();try{r.oneArgsFunctionProxy.callFunction([1])}catch(v){n.strictEqual(v,f,"should throw the second error")}});QUnit.test("callFunction - override mode mixed - with ItIsAny should return the last return value",1,function(n){var u=this,o={},s=function(){return o},f={},h=function(){return f},c=function(){},l=new r(s),a=new r(h),v=new i(c),e;u.functionProxyConfigurations.functionCallMode=l;u.oneArgsFunctionProxy.callFunction([t.isAny(Number)]);u.functionProxyConfigurations.functionCallMode=a;u.oneArgsFunctionProxy.callFunction([t.isAny(Number)]);u.functionProxyConfigurations.functionCallMode=v;u.oneArgsFunctionProxy.callFunction([t.isAny(Number)]);u.setInvokeMode();e=u.oneArgsFunctionProxy.callFunction([1]);n.strictEqual(e,f,"should return the second return value")});QUnit.test("callFunction - override mode mixed - with ItIsAny should call all duplicates",7,function(n){var u=this,h={},f=function(){return n.ok(!0,"1st return should be called"),h},c={},g=function(){return n.ok(!0,"1st throws should be called"),c},l=function(){n.ok(!0,"1st callbeck should be called")},a={},nt=function(){return n.ok(!0,"2nd throws should be called"),a},e={},o=function(){return n.ok(!0,"2nd return should be called"),e},v=function(){n.ok(!0,"2nd callbeck should be called")},y=new r(f),p=new r(o),w=new r(f),b=new r(o),k=new i(l),d=new i(v),s;u.functionProxyConfigurations.functionCallMode=w;u.oneArgsFunctionProxy.callFunction([t.isAny(Number)]);u.functionProxyConfigurations.functionCallMode=y;u.oneArgsFunctionProxy.callFunction([t.isAny(Number)]);u.functionProxyConfigurations.functionCallMode=k;u.oneArgsFunctionProxy.callFunction([t.isAny(Number)]);u.functionProxyConfigurations.functionCallMode=p;u.oneArgsFunctionProxy.callFunction([t.isAny(Number)]);u.functionProxyConfigurations.functionCallMode=d;u.oneArgsFunctionProxy.callFunction([t.isAny(Number)]);u.functionProxyConfigurations.functionCallMode=b;u.oneArgsFunctionProxy.callFunction([t.isAny(Number)]);u.setInvokeMode();s=u.oneArgsFunctionProxy.callFunction([1]);n.strictEqual(s,e,"should return the second return value")});QUnit.test("callFunction - strict - no setup should throw error",1,function(n){var t=this;t.functionProxyConfigurations.isStrict=!0;try{t.noArgsFunctionProxy.callFunction([])}catch(i){n.ok(!0,"should throw error")}});QUnit.test("callFunction - strict - has callback setup should not thow error",0,function(n){var t=this,r;t.functionProxyConfigurations.isStrict=!0;r=new i(function(){});t.functionProxyConfigurations.functionCallMode=r;t.noArgsFunctionProxy.callFunction([]);try{t.noArgsFunctionProxy.callFunction([])}catch(u){n.ok(!1,"should not throw error")}});QUnit.test("callFunction - strict - has returns setup should not thow error",0,function(n){var t=this,i;t.functionProxyConfigurations.isStrict=!0;i=new r(function(){return 1});t.functionProxyConfigurations.functionCallMode=i;t.noArgsFunctionProxy.callFunction([]);try{t.noArgsFunctionProxy.callFunction([])}catch(u){n.ok(!1,"should not throw error")}});QUnit.test("callFunction - strict - has throws setup should thow the configured error",1,function(n){var t=this,i,r;t.functionProxyConfigurations.isStrict=!0;i={};r=new u(function(){throw i;});t.functionProxyConfigurations.functionCallMode=r;t.noArgsFunctionProxy.callFunction([]);t.setInvokeMode();try{t.noArgsFunctionProxy.callFunction([])}catch(f){n.strictEqual(i,f,"should throw the configured error")}})}(Tests||(Tests={})),function(n){var u=moqJS.FunctionSetup,f=moqJS.FunctionProxyConfigurations,i=moqJS.OverrideFunctionCallMode,t=moqJS.InvokeFunctionCallMode,o=moqJS.CallbackOverrideFunctionCallMode,r=moqJS.ReturnsOverrideFunctionCallMode,e=moqJS.ThrowsOverrideFunctionCallMode,s=function(){function t(){this.beforeEach=function(){var t=this;t.argument={};t.testObject=new n.TestObject;t.functionProxyConfigurations=new f;t.oneArgumentFunctionSetup=new u(function(n){return n.oneArgumentsFunction(t.argument)},t.testObject,t.functionProxyConfigurations);t.returning1FunctionSetup=new u(function(n){return n.returning1Function()},t.testObject,t.functionProxyConfigurations)};this.afterEach=function(){}}return t}();QUnit.module("FunctionSetup",new s);QUnit.test("constructor - should initialize correctly",3,function(t){var r=new n.TestObject,e=function(n){return n.returning1Function()},o=new f,i=new u(e,r,o);t.strictEqual(i.object,r,"testObject should be same");t.strictEqual(i.functionCall,e,"functionCall should be same");t.strictEqual(i.functionProxyConfigurations,o,"functionProxyConfigurations should be same")});QUnit.test("returns - should call functionCall",1,function(n){var t=this;t.testObject.onReturnung1FunctionCalled=function(){n.ok(!0,"should be called")};t.returning1FunctionSetup.returns(4)});QUnit.test("returns - should call when the override type is returns",1,function(n){var t=this;t.testObject.onReturnung1FunctionCalled=function(){var i=t.functionProxyConfigurations.functionCallMode;n.ok(i instanceof r,"functionCallMode should be returns")};t.returning1FunctionSetup.returns({})});QUnit.test("returns - should call when the override contains function that returns the new value",1,function(n){var t=this,i={};t.testObject.onReturnung1FunctionCalled=function(){var r=t.functionProxyConfigurations.functionCallMode,u=r.override();n.strictEqual(u,i,"should return the setup value")};t.returning1FunctionSetup.returns(i)});QUnit.test("returns - should call when the override contains function that returns the new value 2",1,function(n){var t=this,i={};t.testObject.onOneArgumentsFunctionCalled=function(){var r=t.functionProxyConfigurations.functionCallMode,u=r.override();n.strictEqual(u,i,"should return the setup value")};t.oneArgumentFunctionSetup.returns(i)});QUnit.test("returns - should not call other function",0,function(n){var t=this,i;t.testObject.onReturnung1FunctionCalled=function(){n.ok(!1,"should not call other function")};i={};t.oneArgumentFunctionSetup.returns(i)});QUnit.test("returns - should call functionCall with same parameter",1,function(n){var t=this;t.testObject.onOneArgumentsFunctionCalled=function(i){n.strictEqual(i,t.argument,"should be called with same argument")};t.oneArgumentFunctionSetup.returns(4)});QUnit.test("returns - after returns functionCallMode should be InvokeFunctionCallMode",1,function(n){var i=this;i.oneArgumentFunctionSetup.returns(4);n.ok(i.functionProxyConfigurations.functionCallMode instanceof t,"functionCallMode should be InvokeFunctionCallMode")});QUnit.test("returns - should return the same function setup object",1,function(n){var t=this,i=t.oneArgumentFunctionSetup.returns(4);n.strictEqual(i,t.oneArgumentFunctionSetup,"should return the same setup")});QUnit.test("returnsInOrder - should call functionCall",1,function(n){var t=this;t.testObject.onReturnung1FunctionCalled=function(){n.ok(!0,"should be called")};t.returning1FunctionSetup.returnsInOrder([4,5])});QUnit.test("returnsInOrder - should call when the override type is returns",1,function(n){var t=this;t.testObject.onReturnung1FunctionCalled=function(){var i=t.functionProxyConfigurations.functionCallMode;n.ok(i instanceof r,"functionCallMode should be returns")};t.returning1FunctionSetup.returnsInOrder([{},{},{}])});QUnit.test("returnsInOrder - should call when the override contains function that returns the new values",4,function(n){var t=this,i={},r={},u={};t.testObject.onReturnung1FunctionCalled=function(){var f=t.functionProxyConfigurations.functionCallMode,e=f.override(),o=f.override(),s=f.override(),h=f.override();n.strictEqual(e,i,"should return the setup value1");n.strictEqual(o,r,"should return the setup value2");n.strictEqual(s,u,"should return the setup value3");n.strictEqual(h,undefined,"should return undefined")};t.returning1FunctionSetup.returnsInOrder([i,r,u])});QUnit.test("returnsInOrder - should call when the override contains function that returns the new values 2",4,function(n){var t=this,i={},r={},u={};t.testObject.onOneArgumentsFunctionCalled=function(){var f=t.functionProxyConfigurations.functionCallMode,e=f.override(),o=f.override(),s=f.override(),h=f.override();n.strictEqual(e,i,"should return the setup value1");n.strictEqual(o,r,"should return the setup value2");n.strictEqual(s,u,"should return the setup value3");n.strictEqual(h,undefined,"should return undefined")};t.oneArgumentFunctionSetup.returnsInOrder([i,r,u])});QUnit.test("returnsInOrder - should not call other function",0,function(n){var t=this,i;t.testObject.onReturnung1FunctionCalled=function(){n.ok(!1,"should not call other function")};i={};t.oneArgumentFunctionSetup.returnsInOrder([i])});QUnit.test("returnsInOrder - should call functionCall with same parameter",1,function(n){var t=this;t.testObject.onOneArgumentsFunctionCalled=function(i){n.strictEqual(i,t.argument,"should be called with same argument")};t.oneArgumentFunctionSetup.returnsInOrder([4])});QUnit.test("returnsInOrder - after returns functionCallMode should be InvokeFunctionCallMode",1,function(n){var i=this;i.oneArgumentFunctionSetup.returnsInOrder([4]);n.ok(i.functionProxyConfigurations.functionCallMode instanceof t,"functionCallMode should be InvokeFunctionCallMode")});QUnit.test("returnsInOrder - should return the same function setup object",1,function(n){var t=this,i=t.oneArgumentFunctionSetup.returnsInOrder([4]);n.strictEqual(i,t.oneArgumentFunctionSetup,"should return the same setup")});QUnit.test("lazyReturns - should call functionCall",1,function(n){var t=this;t.testObject.onReturnung1FunctionCalled=function(){n.ok(!0,"should be called")};t.returning1FunctionSetup.lazyReturns(function(){return 4})});QUnit.test("lazyReturns - should call when the functionCallMode is OverrideFunctionCallMode",1,function(n){var t=this,r={},u=function(){return r};t.testObject.onReturnung1FunctionCalled=function(){var r=t.functionProxyConfigurations.functionCallMode;n.ok(r instanceof i,"functionCallMode should be should OverrideFunctionCallMode")};t.returning1FunctionSetup.lazyReturns(u)});QUnit.test("lazyReturns - should call when the override type is returns",1,function(n){var t=this,i={},u=function(){return i};t.testObject.onReturnung1FunctionCalled=function(){var i=t.functionProxyConfigurations.functionCallMode;n.ok(i instanceof r,"functionCallMode should be returns")};t.returning1FunctionSetup.lazyReturns(u)});QUnit.test("lazyReturns - should call when the override contains function that returns the new value",1,function(n){var t=this,i={},r=function(){return i};t.testObject.onReturnung1FunctionCalled=function(){var r=t.functionProxyConfigurations.functionCallMode,u=r.override();n.strictEqual(u,i,"should return the setup value")};t.returning1FunctionSetup.lazyReturns(r)});QUnit.test("lazyReturns - should call when the override contains function that returns the new value 2",1,function(n){var t=this,i={},r=function(){return i};t.testObject.onOneArgumentsFunctionCalled=function(){var r=t.functionProxyConfigurations.functionCallMode,u=r.override();n.strictEqual(u,i,"should return the setup value")};t.oneArgumentFunctionSetup.lazyReturns(r)});QUnit.test("lazyReturns - should not call other function",0,function(n){var t=this,i;t.testObject.onReturnung1FunctionCalled=function(){n.ok(!1,"should not call other function")};i=function(){};t.oneArgumentFunctionSetup.lazyReturns(i)});QUnit.test("lazyReturns - should call functionCall with same parameter",1,function(n){var t=this;t.testObject.onOneArgumentsFunctionCalled=function(i){n.strictEqual(i,t.argument,"should be called with same argument")};t.oneArgumentFunctionSetup.lazyReturns(function(){return 4})});QUnit.test("lazyReturns - after returns functionCallMode should be InvokeFunctionCallMode",1,function(n){var i=this;i.oneArgumentFunctionSetup.lazyReturns(function(){return 4});n.ok(i.functionProxyConfigurations.functionCallMode instanceof t,"functionCallMode should be InvokeFunctionCallMode")});QUnit.test("lazyReturns - should return same function setup object",1,function(n){var t=this,i=t.oneArgumentFunctionSetup.lazyReturns(function(){return 4});n.strictEqual(i,t.oneArgumentFunctionSetup,"should rerturn same function setup")});QUnit.test("lazyReturnsInOrder - should call functionCall",1,function(n){var t=this;t.testObject.onReturnung1FunctionCalled=function(){n.ok(!0,"should be called")};t.returning1FunctionSetup.lazyReturnsInOrder([function(){return 4},function(){return 5}])});QUnit.test("lazyReturnsInOrder - should call when the functionCallMode is OverrideFunctionCallMode",1,function(n){var t=this,r={},u=function(){return r};t.testObject.onReturnung1FunctionCalled=function(){var r=t.functionProxyConfigurations.functionCallMode;n.ok(r instanceof i,"functionCallMode should be should OverrideFunctionCallMode")};t.returning1FunctionSetup.lazyReturnsInOrder([u])});QUnit.test("lazyReturnsInOrder - should call when the override type is returns",1,function(n){var t=this,i={},u=function(){return i};t.testObject.onReturnung1FunctionCalled=function(){var i=t.functionProxyConfigurations.functionCallMode;n.ok(i instanceof r,"functionCallMode should be returns")};t.returning1FunctionSetup.lazyReturnsInOrder([u])});QUnit.test("lazyReturnsInOrder - should call when the override contains function that returns the new values",4,function(n){var t=this,i={},r={},u={},f=function(){return i},e=function(){return r},o=function(){return u};t.testObject.onReturnung1FunctionCalled=function(){var f=t.functionProxyConfigurations.functionCallMode,e=f.override(),o=f.override(),s=f.override(),h=f.override();n.strictEqual(e,i,"should return the setup value1");n.strictEqual(o,r,"should return the setup value2");n.strictEqual(s,u,"should return the setup value3");n.strictEqual(h,undefined,"should return undefined")};t.returning1FunctionSetup.lazyReturnsInOrder([f,e,o])});QUnit.test("lazyReturnsInOrder - should call when the override contains function that returns the new values 2",4,function(n){var t=this,i={},r={},u={},f=function(){return i},e=function(){return r},o=function(){return u};t.testObject.onOneArgumentsFunctionCalled=function(){var f=t.functionProxyConfigurations.functionCallMode,e=f.override(),o=f.override(),s=f.override(),h=f.override();n.strictEqual(e,i,"should return the setup value1");n.strictEqual(o,r,"should return the setup value2");n.strictEqual(s,u,"should return the setup value3");n.strictEqual(h,undefined,"should return the setup value")};t.oneArgumentFunctionSetup.lazyReturnsInOrder([f,e,o])});QUnit.test("lazyReturnsInOrder - should not call other function",0,function(n){var t=this,i;t.testObject.onReturnung1FunctionCalled=function(){n.ok(!1,"should not call other function")};i=function(){};t.oneArgumentFunctionSetup.lazyReturnsInOrder([i])});QUnit.test("lazyReturnsInOrder - should call functionCall with same parameter",1,function(n){var t=this;t.testObject.onOneArgumentsFunctionCalled=function(i){n.strictEqual(i,t.argument,"should be called with same argument")};t.oneArgumentFunctionSetup.lazyReturnsInOrder([function(){return 4}])});QUnit.test("lazyReturnsInOrder - after returns functionCallMode should be InvokeFunctionCallMode",1,function(n){var i=this;i.oneArgumentFunctionSetup.lazyReturnsInOrder([function(){return 4}]);n.ok(i.functionProxyConfigurations.functionCallMode instanceof t,"functionCallMode should be InvokeFunctionCallMode")});QUnit.test("lazyReturnsInOrder - should return same function setup object",1,function(n){var t=this,i=t.oneArgumentFunctionSetup.lazyReturnsInOrder([function(){return 4}]);n.strictEqual(i,t.oneArgumentFunctionSetup,"should rerturn same function setup")});QUnit.test("callback - should call functionCall",1,function(n){var t=this,i;t.testObject.onReturnung1FunctionCalled=function(){n.ok(!0,"should be called")};i=function(){};t.returning1FunctionSetup.callback(i)});QUnit.test("callback - should call when the functionCallMode type is OverrideFunctionCallMode",1,function(n){var t=this,r=function(){};t.testObject.onReturnung1FunctionCalled=function(){var r=t.functionProxyConfigurations.functionCallMode;n.ok(r instanceof i,"functionCallMode should be OverrideFunctionCallMode")};t.returning1FunctionSetup.callback(r)});QUnit.test("callback - should call when the override type is Callback",1,function(n){var t=this,i=function(){};t.testObject.onReturnung1FunctionCalled=function(){var i=t.functionProxyConfigurations.functionCallMode;n.ok(i instanceof o,"functionCallMode should be callback")};t.returning1FunctionSetup.callback(i)});QUnit.test("callback - should call when the override contains the callback",1,function(n){var t=this,i=function(){n.ok(!0,"callback was called")};t.testObject.onReturnung1FunctionCalled=function(){var n=t.functionProxyConfigurations.functionCallMode;n.override()};t.returning1FunctionSetup.callback(i)});QUnit.test("callback - should call when the override contains the callback with same parameter",2,function(n){var t=this,i=function(i){n.ok(!0,"callback was called");n.strictEqual(i,t.argument,"should be the same parameter")};t.testObject.onOneArgumentsFunctionCalled=function(n){var i=t.functionProxyConfigurations.functionCallMode;i.override(n)};t.oneArgumentFunctionSetup.callback(i)});QUnit.test("callback - should not call other function",0,function(n){var t=this,i;t.testObject.onReturnung1FunctionCalled=function(){n.ok(!1,"should not call other function")};i=function(){};t.oneArgumentFunctionSetup.callback(i)});QUnit.test("callback - should call functionCall with same parameter",1,function(n){var t=this,i;t.testObject.onOneArgumentsFunctionCalled=function(i){n.strictEqual(i,t.argument,"should be called with same argument")};i=function(){};t.oneArgumentFunctionSetup.callback(i)});QUnit.test("callback - should return same function setup object",1,function(n){var t=this,i=function(){},r=t.oneArgumentFunctionSetup.callback(i);n.strictEqual(r,t.oneArgumentFunctionSetup,"should rerturn same function setup")});QUnit.test("callback - after callback functionCallMode should be InvokeFunctionCallMode",1,function(n){var i=this;i.oneArgumentFunctionSetup.callback(function(){});n.ok(i.functionProxyConfigurations.functionCallMode instanceof t,"functionCallMode should be InvokeFunctionCallMode")});QUnit.test("throws - should call functionCall",1,function(n){var t=this;t.testObject.onReturnung1FunctionCalled=function(){n.ok(!0,"should be called")};t.returning1FunctionSetup.throws(4)});QUnit.test("throws - should call when the functionCallMode is OverrideFunctionCallMode",1,function(n){var t=this;t.testObject.onReturnung1FunctionCalled=function(){var r=t.functionProxyConfigurations.functionCallMode;n.ok(r instanceof i,"functionCallMode should be OverrideFunctionCallMode")};t.returning1FunctionSetup.throws({})});QUnit.test("throws - should call when the override type is Throws",1,function(n){var t=this;t.testObject.onReturnung1FunctionCalled=function(){var i=t.functionProxyConfigurations.functionCallMode;n.ok(i instanceof e,"functionCallMode should be throws")};t.returning1FunctionSetup.throws({})});QUnit.test("throws - should call when the override contains function that returns the error",1,function(n){var t=this,i={};t.testObject.onReturnung1FunctionCalled=function(){var r=t.functionProxyConfigurations.functionCallMode,u=r.override();n.strictEqual(u,i,"should throw the error")};t.returning1FunctionSetup.throws(i)});QUnit.test("throws - should call when the override contains function that throws the error 2",1,function(n){var t=this,i={};t.testObject.onOneArgumentsFunctionCalled=function(){var r=t.functionProxyConfigurations.functionCallMode,u=r.override();n.strictEqual(u,i,"should throw the error")};t.oneArgumentFunctionSetup.throws(i)});QUnit.test("throws - should not call other function",0,function(n){var t=this,i;t.testObject.onReturnung1FunctionCalled=function(){n.ok(!1,"should not call other function")};i={};t.oneArgumentFunctionSetup.throws(i)});QUnit.test("throws - should call functionCall with same parameter",1,function(n){var t=this;t.testObject.onOneArgumentsFunctionCalled=function(i){n.strictEqual(i,t.argument,"should be called with same argument")};t.oneArgumentFunctionSetup.throws(4)});QUnit.test("throws - after callback functionCallMode should be InvokeFunctionCallMode",1,function(n){var i=this;i.oneArgumentFunctionSetup.throws({});n.ok(i.functionProxyConfigurations.functionCallMode instanceof t,"functionCallMode should be InvokeFunctionCallMode")});QUnit.test("throws - should return same function setup object",1,function(n){var t=this,i=t.oneArgumentFunctionSetup.throws({});n.strictEqual(i,t.oneArgumentFunctionSetup,"should rerturn same function setup")});QUnit.test("lazyThrows - should call functionCall",1,function(n){var t=this;t.testObject.onReturnung1FunctionCalled=function(){n.ok(!0,"should be called")};t.returning1FunctionSetup.lazyThrows(function(){return"error"})});QUnit.test("lazyThrows - should call when the functionCallMode is OverrideFunctionCallMode",1,function(n){var t=this,r={},u=function(){return r};t.testObject.onReturnung1FunctionCalled=function(){var r=t.functionProxyConfigurations.functionCallMode;n.ok(r instanceof i,"functionCallMode should be should OverrideFunctionCallMode")};t.returning1FunctionSetup.lazyThrows(u)});QUnit.test("lazyThrows - should call when the override type is throws",1,function(n){var t=this,i={},r=function(){return i};t.testObject.onReturnung1FunctionCalled=function(){var i=t.functionProxyConfigurations.functionCallMode;n.ok(i instanceof e,"functionCallMode should be throws")};t.returning1FunctionSetup.lazyThrows(r)});QUnit.test("lazyThrows - should call when the override contains function that returns the error",1,function(n){var t=this,i={},r=function(){return i};t.testObject.onReturnung1FunctionCalled=function(){var r=t.functionProxyConfigurations.functionCallMode,u=r.override();n.strictEqual(u,i,"should throw the setup error")};t.returning1FunctionSetup.lazyThrows(r)});QUnit.test("lazyThrows - should call when the override contains function that throws the error 2",1,function(n){var t=this,i={},r=function(){return i};t.testObject.onOneArgumentsFunctionCalled=function(){var r=t.functionProxyConfigurations.functionCallMode,u=r.override();n.strictEqual(u,i,"should return the setup value")};t.oneArgumentFunctionSetup.lazyThrows(r)});QUnit.test("lazyThrows - should not call other function",0,function(n){var t=this,i;t.testObject.onReturnung1FunctionCalled=function(){n.ok(!1,"should not call other function")};i=function(){};t.oneArgumentFunctionSetup.lazyThrows(i)});QUnit.test("lazyThrows - should call functionCall with same parameter",1,function(n){var t=this;t.testObject.onOneArgumentsFunctionCalled=function(i){n.strictEqual(i,t.argument,"should be called with same argument")};t.oneArgumentFunctionSetup.lazyThrows(function(){return 4})});QUnit.test("lazyThrows - after returns functionCallMode should be InvokeFunctionCallMode",1,function(n){var i=this;i.oneArgumentFunctionSetup.lazyThrows(function(){return 4});n.ok(i.functionProxyConfigurations.functionCallMode instanceof t,"functionCallMode should be InvokeFunctionCallMode")});QUnit.test("lazyThrows - should return same function setup object",1,function(n){var t=this,i=t.oneArgumentFunctionSetup.lazyThrows(function(){return 4});n.strictEqual(i,t.oneArgumentFunctionSetup,"should rerturn same function setup")})}(Tests||(Tests={})),function(){var n=moqJS.It,i=function(){function n(){}return n}(),t=function(n){function t(){n.apply(this,arguments)}return __extends(t,n),t}(i),r=function(){function n(){this.beforeEach=function(){var n=this};this.afterEach=function(){}}return n}();QUnit.module("It",new r);QUnit.test("isAny - expect number check number should return true",1,function(t){var i=Number,r=n.isAny(i),u=r.match(1);t.strictEqual(u,!0,"should match the type")});QUnit.test("isAny - expect number check string should return false",1,function(t){var i=Number,r=n.isAny(i),u=r.match("");t.strictEqual(u,!1,"should not match the type")});QUnit.test("isAny - expect string check number should return false",1,function(t){var i=String,r=n.isAny(i),u=r.match(1);t.strictEqual(u,!1,"should not match the type")});QUnit.test("isAny - expect string check empty string should return true",1,function(t){var i=String,r=n.isAny(i),u=r.match("");t.strictEqual(u,!0,"should match the type")});QUnit.test("isAny - expect string check string should return true",1,function(t){var i=String,r=n.isAny(i),u=r.match("some text");t.strictEqual(u,!0,"should match the type")});QUnit.test("isAny - expect string check null should return false",1,function(t){var i=String,r=n.isAny(i),u=r.match(null);t.strictEqual(u,!1,"should not match the type")});QUnit.test("isAny - expect string check undefined should return false",1,function(t){var i=String,r=undefined,u=n.isAny(i),f=u.match(r);t.strictEqual(f,!1,"should not match the type")});QUnit.test("isAny - expect number check null should return false",1,function(t){var i=Number,r=n.isAny(i),u=r.match(null);t.strictEqual(u,!1,"should not match the type")});QUnit.test("isAny - expect number check undefined should return false",1,function(t){var i=Number,r=undefined,u=n.isAny(i),f=u.match(r);t.strictEqual(f,!1,"should not match the type")});QUnit.test("isAny - expect parent check son should return true",1,function(r){var u=i,f=new t,e=n.isAny(u),o=e.match(f);r.strictEqual(o,!0,"should match the type")});QUnit.test("isAny - expect parent check parent should return true",1,function(t){var r=i,u=new i,f=n.isAny(r),e=f.match(u);t.strictEqual(e,!0,"should match the type")});QUnit.test("isAny - expect son check parent should return false",1,function(r){var u=t,f=new i,e=n.isAny(u),o=e.match(f);r.strictEqual(o,!1,"should not match the type")});QUnit.test("isAny - expect son check son should return true",1,function(i){var r=t,u=new t,f=n.isAny(r),e=f.match(u);i.strictEqual(e,!0,"should match the type")});QUnit.test("isAny - expect son check null should return false",1,function(i){var r=t,u=n.isAny(r),f=u.match(null);i.strictEqual(f,!1,"should not match the type")});QUnit.test("isAny - expect son check undefined should return false",1,function(i){var r=t,u=undefined,f=n.isAny(r),e=f.match(u);i.strictEqual(e,!1,"should not match the type")});QUnit.test("isAny - expect number check [] should return false",1,function(t){var i=Number,r=n.isAny(i),u=r.match([]);t.strictEqual(u,!1,"should not match the type")});QUnit.test("isAny - expect number check Array should return false",1,function(t){var i=Number,r=n.isAny(i),u=r.match([]);t.strictEqual(u,!1,"should not match the type")});QUnit.test("isAny - expect array check number should return false",1,function(t){var i=Array,r=n.isAny(i),u=r.match(1);t.strictEqual(u,!1,"should not match the type")});QUnit.test("isAny - expect array check [] should return true",1,function(t){var i=Array,r=n.isAny(i),u=r.match([]);t.strictEqual(u,!0,"should match the type")});QUnit.test("isAny - expect array check array should return true",1,function(t){var i=Array,r=n.isAny(i),u=r.match([]);t.strictEqual(u,!0,"should match the type")});QUnit.test("isAny - expect array check not empty [] should return true",1,function(t){var i=Array,r=n.isAny(i),u=r.match([1,"",{}]);t.strictEqual(u,!0,"should match the type")});QUnit.test("isAny - expect array check not empty array should return true",1,function(t){var i=Array,r=n.isAny(i),u=r.match([1,"",{}]);t.strictEqual(u,!0,"should match the type")});QUnit.test("is - should call the function passed with the argument",1,function(t){var u=this,i={},r=n.is(function(n){return t.strictEqual(n,i,"Should pass the argument"),!0});r.match(i)});QUnit.test("is - function returns true should return true",1,function(t){var u=this,i=n.is(function(){return!0}),r=i.match({});t.strictEqual(r,!0,"when passed function returns true should return true")});QUnit.test("is - function returns false should return false",1,function(t){var u=this,i=n.is(function(){return!1}),r=i.match({});t.strictEqual(r,!1,"when passed function returns false should return false")});QUnit.test("isInRange - not a number should return false",1,function(t){var u=this,i=n.isInRange(1,2),r=i.match({});t.strictEqual(r,!1,"when passed not a number should return false")});QUnit.test("isInRange - min range number should return true",1,function(t){var f=this,i=1,r=n.isInRange(i,3),u=r.match(i);t.strictEqual(u,!0,"when passed min range number should return true")});QUnit.test("isInRange - max range number should return true",1,function(t){var f=this,i=3,r=n.isInRange(1,i),u=r.match(i);t.strictEqual(u,!0,"when passed max range number should return true")});QUnit.test("isInRange - middle number should return true",1,function(t){var u=this,i=n.isInRange(1,3),r=i.match(2);t.strictEqual(r,!0,"when passed middle range number should return true")});QUnit.test("isRegExp - not string should return false",1,function(t){var u=this,i=n.isRegExp(new RegExp("[1-8]")),r=i.match(1);t.strictEqual(r,!1,"on not a string should return false")});QUnit.test("isRegExp - not string should return false 2",1,function(t){var u=this,i=n.isRegExp(new RegExp("[1-8]")),r=i.match({});t.strictEqual(r,!1,"on not a string should return false")});QUnit.test("isRegExp - not matching should return false",1,function(t){var u=this,i=n.isRegExp(new RegExp("[1-8]")),r=i.match("9");t.strictEqual(r,!1,"on not matching should return false")});QUnit.test("isRegExp - matching should return true",1,function(t){var u=this,i=n.isRegExp(new RegExp("[1-8]")),r=i.match("8");t.strictEqual(r,!0,"on matching should return false")})}(Tests||(Tests={})),function(n){var u=moqJS.ItIsBase,i=moqJS.It,t=moqJS.Times,r=moqJS.Mole,f=function(){function t(){this.beforeEach=function(){var t=this;t.testObject=new n.TestObject;t.mole=new r(t.testObject)};this.afterEach=function(){var n=this;n.mole.dispose()}}return t}();QUnit.module("Mole",new f);QUnit.test("constructor - should initialize correctly",1,function(t){var i=new n.TestObject,u=new r(i);t.strictEqual(u.object,i)});QUnit.test("noArgumentsFunction - should call only the original function",function(n){QUnit.expect(1);var t=this,i=function(){return n.ok(!1,"should not be called")};t.testObject.onNoArgumentsFunctionCalled=function(){n.ok(!0,"no arguments function should be called")};t.testObject.onOneArgumentsFunctionCalled=i;t.testObject.onManyArgumentsFunctionCalled=i;t.testObject.onGetterCalled=i;t.testObject.onSetterOfGetterAndSetterCalled=i;t.testObject.onGetterOfGetterAndSetterCalled=i;t.testObject.onSetterCalled=i;t.testObject.noArgumentsFunction()});QUnit.test("oneArgumentsFunction - one arguments should call only the original function",function(n){QUnit.expect(1);var t=this,i=function(){return n.ok(!1,"should not be called")},r={};t.testObject.onNoArgumentsFunctionCalled=i;t.testObject.onManyArgumentsFunctionCalled=i;t.testObject.onGetterCalled=i;t.testObject.onSetterOfGetterAndSetterCalled=i;t.testObject.onGetterOfGetterAndSetterCalled=i;t.testObject.onSetterCalled=i;t.testObject.onOneArgumentsFunctionCalled=function(t){n.strictEqual(t,r,"The arguments should be the same")};t.testObject.oneArgumentsFunction(r)});QUnit.test("manyArgumentsFunction - many arguments should call only the original function",function(n){QUnit.expect(3);var t=this,i=function(){return n.ok(!1,"should not be called")},r={},u={},f={};t.testObject.onNoArgumentsFunctionCalled=i;t.testObject.onGetterCalled=i;t.testObject.onSetterOfGetterAndSetterCalled=i;t.testObject.onGetterOfGetterAndSetterCalled=i;t.testObject.onSetterCalled=i;t.testObject.onOneArgumentsFunctionCalled=i;t.testObject.onManyArgumentsFunctionCalled=function(t,i,e){n.strictEqual(t,r,"The 1st argument should be the same");n.strictEqual(i,u,"The 2nd argument should be the same");n.strictEqual(e,f,"The 3rd argument should be the same")};t.testObject.manyArgumentsFunction(r,u,f)});QUnit.test("getter - should call only the original getter",2,function(n){var t=this,i=function(){return n.ok(!1,"should not be called")},r,u;t.testObject.onNoArgumentsFunctionCalled=i;t.testObject.onOneArgumentsFunctionCalled=i;t.testObject.onManyArgumentsFunctionCalled=i;t.testObject.onSetterOfGetterAndSetterCalled=i;t.testObject.onGetterOfGetterAndSetterCalled=i;t.testObject.onSetterCalled=i;t.testObject.onGetterCalled=function(){return n.ok(!0,"should call the getter")};r={};t.testObject.getterValue=r;u=t.testObject.getter;n.strictEqual(u,r,"Should return the getter value")});QUnit.test("setter - should call only the original setter",2,function(n){var t=this,i=function(){return n.ok(!1,"should not be called")},r;t.testObject.onNoArgumentsFunctionCalled=i;t.testObject.onOneArgumentsFunctionCalled=i;t.testObject.onManyArgumentsFunctionCalled=i;t.testObject.onSetterOfGetterAndSetterCalled=i;t.testObject.onGetterOfGetterAndSetterCalled=i;t.testObject.onGetterCalled=i;t.testObject.onSetterCalled=function(){return n.ok(!0,"should call the getter")};r={};t.testObject.setter=r;n.strictEqual(t.testObject.setterValue,r,"Should set the setter value")});QUnit.test("getter&setter - setter - should call only the original setter",2,function(n){var t=this,i=function(){return n.ok(!1,"should not be called")},r;t.testObject.onNoArgumentsFunctionCalled=i;t.testObject.onOneArgumentsFunctionCalled=i;t.testObject.onManyArgumentsFunctionCalled=i;t.testObject.onSetterCalled=i;t.testObject.onGetterOfGetterAndSetterCalled=i;t.testObject.onGetterCalled=i;t.testObject.onSetterOfGetterAndSetterCalled=function(){return n.ok(!0,"should call the getter")};r={};t.testObject.getterAndSetter=r;n.strictEqual(t.testObject.getterAndSetterValue,r,"Should set the value")});QUnit.test("getter&setter - getter - should call only the original getter",2,function(n){var t=this,i=function(){return n.ok(!1,"should not be called")},r,u;t.testObject.onNoArgumentsFunctionCalled=i;t.testObject.onOneArgumentsFunctionCalled=i;t.testObject.onManyArgumentsFunctionCalled=i;t.testObject.onSetterCalled=i;t.testObject.onSetterOfGetterAndSetterCalled=i;t.testObject.onGetterCalled=i;t.testObject.onGetterOfGetterAndSetterCalled=function(){return n.ok(!0,"should call the getter")};r={};t.testObject.getterAndSetterValue=r;u=t.testObject.getterAndSetter;n.strictEqual(u,r,"Should get the value")});QUnit.test("verify - should verify only the no arguments function",7,function(n){var t=this,i={},r={},u={};t.testObject.noArgumentsFunction();var f=t.mole.verify(function(n){return n.noArgumentsFunction()}),e=t.mole.verify(function(n){return n.oneArgumentsFunction(i)}),o=t.mole.verify(function(n){return n.manyArgumentsFunction(i,r,u)}),s=t.mole.verify(function(n){return n.getter}),h=t.mole.verify(function(n){return n.setter=i}),c=t.mole.verify(function(n){return n.getterAndSetter}),l=t.mole.verify(function(n){return n.getterAndSetter=i});n.strictEqual(f,!0,"no arguments should be verified");n.strictEqual(e,!1,"one arguments should not be verified");n.strictEqual(o,!1,"many arguments should not be verified");n.strictEqual(s,!1,"getter should not be verified");n.strictEqual(h,!1,"setter should not be verified");n.strictEqual(l,!1,"setter of getter and setter should not be verified");n.strictEqual(c,!1,"getter of getter and setter should not be verified")});QUnit.test("verify - should verify only the one argument function",7,function(n){var t=this,i={},r={},u={};t.testObject.oneArgumentsFunction(i);var f=t.mole.verify(function(n){return n.noArgumentsFunction()}),e=t.mole.verify(function(n){return n.oneArgumentsFunction(i)}),o=t.mole.verify(function(n){return n.manyArgumentsFunction(i,r,u)}),s=t.mole.verify(function(n){return n.getter}),h=t.mole.verify(function(n){return n.setter=i}),c=t.mole.verify(function(n){return n.getterAndSetter}),l=t.mole.verify(function(n){return n.getterAndSetter=i});n.strictEqual(f,!1,"no arguments should not be verified");n.strictEqual(e,!0,"one arguments should be verified");n.strictEqual(o,!1,"many arguments should not be verified");n.strictEqual(s,!1,"getter should not be verified");n.strictEqual(h,!1,"setter should not be verified");n.strictEqual(c,!1,"getter of getter and setter should not be verified");n.strictEqual(l,!1,"setter of getter and setter should not be verified")});QUnit.test("verify - should verify only the many argument function",7,function(n){var t=this,i={},r={},u={};t.testObject.manyArgumentsFunction(i,r,u);var f=t.mole.verify(function(n){return n.noArgumentsFunction()}),e=t.mole.verify(function(n){return n.oneArgumentsFunction(i)}),o=t.mole.verify(function(n){return n.manyArgumentsFunction(i,r,u)}),s=t.mole.verify(function(n){return n.getter}),h=t.mole.verify(function(n){return n.setter=i}),c=t.mole.verify(function(n){return n.getterAndSetter}),l=t.mole.verify(function(n){return n.getterAndSetter=i});n.strictEqual(f,!1,"no arguments should not be verified");n.strictEqual(e,!1,"one arguments should not be verified");n.strictEqual(o,!0,"many arguments should be verified");n.strictEqual(s,!1,"getter should not be verified");n.strictEqual(h,!1,"setter should not be verified");n.strictEqual(l,!1,"setter of getter and setter should not be verified");n.strictEqual(c,!1,"getter of getter and setter should not be verified")});QUnit.test("verify - should verify only the getter",7,function(n){var t=this,i={},r={},u={},a=t.testObject.getter,f=t.mole.verify(function(n){return n.noArgumentsFunction()}),e=t.mole.verify(function(n){return n.oneArgumentsFunction(i)}),o=t.mole.verify(function(n){return n.manyArgumentsFunction(i,r,u)}),s=t.mole.verify(function(n){return n.getter}),h=t.mole.verify(function(n){return n.setter=i}),c=t.mole.verify(function(n){return n.getterAndSetter}),l=t.mole.verify(function(n){return n.getterAndSetter=i});n.strictEqual(f,!1,"no arguments should not be verified");n.strictEqual(e,!1,"one arguments should not be verified");n.strictEqual(o,!1,"many arguments should not be verified");n.strictEqual(s,!0,"getter should be verified");n.strictEqual(h,!1,"setter should not be verified");n.strictEqual(l,!1,"setter of getter and setter should not be verified");n.strictEqual(c,!1,"getter of getter and setter should not be verified")});QUnit.test("verify - should verify only the setter",7,function(n){var t=this,i={},r={},u={};t.testObject.setter=i;var f=t.mole.verify(function(n){return n.noArgumentsFunction()}),e=t.mole.verify(function(n){return n.oneArgumentsFunction(i)}),o=t.mole.verify(function(n){return n.manyArgumentsFunction(i,r,u)}),s=t.mole.verify(function(n){return n.getter}),h=t.mole.verify(function(n){return n.setter=i}),c=t.mole.verify(function(n){return n.getterAndSetter}),l=t.mole.verify(function(n){return n.getterAndSetter=i});n.strictEqual(f,!1,"no arguments should not be verified");n.strictEqual(e,!1,"one arguments should not be verified");n.strictEqual(o,!1,"many arguments should not be verified");n.strictEqual(s,!1,"getter should not be verified");n.strictEqual(h,!0,"setter should be verified");n.strictEqual(l,!1,"setter of getter and setter should not be verified");n.strictEqual(c,!1,"Getter of getter and setter should not be verified")});QUnit.test("verify - should verify only the getter of getter and setter",7,function(n){var t=this,i={},r={},u={},a=t.testObject.getterAndSetter,f=t.mole.verify(function(n){return n.noArgumentsFunction()}),e=t.mole.verify(function(n){return n.oneArgumentsFunction(i)}),o=t.mole.verify(function(n){return n.manyArgumentsFunction(i,r,u)}),s=t.mole.verify(function(n){return n.getter}),h=t.mole.verify(function(n){return n.setter=i}),c=t.mole.verify(function(n){return n.getterAndSetter}),l=t.mole.verify(function(n){return n.getterAndSetter=i});n.strictEqual(f,!1,"no arguments should not be verified");n.strictEqual(e,!1,"one arguments should not be verified");n.strictEqual(o,!1,"many arguments should not be verified");n.strictEqual(s,!1,"getter should not be verified");n.strictEqual(h,!1,"setter should not be verified");n.strictEqual(c,!0,"getter of getter and setter should be verified");n.strictEqual(l,!1,"setter of getter and setter should not be verified")});QUnit.test("verify - should verify only the setter of getter and setter",7,function(n){var t=this,i={},r={},u={};t.testObject.getterAndSetter=i;var f=t.mole.verify(function(n){return n.noArgumentsFunction()}),e=t.mole.verify(function(n){return n.oneArgumentsFunction(i)}),o=t.mole.verify(function(n){return n.manyArgumentsFunction(i,r,u)}),s=t.mole.verify(function(n){return n.getter}),h=t.mole.verify(function(n){return n.setter=i}),c=t.mole.verify(function(n){return n.getterAndSetter}),l=t.mole.verify(function(n){return n.getterAndSetter=i});n.strictEqual(f,!1,"no arguments should not be verified");n.strictEqual(e,!1,"one arguments should not be verified");n.strictEqual(o,!1,"many arguments should not be verified");n.strictEqual(s,!1,"getter should not be verified");n.strictEqual(h,!1,"setter should not be verified");n.strictEqual(c,!1,"getter of getter and setter should not be verified");n.strictEqual(l,!0,"setter of getter and setter should be verified")});QUnit.test("verify - no arguments - was not called should not find a match",function(n){QUnit.expect(1);var t=this,i=t.mole.verify(function(n){return n.noArgumentsFunction()});n.strictEqual(i,!1,"should not be verified")});QUnit.test("verify - no arguments - was not called should not find 2 matches",function(n){QUnit.expect(1);var i=this,r=i.mole.verify(function(n){return n.noArgumentsFunction()},t.exact(2));n.strictEqual(r,!1,"should not be verified")});QUnit.test("verify - no arguments - was not called should return true on 0 matches",function(n){QUnit.expect(1);var i=this,r=i.mole.verify(function(n){return n.noArgumentsFunction()},t.exact(0));n.strictEqual(r,!0,"should verified")});QUnit.test("verify - no arguments - was called should return false on 0 matches",function(n){var i,r;QUnit.expect(1);i=this;i.testObject.noArgumentsFunction();r=i.mole.verify(function(n){return n.noArgumentsFunction()},t.exact(0));n.strictEqual(r,!1,"should return false on 0 mathes")});QUnit.test("verify - no arguments - was called should return true on 1 matches",function(n){var i,r;QUnit.expect(1);i=this;i.testObject.noArgumentsFunction();r=i.mole.verify(function(n){return n.noArgumentsFunction()},t.exact(1));n.strictEqual(r,!0,"should be verified")});QUnit.test("verify - no arguments - was called should return false on 2 matches",function(n){var i,r;QUnit.expect(1);i=this;i.testObject.noArgumentsFunction();r=i.mole.verify(function(n){return n.noArgumentsFunction()},t.exact(2));n.strictEqual(r,!1,"should not be verified")});QUnit.test("verify - no arguments - was called twice should return true on 2 matches",function(n){var i,r;QUnit.expect(1);i=this;i.testObject.noArgumentsFunction();i.testObject.noArgumentsFunction();r=i.mole.verify(function(n){return n.noArgumentsFunction()},t.exact(2));n.strictEqual(r,!0,"should be verified")});QUnit.test("verify - no arguments - was called twice should return false on 1 matches",function(n){var i,r;QUnit.expect(1);i=this;i.testObject.noArgumentsFunction();i.testObject.noArgumentsFunction();r=i.mole.verify(function(n){return n.noArgumentsFunction()},t.exact(1));n.strictEqual(r,!1,"should not be verified")});QUnit.test("verify - no arguments - was called twice should return false on 3 matches",function(n){var i,r;QUnit.expect(1);i=this;i.testObject.noArgumentsFunction();i.testObject.noArgumentsFunction();r=i.mole.verify(function(n){return n.noArgumentsFunction()},t.exact(3));n.strictEqual(r,!1,"should not be verified")});QUnit.test("verify - one argument - was not called should not find a match",function(n){QUnit.expect(1);var t=this,i={},r=t.mole.verify(function(n){return n.oneArgumentsFunction(i)});n.strictEqual(r,!1,"should not find a match")});QUnit.test("verify - one argument - was not called should not find 1 match",function(n){QUnit.expect(1);var i=this,r={},u=i.mole.verify(function(n){return n.oneArgumentsFunction(r)},t.exact(1));n.strictEqual(u,!1,"should not find a match")});QUnit.test("verify - one argument - was not called should not find 2 matches",function(n){QUnit.expect(1);var i=this,r={},u=i.mole.verify(function(n){return n.oneArgumentsFunction(r)},t.exact(2));n.strictEqual(u,!1,"should not find a match")});QUnit.test("verify - one argument - was not called should find 0 matches",function(n){QUnit.expect(1);var i=this,r={},u=i.mole.verify(function(n){return n.oneArgumentsFunction(r)},t.exact(0));n.strictEqual(u,!0,"should find 0 matches")});QUnit.test("verify - one argument - was called should find a match",function(n){var t,i,r;QUnit.expect(1);t=this;i={};t.testObject.oneArgumentsFunction(i);r=t.mole.verify(function(n){return n.oneArgumentsFunction(i)});n.strictEqual(r,!0,"should find a match")});QUnit.test("verify - one argument - was called should find 1 match",function(n){var i,r,u;QUnit.expect(1);i=this;r={};i.testObject.oneArgumentsFunction(r);u=i.mole.verify(function(n){return n.oneArgumentsFunction(r)},t.exact(1));n.strictEqual(u,!0,"should find a match")});QUnit.test("verify - one argument - was called should not find 2 matches",function(n){var i,r,u;QUnit.expect(1);i=this;r={};i.testObject.oneArgumentsFunction(r);u=i.mole.verify(function(n){return n.oneArgumentsFunction(r)},t.exact(2));n.strictEqual(u,!1,"should not find matches")});QUnit.test("verify - one argument - was called should not verify 0 matches",function(n){var i,r,u;QUnit.expect(1);i=this;r={};i.testObject.oneArgumentsFunction(r);u=i.mole.verify(function(n){return n.oneArgumentsFunction(r)},t.exact(0));n.strictEqual(u,!1,"should not verify 0 matches")});QUnit.test("verify - one argument - was called twice should find a match",function(n){var t,i,r;QUnit.expect(1);t=this;i={};t.testObject.oneArgumentsFunction(i);t.testObject.oneArgumentsFunction(i);r=t.mole.verify(function(n){return n.oneArgumentsFunction(i)});n.strictEqual(r,!0,"should verify match")});QUnit.test("verify - one argument - was called twice should find 2 matches",function(n){var i,r,u;QUnit.expect(1);i=this;r={};i.testObject.oneArgumentsFunction(r);i.testObject.oneArgumentsFunction(r);u=i.mole.verify(function(n){return n.oneArgumentsFunction(r)},t.exact(2));n.strictEqual(u,!0,"should verify match")});QUnit.test("verify - one argument - was called twice should not find 0 matches",function(n){var i,r,u;QUnit.expect(1);i=this;r={};i.testObject.oneArgumentsFunction(r);i.testObject.oneArgumentsFunction(r);u=i.mole.verify(function(n){return n.oneArgumentsFunction(r)},t.exact(0));n.strictEqual(u,!1,"should not verify 0 matches")});QUnit.test("verify - one argument - was called twice should not find 1 matches",function(n){var i,r,u;QUnit.expect(1);i=this;r={};i.testObject.oneArgumentsFunction(r);i.testObject.oneArgumentsFunction(r);u=i.mole.verify(function(n){return n.oneArgumentsFunction(r)},t.exact(1));n.strictEqual(u,!1,"should not verify 1 matches")});QUnit.test("verify - one argument - was called twice should not find 3 matches",function(n){var i,r,u;QUnit.expect(1);i=this;r={};i.testObject.oneArgumentsFunction(r);i.testObject.oneArgumentsFunction(r);u=i.mole.verify(function(n){return n.oneArgumentsFunction(r)},t.exact(3));n.strictEqual(u,!1,"should not verify 3 matches")});QUnit.test("verify - one argument - was called twice should verify first arg",function(n){var r;QUnit.expect(1);var t=this,i={};t.testObject.oneArgumentsFunction(i);t.testObject.oneArgumentsFunction({});r=t.mole.verify(function(n){return n.oneArgumentsFunction(i)});n.strictEqual(r,!0,"should verify")});QUnit.test("verify - one argument - was called twice should verify first arg called 1 time",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.oneArgumentsFunction(r);i.testObject.oneArgumentsFunction({});u=i.mole.verify(function(n){return n.oneArgumentsFunction(r)},t.exact(1));n.strictEqual(u,!0,"should verify")});QUnit.test("verify - one argument - was called twice should not verify first arg called 0 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.oneArgumentsFunction(r);i.testObject.oneArgumentsFunction({});u=i.mole.verify(function(n){return n.oneArgumentsFunction(r)},t.exact(0));n.strictEqual(u,!1,"should not verify")});QUnit.test("verify - one argument - was called twice should not verify first arg called 2 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.oneArgumentsFunction(r);i.testObject.oneArgumentsFunction({});u=i.mole.verify(function(n){return n.oneArgumentsFunction(r)},t.exact(2));n.strictEqual(u,!1,"should not verify")});QUnit.test("verify - one argument - was called 3 times should not verify first arg called 2 times",function(n){var f;QUnit.expect(1);var i=this,r={},u={};i.testObject.oneArgumentsFunction(r);i.testObject.oneArgumentsFunction(u);i.testObject.oneArgumentsFunction(u);f=i.mole.verify(function(n){return n.oneArgumentsFunction(r)},t.exact(2));n.strictEqual(f,!1,"should not verify")});QUnit.test("verify - one argument - was called 3 times should verify first arg called 2 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.oneArgumentsFunction(r);i.testObject.oneArgumentsFunction({});i.testObject.oneArgumentsFunction(r);u=i.mole.verify(function(n){return n.oneArgumentsFunction(r)},t.exact(2));n.strictEqual(u,!0,"should verify")});QUnit.test("verify - one argument - was called twice should verify second arg was called",function(n){var r;QUnit.expect(1);var t=this,i={};t.testObject.oneArgumentsFunction({});t.testObject.oneArgumentsFunction(i);r=t.mole.verify(function(n){return n.oneArgumentsFunction(i)});n.strictEqual(r,!0,"should verify")});QUnit.test("verify - one argument - was called twice should verify second arg was called 1 time",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.oneArgumentsFunction({});i.testObject.oneArgumentsFunction(r);u=i.mole.verify(function(n){return n.oneArgumentsFunction(r)},t.exact(1));n.strictEqual(u,!0,"should verify")});QUnit.test("verify - one argument - was called twice should not verify second arg was called 2 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.oneArgumentsFunction({});i.testObject.oneArgumentsFunction(r);u=i.mole.verify(function(n){return n.oneArgumentsFunction(r)},t.exact(2));n.strictEqual(u,!1,"should not verify")});QUnit.test("verify - one argument - was called twice should not verify second arg was called 0 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.oneArgumentsFunction({});i.testObject.oneArgumentsFunction(r);u=i.mole.verify(function(n){return n.oneArgumentsFunction(r)},t.exact(0));n.strictEqual(u,!1,"should not verify")});QUnit.test("verify - one argument - was called 3 times should not verify second arg was called 0 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.oneArgumentsFunction({});i.testObject.oneArgumentsFunction(r);i.testObject.oneArgumentsFunction(r);u=i.mole.verify(function(n){return n.oneArgumentsFunction(r)},t.exact(0));n.strictEqual(u,!1,"should not verify")});QUnit.test("verify - one argument - was called 3 times should not verify second arg was called 1 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.oneArgumentsFunction({});i.testObject.oneArgumentsFunction(r);i.testObject.oneArgumentsFunction(r);u=i.mole.verify(function(n){return n.oneArgumentsFunction(r)},t.exact(1));n.strictEqual(u,!1,"should not verify")});QUnit.test("verify - one argument - was called 3 times should verify second arg was called 2 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.oneArgumentsFunction({});i.testObject.oneArgumentsFunction(r);i.testObject.oneArgumentsFunction(r);u=i.mole.verify(function(n){return n.oneArgumentsFunction(r)},t.exact(2));n.strictEqual(u,!0,"should verify")});QUnit.test("verify - one argument - was called 3 times should not verify second arg was called 3 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.oneArgumentsFunction({});i.testObject.oneArgumentsFunction(r);i.testObject.oneArgumentsFunction(r);u=i.mole.verify(function(n){return n.oneArgumentsFunction(r)},t.exact(3));n.strictEqual(u,!1,"should not verify")});QUnit.test("verify - one argument - was called twice should not verify with another arg",function(n){var i;QUnit.expect(1);var t=this,r={};t.testObject.oneArgumentsFunction({});t.testObject.oneArgumentsFunction({});i=t.mole.verify(function(n){return n.oneArgumentsFunction(r)});n.strictEqual(i,!1,"should not verify")});QUnit.test("verify - one argument - was called twice should not verify with another arg was called 1 times",function(n){var r;QUnit.expect(1);var i=this,u={};i.testObject.oneArgumentsFunction({});i.testObject.oneArgumentsFunction({});r=i.mole.verify(function(n){return n.oneArgumentsFunction(u)},t.exact(1));n.strictEqual(r,!1,"should not verify")});QUnit.test("verify - one argument - was called twice should not verify with another arg was called 2 times",function(n){var r;QUnit.expect(1);var i=this,u={};i.testObject.oneArgumentsFunction({});i.testObject.oneArgumentsFunction({});r=i.mole.verify(function(n){return n.oneArgumentsFunction(u)},t.exact(2));n.strictEqual(r,!1,"should not verify")});QUnit.test("verify - one argument - was called twice should verify with another arg was called 0 times",function(n){var r;QUnit.expect(1);var i=this,u={};i.testObject.oneArgumentsFunction({});i.testObject.oneArgumentsFunction({});r=i.mole.verify(function(n){return n.oneArgumentsFunction(u)},t.exact(0));n.strictEqual(r,!0,"should verify")});QUnit.test("verify - many arguments - was not called should not verify",function(n){QUnit.expect(1);var t=this,i={},r={},u={},f=t.mole.verify(function(n){return n.manyArgumentsFunction(i,r,u)});n.strictEqual(f,!1,"should not verify")});QUnit.test("verify - many arguments - was not called should not verify for 1 time",function(n){QUnit.expect(1);var i=this,r={},u={},f={},e=i.mole.verify(function(n){return n.manyArgumentsFunction(r,u,f)},t.exact(1));n.strictEqual(e,!1,"should not verify")});QUnit.test("verify - many arguments - was not called should not verify for 2 times",function(n){QUnit.expect(1);var i=this,r={},u={},f={},e=i.mole.verify(function(n){return n.manyArgumentsFunction(r,u,f)},t.exact(2));n.strictEqual(e,!1,"should not verify")});QUnit.test("verify - many arguments - was not called should verify for 0 times",function(n){QUnit.expect(1);var i=this,r={},u={},f={},e=i.mole.verify(function(n){return n.manyArgumentsFunction(r,u,f)},t.exact(0));n.strictEqual(e,!0,"should verify")});QUnit.test("verify - many arguments - was called should verify",function(n){var f;QUnit.expect(1);var t=this,i={},r={},u={};t.testObject.manyArgumentsFunction(i,r,u);f=t.mole.verify(function(n){return n.manyArgumentsFunction(i,r,u)});n.strictEqual(f,!0,"should verify")});QUnit.test("verify - many arguments - was called should verify for 1 time",function(n){var e;QUnit.expect(1);var i=this,r={},u={},f={};i.testObject.manyArgumentsFunction(r,u,f);e=i.mole.verify(function(n){return n.manyArgumentsFunction(r,u,f)},t.exact(1));n.strictEqual(e,!0,"should verify")});QUnit.test("verify - many arguments - was called should not verify for 0 times",function(n){var e;QUnit.expect(1);var i=this,r={},u={},f={};i.testObject.manyArgumentsFunction(r,u,f);e=i.mole.verify(function(n){return n.manyArgumentsFunction(r,u,f)},t.exact(0));n.strictEqual(e,!1,"should not verify")});QUnit.test("verify - many arguments - was called should not verify for 2 times",function(n){var e;QUnit.expect(1);var i=this,r={},u={},f={};i.testObject.manyArgumentsFunction(r,u,f);e=i.mole.verify(function(n){return n.manyArgumentsFunction(r,u,f)},t.exact(2));n.strictEqual(e,!1,"should not verify")});QUnit.test("verify - many arguments - was called twice should not verify for 0 times",function(n){var e;QUnit.expect(1);var i=this,r={},u={},f={};i.testObject.manyArgumentsFunction(r,u,f);i.testObject.manyArgumentsFunction(r,u,f);e=i.mole.verify(function(n){return n.manyArgumentsFunction(r,u,f)},t.exact(0));n.strictEqual(e,!1,"should not verify")});QUnit.test("verify - many arguments - was called twice should not verify for 1 times",function(n){var e;QUnit.expect(1);var i=this,r={},u={},f={};i.testObject.manyArgumentsFunction(r,u,f);i.testObject.manyArgumentsFunction(r,u,f);e=i.mole.verify(function(n){return n.manyArgumentsFunction(r,u,f)},t.exact(1));n.strictEqual(e,!1,"should not verify")});QUnit.test("verify - many arguments - was called twice should verify for 2 times",function(n){var e;QUnit.expect(1);var i=this,r={},u={},f={};i.testObject.manyArgumentsFunction(r,u,f);i.testObject.manyArgumentsFunction(r,u,f);e=i.mole.verify(function(n){return n.manyArgumentsFunction(r,u,f)},t.exact(2));n.strictEqual(e,!0,"should verify")});QUnit.test("verify - many arguments - was called twice should verify",function(n){var f;QUnit.expect(1);var t=this,i={},r={},u={};t.testObject.manyArgumentsFunction(i,r,u);t.testObject.manyArgumentsFunction(i,r,u);f=t.mole.verify(function(n){return n.manyArgumentsFunction(i,r,u)});n.strictEqual(f,!0,"should verify")});QUnit.test("verify - many arguments - was called twice should not verify for 3 times",function(n){var e;QUnit.expect(1);var i=this,r={},u={},f={};i.testObject.manyArgumentsFunction(r,u,f);i.testObject.manyArgumentsFunction(r,u,f);e=i.mole.verify(function(n){return n.manyArgumentsFunction(r,u,f)},t.exact(3));n.strictEqual(e,!1,"should not verify")});QUnit.test("verify - many arguments -  was called twice with different sets should verify first set",function(n){var u;QUnit.expect(1);var i=this,t=[{},{},{}],r=[{},{},{}];i.testObject.manyArgumentsFunction(t[0],t[1],t[2]);i.testObject.manyArgumentsFunction(r[0],r[1],r[2]);u=i.mole.verify(function(n){return n.manyArgumentsFunction(t[0],t[1],t[2])});n.strictEqual(u,!0,"should verify")});QUnit.test("verify - many arguments -  was called twice with different sets should verify first set 1 time",function(n){var f;QUnit.expect(1);var r=this,i=[{},{},{}],u=[{},{},{}];r.testObject.manyArgumentsFunction(i[0],i[1],i[2]);r.testObject.manyArgumentsFunction(u[0],u[1],u[2]);f=r.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[1],i[2])},t.exact(1));n.strictEqual(f,!0,"should verify")});QUnit.test("verify - many arguments -  was called twice with different sets should not verify first set 0 times",function(n){var f;QUnit.expect(1);var r=this,i=[{},{},{}],u=[{},{},{}];r.testObject.manyArgumentsFunction(i[0],i[1],i[2]);r.testObject.manyArgumentsFunction(u[0],u[1],u[2]);f=r.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[1],i[2])},t.exact(0));n.strictEqual(f,!1,"should not verify")});QUnit.test("verify - many arguments -  was called twice with different sets should not verify first set 2 times",function(n){var f;QUnit.expect(1);var r=this,i=[{},{},{}],u=[{},{},{}];r.testObject.manyArgumentsFunction(i[0],i[1],i[2]);r.testObject.manyArgumentsFunction(u[0],u[1],u[2]);f=r.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[1],i[2])},t.exact(2));n.strictEqual(f,!1,"should not verify")});QUnit.test("verify - many arguments -  was called twice with different sets should verify second set",function(n){var u;QUnit.expect(1);var i=this,r=[{},{},{}],t=[{},{},{}];i.testObject.manyArgumentsFunction(r[0],r[1],r[2]);i.testObject.manyArgumentsFunction(t[0],t[1],t[2]);u=i.mole.verify(function(n){return n.manyArgumentsFunction(t[0],t[1],t[2])});n.strictEqual(u,!0,"should verify")});QUnit.test("verify - many arguments -  was called twice with different sets should verify second set 1 time",function(n){var f;QUnit.expect(1);var r=this,u=[{},{},{}],i=[{},{},{}];r.testObject.manyArgumentsFunction(u[0],u[1],u[2]);r.testObject.manyArgumentsFunction(i[0],i[1],i[2]);f=r.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[1],i[2])},t.exact(1));n.strictEqual(f,!0,"should verify")});QUnit.test("verify - many arguments -  was called twice with different sets should not verify second set 0 times",function(n){var f;QUnit.expect(1);var r=this,u=[{},{},{}],i=[{},{},{}];r.testObject.manyArgumentsFunction(u[0],u[1],u[2]);r.testObject.manyArgumentsFunction(i[0],i[1],i[2]);f=r.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[1],i[2])},t.exact(0));n.strictEqual(f,!1,"should not verify")});QUnit.test("verify - many arguments -  was called twice with different sets should not verify second set 2 times",function(n){var f;QUnit.expect(1);var r=this,u=[{},{},{}],i=[{},{},{}];r.testObject.manyArgumentsFunction(u[0],u[1],u[2]);r.testObject.manyArgumentsFunction(i[0],i[1],i[2]);f=r.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[1],i[2])},t.exact(2));n.strictEqual(f,!1,"should not verify")});QUnit.test("verify - many arguments -  was called twice with different sets should not verify another set",function(n){var u;QUnit.expect(1);var r=this,t=[{},{},{}],i=[{},{},{}];r.testObject.manyArgumentsFunction(t[0],t[1],t[2]);r.testObject.manyArgumentsFunction(i[0],i[1],i[2]);u=r.mole.verify(function(n){return n.manyArgumentsFunction(t[0],t[1],i[2])});n.strictEqual(u,!1,"should not verify")});QUnit.test("verify - many arguments -  was called twice with different sets should not verify another set 1 time",function(n){var f;QUnit.expect(1);var u=this,i=[{},{},{}],r=[{},{},{}];u.testObject.manyArgumentsFunction(i[0],i[1],i[2]);u.testObject.manyArgumentsFunction(r[0],r[1],r[2]);f=u.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[1],r[2])},t.exact(1));n.strictEqual(f,!1,"should not verify")});QUnit.test("verify - many arguments -  was called twice with different sets should not verify another set 2 times",function(n){var f;QUnit.expect(1);var u=this,i=[{},{},{}],r=[{},{},{}];u.testObject.manyArgumentsFunction(i[0],i[1],i[2]);u.testObject.manyArgumentsFunction(r[0],r[1],r[2]);f=u.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[1],r[2])},t.exact(2));n.strictEqual(f,!1,"should not verify")});QUnit.test("verify - many arguments -  was called twice with different sets should verify another set 0 times",function(n){var f;QUnit.expect(1);var u=this,i=[{},{},{}],r=[{},{},{}];u.testObject.manyArgumentsFunction(i[0],i[1],i[2]);u.testObject.manyArgumentsFunction(r[0],r[1],r[2]);f=u.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[1],r[2])},t.exact(0));n.strictEqual(f,!0,"should verify")});QUnit.test("verify - getter - was not called should not find a match",function(n){QUnit.expect(1);var t=this,i=t.mole.verify(function(n){return n.getter});n.strictEqual(i,!1,"should not be verified")});QUnit.test("verify - getter - was not called should not find 2 matches",function(n){QUnit.expect(1);var i=this,r=i.mole.verify(function(n){return n.getter},t.exact(2));n.strictEqual(r,!1,"should not be verified")});QUnit.test("verify - getter - was not called should return true on 0 matches",function(n){QUnit.expect(1);var i=this,r=i.mole.verify(function(n){return n.getter},t.exact(0));n.strictEqual(r,!0,"should verified")});QUnit.test("verify - getter - was called should return false on 0 matches",function(n){QUnit.expect(1);var i=this,u=i.testObject.getter,r=i.mole.verify(function(n){return n.getter},t.exact(0));n.strictEqual(r,!1,"should return false on 0 mathes")});QUnit.test("verify - getter - was called should return true on 1 matches",function(n){QUnit.expect(1);var i=this,u=i.testObject.getter,r=i.mole.verify(function(n){return n.getter},t.exact(1));n.strictEqual(r,!0,"should be verified")});QUnit.test("verify - getter - was called should return false on 2 matches",function(n){QUnit.expect(1);var i=this,u=i.testObject.getter,r=i.mole.verify(function(n){return n.getter},t.exact(2));n.strictEqual(r,!1,"should not be verified")});QUnit.test("verify - getter - was called twice should return true on 2 matches",function(n){QUnit.expect(1);var i=this,u=i.testObject.getter,f=i.testObject.getter,r=i.mole.verify(function(n){return n.getter},t.exact(2));n.strictEqual(r,!0,"should be verified")});QUnit.test("verify - getter - was called twice should return false on 1 matches",function(n){QUnit.expect(1);var i=this,u=i.testObject.getter,f=i.testObject.getter,r=i.mole.verify(function(n){return n.getter},t.exact(1));n.strictEqual(r,!1,"should not be verified")});QUnit.test("verify - getter - was called twice should return false on 3 matches",function(n){QUnit.expect(1);var i=this,u=i.testObject.getter,f=i.testObject.getter,r=i.mole.verify(function(n){return n.getter},t.exact(3));n.strictEqual(r,!1,"should not be verified")});QUnit.test("verify - setter - was not called should not find a match",function(n){QUnit.expect(1);var t=this,i={},r=t.mole.verify(function(n){return n.setter=i});n.strictEqual(r,!1,"should not find a match")});QUnit.test("verify - setter - was not called should not find 1 match",function(n){QUnit.expect(1);var i=this,r={},u=i.mole.verify(function(n){return n.setter=r},t.exact(1));n.strictEqual(u,!1,"should not find a match")});QUnit.test("verify - setter - was not called should not find 2 matches",function(n){QUnit.expect(1);var i=this,r={},u=i.mole.verify(function(n){return n.setter=r},t.exact(2));n.strictEqual(u,!1,"should not find a match")});QUnit.test("verify - setter - was not called should find 0 matches",function(n){QUnit.expect(1);var i=this,r={},u=i.mole.verify(function(n){return n.setter=r},t.exact(0));n.strictEqual(u,!0,"should find 0 matches")});QUnit.test("verify - setter - was called should find a match",function(n){var t,i,r;QUnit.expect(1);t=this;i={};t.testObject.setter=i;r=t.mole.verify(function(n){return n.setter=i});n.strictEqual(r,!0,"should find a match")});QUnit.test("verify - setter - was called should find 1 match",function(n){var i,r,u;QUnit.expect(1);i=this;r={};i.testObject.setter=r;u=i.mole.verify(function(n){return n.setter=r},t.exact(1));n.strictEqual(u,!0,"should find a match")});QUnit.test("verify - setter - was called should not find 2 matches",function(n){var i,r,u;QUnit.expect(1);i=this;r={};i.testObject.setter=r;u=i.mole.verify(function(n){return n.setter=r},t.exact(2));n.strictEqual(u,!1,"should not find matches")});QUnit.test("verify - setter - was called should not verify 0 matches",function(n){var i,r,u;QUnit.expect(1);i=this;r={};i.testObject.setter=r;u=i.mole.verify(function(n){return n.setter=r},t.exact(0));n.strictEqual(u,!1,"should not verify 0 matches")});QUnit.test("verify - setter - was called twice should find a match",function(n){var t,i,r;QUnit.expect(1);t=this;i={};t.testObject.setter=i;t.testObject.setter=i;r=t.mole.verify(function(n){return n.setter=i});n.strictEqual(r,!0,"should verify match")});QUnit.test("verify - setter - was called twice should find 2 matches",function(n){var i,r,u;QUnit.expect(1);i=this;r={};i.testObject.setter=r;i.testObject.setter=r;u=i.mole.verify(function(n){return n.setter=r},t.exact(2));n.strictEqual(u,!0,"should verify match")});QUnit.test("verify - setter - was called twice should not find 0 matches",function(n){var i,r,u;QUnit.expect(1);i=this;r={};i.testObject.setter=r;i.testObject.setter=r;u=i.mole.verify(function(n){return n.setter=r},t.exact(0));n.strictEqual(u,!1,"should not verify 0 matches")});QUnit.test("verify - setter - was called twice should not find 1 matches",function(n){var i,r,u;QUnit.expect(1);i=this;r={};i.testObject.setter=r;i.testObject.setter=r;u=i.mole.verify(function(n){return n.setter=r},t.exact(1));n.strictEqual(u,!1,"should not verify 1 matches")});QUnit.test("verify - setter - was called twice should not find 3 matches",function(n){var i,r,u;QUnit.expect(1);i=this;r={};i.testObject.setter=r;i.testObject.setter=r;u=i.mole.verify(function(n){return n.setter=r},t.exact(3));n.strictEqual(u,!1,"should not verify 3 matches")});QUnit.test("verify - setter - was called twice should verify first arg",function(n){var r;QUnit.expect(1);var t=this,i={};t.testObject.setter=i;t.testObject.setter={};r=t.mole.verify(function(n){return n.setter=i});n.strictEqual(r,!0,"should verify")});QUnit.test("verify - setter - was called twice should verify first arg called 1 time",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.setter=r;i.testObject.setter={};u=i.mole.verify(function(n){return n.setter=r},t.exact(1));n.strictEqual(u,!0,"should verify")});QUnit.test("verify - setter - was called twice should not verify first arg called 0 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.setter=r;i.testObject.setter={};u=i.mole.verify(function(n){return n.setter=r},t.exact(0));n.strictEqual(u,!1,"should not verify")});QUnit.test("verify - setter - was called twice should not verify first arg called 2 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.setter=r;i.testObject.setter={};u=i.mole.verify(function(n){return n.setter=r},t.exact(2));n.strictEqual(u,!1,"should not verify")});QUnit.test("verify - setter - was called 3 times should not verify first arg called 2 times",function(n){var f;QUnit.expect(1);var i=this,r={},u={};i.testObject.setter=r;i.testObject.setter=u;i.testObject.setter=u;f=i.mole.verify(function(n){return n.setter=r},t.exact(2));n.strictEqual(f,!1,"should not verify")});QUnit.test("verify - setter - was called 3 times should verify first arg called 2 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.setter=r;i.testObject.setter={};i.testObject.setter=r;u=i.mole.verify(function(n){return n.setter=r},t.exact(2));n.strictEqual(u,!0,"should verify")});QUnit.test("verify - setter - was called twice should verify second arg was called",function(n){var r;QUnit.expect(1);var t=this,i={};t.testObject.setter={};t.testObject.setter=i;r=t.mole.verify(function(n){return n.setter=i});n.strictEqual(r,!0,"should verify")});QUnit.test("verify - setter - was called twice should verify second arg was called 1 time",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.setter={};i.testObject.setter=r;u=i.mole.verify(function(n){return n.setter=r},t.exact(1));n.strictEqual(u,!0,"should verify")});QUnit.test("verify - setter - was called twice should not verify second arg was called 2 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.setter={};i.testObject.setter=r;u=i.mole.verify(function(n){return n.setter=r},t.exact(2));n.strictEqual(u,!1,"should not verify")});QUnit.test("verify - setter - was called twice should not verify second arg was called 0 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.setter={};i.testObject.setter=r;u=i.mole.verify(function(n){return n.setter=r},t.exact(0));n.strictEqual(u,!1,"should not verify")});QUnit.test("verify - setter - was called 3 times should not verify second arg was called 0 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.setter={};i.testObject.setter=r;i.testObject.setter=r;u=i.mole.verify(function(n){return n.setter=r},t.exact(0));n.strictEqual(u,!1,"should not verify")});QUnit.test("verify - setter - was called 3 times should not verify second arg was called 1 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.setter={};i.testObject.setter=r;i.testObject.setter=r;u=i.mole.verify(function(n){return n.setter=r},t.exact(1));n.strictEqual(u,!1,"should not verify")});QUnit.test("verify - setter - was called 3 times should verify second arg was called 2 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.setter={};i.testObject.setter=r;i.testObject.setter=r;u=i.mole.verify(function(n){return n.setter=r},t.exact(2));n.strictEqual(u,!0,"should verify")});QUnit.test("verify - setter - was called 3 times should not verify second arg was called 3 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.setter={};i.testObject.setter=r;i.testObject.setter=r;u=i.mole.verify(function(n){return n.setter=r},t.exact(3));n.strictEqual(u,!1,"should not verify")});QUnit.test("verify - setter - was called twice should not verify with another arg",function(n){var i;QUnit.expect(1);var t=this,r={};t.testObject.setter={};t.testObject.setter={};i=t.mole.verify(function(n){return n.setter=r});n.strictEqual(i,!1,"should not verify")});QUnit.test("verify - setter - was called twice should not verify with another arg was called 1 times",function(n){var r;QUnit.expect(1);var i=this,u={};i.testObject.setter={};i.testObject.setter={};r=i.mole.verify(function(n){return n.setter=u},t.exact(1));n.strictEqual(r,!1,"should not verify")});QUnit.test("verify - setter - was called twice should not verify with another arg was called 2 times",function(n){var r;QUnit.expect(1);var i=this,u={};i.testObject.setter={};i.testObject.setter={};r=i.mole.verify(function(n){return n.setter=u},t.exact(2));n.strictEqual(r,!1,"should not verify")});QUnit.test("verify - setter - was called twice should verify with another arg was called 0 times",function(n){var r;QUnit.expect(1);var i=this,u={};i.testObject.setter={};i.testObject.setter={};r=i.mole.verify(function(n){return n.setter=u},t.exact(0));n.strictEqual(r,!0,"should verify")});QUnit.test("verify - getter&setter - getter - was not called should not find a match",function(n){QUnit.expect(1);var t=this,i=t.mole.verify(function(n){return n.getterAndSetter});n.strictEqual(i,!1,"should not be verified")});QUnit.test("verify - getter&setter - getter - was not called should not find 2 matches",function(n){QUnit.expect(1);var i=this,r=i.mole.verify(function(n){return n.getterAndSetter},t.exact(2));n.strictEqual(r,!1,"should not be verified")});QUnit.test("verify - getter&setter - getter - was not called should return true on 0 matches",function(n){QUnit.expect(1);var i=this,r=i.mole.verify(function(n){return n.getterAndSetter},t.exact(0));n.strictEqual(r,!0,"should verified")});QUnit.test("verify - getter&setter - getter - was called should return false on 0 matches",function(n){QUnit.expect(1);var i=this,u=i.testObject.getterAndSetter,r=i.mole.verify(function(n){return n.getterAndSetter},t.exact(0));n.strictEqual(r,!1,"should return false on 0 mathes")});QUnit.test("verify - getter&setter - getter - was called should return true on 1 matches",function(n){QUnit.expect(1);var i=this,u=i.testObject.getterAndSetter,r=i.mole.verify(function(n){return n.getterAndSetter},t.exact(1));n.strictEqual(r,!0,"should be verified")});QUnit.test("verify - getter&setter - getter - was called should return false on 2 matches",function(n){QUnit.expect(1);var i=this,u=i.testObject.getterAndSetter,r=i.mole.verify(function(n){return n.getterAndSetter},t.exact(2));n.strictEqual(r,!1,"should not be verified")});QUnit.test("verify - getter&setter - getter - was called twice should return true on 2 matches",function(n){QUnit.expect(1);var i=this,u=i.testObject.getterAndSetter,f=i.testObject.getterAndSetter,r=i.mole.verify(function(n){return n.getterAndSetter},t.exact(2));n.strictEqual(r,!0,"should be verified")});QUnit.test("verify - getter&setter - getter - was called twice should return false on 1 matches",function(n){QUnit.expect(1);var i=this,u=i.testObject.getterAndSetter,f=i.testObject.getterAndSetter,r=i.mole.verify(function(n){return n.getterAndSetter},t.exact(1));n.strictEqual(r,!1,"should not be verified")});QUnit.test("verify - getter&setter - getter - was called twice should return false on 3 matches",function(n){QUnit.expect(1);var i=this,u=i.testObject.getterAndSetter,f=i.testObject.getterAndSetter,r=i.mole.verify(function(n){return n.getterAndSetter},t.exact(3));n.strictEqual(r,!1,"should not be verified")});QUnit.test("verify - getter&setter - setter - was not called should not find a match",function(n){QUnit.expect(1);var t=this,i={},r=t.mole.verify(function(n){return n.getterAndSetter=i});n.strictEqual(r,!1,"should not find a match")});QUnit.test("verify - getter&setter - setter - was not called should not find 1 match",function(n){QUnit.expect(1);var i=this,r={},u=i.mole.verify(function(n){return n.getterAndSetter=r},t.exact(1));n.strictEqual(u,!1,"should not find a match")});QUnit.test("verify - getter&setter - setter - was not called should not find 2 matches",function(n){QUnit.expect(1);var i=this,r={},u=i.mole.verify(function(n){return n.getterAndSetter=r},t.exact(2));n.strictEqual(u,!1,"should not find a match")});QUnit.test("verify - getter&setter - setter - was not called should find 0 matches",function(n){QUnit.expect(1);var i=this,r={},u=i.mole.verify(function(n){return n.getterAndSetter=r},t.exact(0));n.strictEqual(u,!0,"should find 0 matches")});QUnit.test("verify - getter&setter - setter - was called should find a match",function(n){var t,i,r;QUnit.expect(1);t=this;i={};t.testObject.getterAndSetter=i;r=t.mole.verify(function(n){return n.getterAndSetter=i});n.strictEqual(r,!0,"should find a match")});QUnit.test("verify - getter&setter - setter - was called should find 1 match",function(n){var i,r,u;QUnit.expect(1);i=this;r={};i.testObject.getterAndSetter=r;u=i.mole.verify(function(n){return n.getterAndSetter=r},t.exact(1));n.strictEqual(u,!0,"should find a match")});QUnit.test("verify - getter&setter - setter - was called should not find 2 matches",function(n){var i,r,u;QUnit.expect(1);i=this;r={};i.testObject.getterAndSetter=r;u=i.mole.verify(function(n){return n.getterAndSetter=r},t.exact(2));n.strictEqual(u,!1,"should not find matches")});QUnit.test("verify - getter&setter - setter - was called should not verify 0 matches",function(n){var i,r,u;QUnit.expect(1);i=this;r={};i.testObject.getterAndSetter=r;u=i.mole.verify(function(n){return n.getterAndSetter=r},t.exact(0));n.strictEqual(u,!1,"should not verify 0 matches")});QUnit.test("verify - getter&setter - setter - was called twice should find a match",function(n){var t,i,r;QUnit.expect(1);t=this;i={};t.testObject.getterAndSetter=i;t.testObject.getterAndSetter=i;r=t.mole.verify(function(n){return n.getterAndSetter=i});n.strictEqual(r,!0,"should verify match")});QUnit.test("verify - getter&setter - setter - was called twice should find 2 matches",function(n){var i,r,u;QUnit.expect(1);i=this;r={};i.testObject.getterAndSetter=r;i.testObject.getterAndSetter=r;u=i.mole.verify(function(n){return n.getterAndSetter=r},t.exact(2));n.strictEqual(u,!0,"should verify match")});QUnit.test("verify - getter&setter - setter - was called twice should not find 0 matches",function(n){var i,r,u;QUnit.expect(1);i=this;r={};i.testObject.getterAndSetter=r;i.testObject.getterAndSetter=r;u=i.mole.verify(function(n){return n.getterAndSetter=r},t.exact(0));n.strictEqual(u,!1,"should not verify 0 matches")});QUnit.test("verify - getter&setter - setter - was called twice should not find 1 matches",function(n){var i,r,u;QUnit.expect(1);i=this;r={};i.testObject.getterAndSetter=r;i.testObject.getterAndSetter=r;u=i.mole.verify(function(n){return n.getterAndSetter=r},t.exact(1));n.strictEqual(u,!1,"should not verify 1 matches")});QUnit.test("verify - getter&setter - setter - was called twice should not find 3 matches",function(n){var i,r,u;QUnit.expect(1);i=this;r={};i.testObject.getterAndSetter=r;i.testObject.getterAndSetter=r;u=i.mole.verify(function(n){return n.getterAndSetter=r},t.exact(3));n.strictEqual(u,!1,"should not verify 3 matches")});QUnit.test("verify - getter&setter - setter - was called twice should verify first arg",function(n){var r;QUnit.expect(1);var t=this,i={};t.testObject.getterAndSetter=i;t.testObject.getterAndSetter={};r=t.mole.verify(function(n){return n.getterAndSetter=i});n.strictEqual(r,!0,"should verify")});QUnit.test("verify - getter&setter - setter - was called twice should verify first arg called 1 time",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.getterAndSetter=r;i.testObject.getterAndSetter={};u=i.mole.verify(function(n){return n.getterAndSetter=r},t.exact(1));n.strictEqual(u,!0,"should verify")});QUnit.test("verify - getter&setter - setter - was called twice should not verify first arg called 0 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.getterAndSetter=r;i.testObject.getterAndSetter={};u=i.mole.verify(function(n){return n.getterAndSetter=r},t.exact(0));n.strictEqual(u,!1,"should not verify")});QUnit.test("verify - getter&setter - setter - was called twice should not verify first arg called 2 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.getterAndSetter=r;i.testObject.getterAndSetter={};u=i.mole.verify(function(n){return n.getterAndSetter=r},t.exact(2));n.strictEqual(u,!1,"should not verify")});QUnit.test("verify - getter&setter - setter - was called 3 times should not verify first arg called 2 times",function(n){var f;QUnit.expect(1);var i=this,r={},u={};i.testObject.getterAndSetter=r;i.testObject.getterAndSetter=u;i.testObject.getterAndSetter=u;f=i.mole.verify(function(n){return n.getterAndSetter=r},t.exact(2));n.strictEqual(f,!1,"should not verify")});QUnit.test("verify - getter&setter - setter - was called 3 times should verify first arg called 2 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.getterAndSetter=r;i.testObject.getterAndSetter={};i.testObject.getterAndSetter=r;u=i.mole.verify(function(n){return n.getterAndSetter=r},t.exact(2));n.strictEqual(u,!0,"should verify")});QUnit.test("verify - getter&setter - setter - was called twice should verify second arg was called",function(n){var r;QUnit.expect(1);var t=this,i={};t.testObject.getterAndSetter={};t.testObject.getterAndSetter=i;r=t.mole.verify(function(n){return n.getterAndSetter=i});n.strictEqual(r,!0,"should verify")});QUnit.test("verify - getter&setter - setter - was called twice should verify second arg was called 1 time",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.getterAndSetter={};i.testObject.getterAndSetter=r;u=i.mole.verify(function(n){return n.getterAndSetter=r},t.exact(1));n.strictEqual(u,!0,"should verify")});QUnit.test("verify - getter&setter - setter - was called twice should not verify second arg was called 2 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.getterAndSetter={};i.testObject.getterAndSetter=r;u=i.mole.verify(function(n){return n.getterAndSetter=r},t.exact(2));n.strictEqual(u,!1,"should not verify")});QUnit.test("verify - getter&setter - setter - was called twice should not verify second arg was called 0 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.getterAndSetter={};i.testObject.getterAndSetter=r;u=i.mole.verify(function(n){return n.getterAndSetter=r},t.exact(0));n.strictEqual(u,!1,"should not verify")});QUnit.test("verify - getter&setter - setter - was called 3 times should not verify second arg was called 0 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.getterAndSetter={};i.testObject.getterAndSetter=r;i.testObject.getterAndSetter=r;u=i.mole.verify(function(n){return n.getterAndSetter=r},t.exact(0));n.strictEqual(u,!1,"should not verify")});QUnit.test("verify - getter&setter - setter - was called 3 times should not verify second arg was called 1 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.getterAndSetter={};i.testObject.getterAndSetter=r;i.testObject.getterAndSetter=r;u=i.mole.verify(function(n){return n.getterAndSetter=r},t.exact(1));n.strictEqual(u,!1,"should not verify")});QUnit.test("verify - getter&setter - setter - was called 3 times should verify second arg was called 2 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.getterAndSetter={};i.testObject.getterAndSetter=r;i.testObject.getterAndSetter=r;u=i.mole.verify(function(n){return n.getterAndSetter=r},t.exact(2));n.strictEqual(u,!0,"should verify")});QUnit.test("verify - getter&setter - setter - was called 3 times should not verify second arg was called 3 times",function(n){var u;QUnit.expect(1);var i=this,r={};i.testObject.getterAndSetter={};i.testObject.getterAndSetter=r;i.testObject.getterAndSetter=r;u=i.mole.verify(function(n){return n.getterAndSetter=r},t.exact(3));n.strictEqual(u,!1,"should not verify")});QUnit.test("verify - getter&setter - setter - was called twice should not verify with another arg",function(n){var i;QUnit.expect(1);var t=this,r={};t.testObject.getterAndSetter={};t.testObject.getterAndSetter={};i=t.mole.verify(function(n){return n.getterAndSetter=r});n.strictEqual(i,!1,"should not verify")});QUnit.test("verify - getter&setter - setter - was called twice should not verify with another arg was called 1 times",function(n){var r;QUnit.expect(1);var i=this,u={};i.testObject.getterAndSetter={};i.testObject.getterAndSetter={};r=i.mole.verify(function(n){return n.getterAndSetter=u},t.exact(1));n.strictEqual(r,!1,"should not verify")});QUnit.test("verify - getter&setter - setter - was called twice should not verify with another arg was called 2 times",function(n){var r;QUnit.expect(1);var i=this,u={};i.testObject.getterAndSetter={};i.testObject.getterAndSetter={};r=i.mole.verify(function(n){return n.getterAndSetter=u},t.exact(2));n.strictEqual(r,!1,"should not verify")});QUnit.test("verify - getter&setter - setter - was called twice should verify with another arg was called 0 times",function(n){var r;QUnit.expect(1);var i=this,u={};i.testObject.getterAndSetter={};i.testObject.getterAndSetter={};r=i.mole.verify(function(n){return n.getterAndSetter=u},t.exact(0));n.strictEqual(r,!0,"should verify")});QUnit.test("verify - complex test",function(n){var r=this,i=[{},{},{},{},{},{}];r.testObject.noArgumentsFunction();r.testObject.oneArgumentsFunction(i[0]);r.testObject.setter=i[0];r.testObject.getterAndSetter=i[0];r.testObject.getterAndSetter;r.testObject.manyArgumentsFunction(i[2],i[2],i[2]);r.testObject.manyArgumentsFunction(i[0],i[1],i[2]);r.testObject.oneArgumentsFunction(i[2]);r.testObject.getterAndSetter;r.testObject.setter=i[2];r.testObject.getterAndSetter=i[2];r.testObject.manyArgumentsFunction(i[0],i[1],i[2]);r.testObject.oneArgumentsFunction(i[0]);r.testObject.setter=i[0];r.testObject.getterAndSetter;r.testObject.getterAndSetter=i[0];r.testObject.manyArgumentsFunction(i[1],i[1],i[1]);r.testObject.getter;r.testObject.noArgumentsFunction();r.testObject.oneArgumentsFunction(i[0]);r.testObject.setter=i[0];r.testObject.getterAndSetter=i[0];r.testObject.getter;r.testObject.noArgumentsFunction();r.testObject.getterAndSetter;r.testObject.manyArgumentsFunction(i[0],i[1],i[0]);r.testObject.noArgumentsFunction();r.testObject.manyArgumentsFunction(i[0],i[1],i[2]);r.testObject.getter;r.testObject.setter=i[1];r.testObject.oneArgumentsFunction(i[1]);r.testObject.getterAndSetter=i[1];r.testObject.getterAndSetter=i[2];r.testObject.getterAndSetter=i[2];r.testObject.manyArgumentsFunction(i[2],i[1],i[2]);r.testObject.getter;r.testObject.oneArgumentsFunction(i[2]);r.testObject.setter=i[2];r.testObject.setter=i[2];r.testObject.manyArgumentsFunction(i[0],i[1],i[0]);r.testObject.oneArgumentsFunction(i[2]);n.strictEqual(r.mole.verify(function(n){return n.noArgumentsFunction()}),!0,"no arguments function should be verified");n.strictEqual(r.mole.verify(function(n){return n.noArgumentsFunction()},t.exact(0)),!1,"no arguments function should not be verified for 0");n.strictEqual(r.mole.verify(function(n){return n.noArgumentsFunction()},t.exact(1)),!1,"no arguments function should not be verified for 1");n.strictEqual(r.mole.verify(function(n){return n.noArgumentsFunction()},t.exact(2)),!1,"no arguments function should not be verified for 2");n.strictEqual(r.mole.verify(function(n){return n.noArgumentsFunction()},t.exact(3)),!1,"no arguments function should not be verified for 3");n.strictEqual(r.mole.verify(function(n){return n.noArgumentsFunction()},t.exact(4)),!0);n.strictEqual(r.mole.verify(function(n){return n.noArgumentsFunction()},t.exact(5)),!1,"no arguments function should not be verified for 5");n.strictEqual(r.mole.verify(function(n){return n.noArgumentsFunction()},t.exact(6)),!1,"no arguments function should not be verified for 6");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(i[0])}),!0,"one arguments function should be verified for argSet[0]");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(i[1])}),!0,"one arguments function should be verified for argSet[1]");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(i[2])}),!0,"one arguments function should be verified for argSet[2]");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(i[3])}),!1,"one arguments function should not be verified for argSet[3]");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(i[0])},t.exact(0)),!1,"one arguments function should not be verified for argSet[0] 0 times");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(i[0])},t.exact(1)),!1,"one arguments function should not be verified for argSet[0] 1 times");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(i[0])},t.exact(2)),!1,"one arguments function not should be verified for argSet[0] 2 times");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(i[0])},t.exact(3)),!0,"one arguments function should be verified for argSet[0] 3 times");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(i[0])},t.exact(4)),!1,"one arguments function should not be verified for argSet[0] 4 times");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(i[1])},t.exact(0)),!1,"one arguments function should not be verified for argSet[1] 0 times");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(i[1])},t.exact(1)),!0,"one arguments function should be verified for argSet[1] 1 times");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(i[1])},t.exact(2)),!1,"one arguments function should not be verified for argSet[1] 2 times");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(i[1])},t.exact(3)),!1,"one arguments function should not be verified for argSet[1] 3 times");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(i[2])},t.exact(0)),!1,"one arguments function should not be verified for argSet[2] 0 times");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(i[2])},t.exact(1)),!1,"one arguments function should not be verified for argSet[2] 1 times");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(i[2])},t.exact(2)),!1,"one arguments function should not be verified for argSet[2] 2 times");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(i[2])},t.exact(3)),!0,"one arguments function should be verified for argSet[2] 3 times");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(i[2])},t.exact(4)),!1,"one arguments function should not be verified for argSet[2] 4 times");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(i[2])},t.exact(5)),!1,"one arguments function should not be verified for argSet[2] 5 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[1],i[2])}),!0,"many arguments function should be verified for argSet[0,1,2]");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[1],i[2])},t.exact(0)),!1,"many arguments function should not be verified for argSet[0,1,2] 0 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[1],i[2])},t.exact(1)),!1,"many arguments function should not be verified for argSet[0,1,2] 1 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[1],i[2])},t.exact(2)),!1,"many arguments function should not be verified for argSet[0,1,2] 2 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[1],i[2])},t.exact(3)),!0,"many arguments function should be verified for argSet[0,1,2] 3 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[1],i[2])},t.exact(4)),!1,"many arguments function should not be verified for argSet[0,1,2] 4 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[1],i[2])},t.exact(5)),!1,"many arguments function should not be verified for argSet[0,1,2] 5 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[1],i[0])}),!0,"many arguments function should be verified for argSet[0,1,0]");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[1],i[0])},t.exact(0)),!1,"many arguments function should not be verified for argSet[0,1,0] 0 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[1],i[0])},t.exact(1)),!1,"many arguments function should not be verified for argSet[0,1,0] 1 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[1],i[0])},t.exact(2)),!0,"many arguments function should be verified for argSet[0,1,0] 2 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[1],i[0])},t.exact(3)),!1,"many arguments function should not be verified for argSet[0,1,0] 3 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[1],i[0])},t.exact(4)),!1,"many arguments function should not be verified for argSet[0,1,0] 4 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[1],i[1],i[1])}),!0,"many arguments function should not be verified for argSet[1,1,1]");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[1],i[1],i[1])},t.exact(0)),!1,"many arguments function should not be verified for argSet[1,1,1] 0 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[1],i[1],i[1])},t.exact(1)),!0,"many arguments function should be verified for argSet[1,1,1] 1 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[1],i[1],i[1])},t.exact(2)),!1,"many arguments function should not be verified for argSet[1,1,1] 2 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[1],i[1],i[1])},t.exact(3)),!1,"many arguments function should not be verified for argSet[1,1,1] 3 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[2],i[1],i[2])}),!0,"many arguments function should be verified for argSet[2,1,2]");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[2],i[1],i[2])},t.exact(0)),!1,"many arguments function should not be verified for argSet[2,1,2] 0 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[2],i[1],i[2])},t.exact(1)),!0,"many arguments function should be verified for argSet[2,1,2] 1 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[2],i[1],i[2])},t.exact(2)),!1,"many arguments function should not be verified for argSet[2,1,2] 2 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[2],i[1],i[2])},t.exact(3)),!1,"many arguments function should not be verified for argSet[2,1,2] 3 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[2],i[2],i[2])}),!0,"many arguments function should be verified for argSet[2,2,2]");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[2],i[2],i[2])},t.exact(0)),!1,"many arguments function should not be verified for argSet[2,2,2] 0 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[2],i[2],i[2])},t.exact(1)),!0,"many arguments function should be verified for argSet[2,2,2] 1 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[2],i[2],i[2])},t.exact(2)),!1,"many arguments function should not be verified for argSet[2,2,2] 2 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[2],i[2],i[2])},t.exact(3)),!1,"many arguments function should not be verified for argSet[2,2,2] 3 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[0],i[0])}),!1,"many arguments function should not be verified for argSet[0,0,0]");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[0],i[0])},t.exact(0)),!0,"many arguments function should be verified for argSet[0,0,0] 0 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[0],i[0])},t.exact(1)),!1,"many arguments function should not be verified for argSet[0,0,0] 1 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[0],i[0])},t.exact(2)),!1,"many arguments function should not be verified for argSet[0,0,0] 2 times");n.strictEqual(r.mole.verify(function(n){return n.manyArgumentsFunction(i[0],i[0],i[0])},t.exact(3)),!1,"many arguments function should not be verified for argSet[0,0,0] 3 times");n.strictEqual(r.mole.verify(function(n){return n.getter}),!0,"getter should be verified");n.strictEqual(r.mole.verify(function(n){return n.getter},t.exact(0)),!1,"getter should not be verified for 0");n.strictEqual(r.mole.verify(function(n){return n.getter},t.exact(1)),!1,"getter should not be verified for 1");n.strictEqual(r.mole.verify(function(n){return n.getter},t.exact(2)),!1,"getter should not be verified for 2");n.strictEqual(r.mole.verify(function(n){return n.getter},t.exact(3)),!1,"getter should not be verified for 3");n.strictEqual(r.mole.verify(function(n){return n.getter},t.exact(4)),!0);n.strictEqual(r.mole.verify(function(n){return n.getter},t.exact(5)),!1,"getter should not be verified for 5");n.strictEqual(r.mole.verify(function(n){return n.getter},t.exact(6)),!1,"getter should not be verified for 6");n.strictEqual(r.mole.verify(function(n){return n.setter=i[0]}),!0,"setter should be verified for argSet[0]");n.strictEqual(r.mole.verify(function(n){return n.setter=i[1]}),!0,"setter should be verified for argSet[1]");n.strictEqual(r.mole.verify(function(n){return n.setter=i[2]}),!0,"setter should be verified for argSet[2]");n.strictEqual(r.mole.verify(function(n){return n.setter=i[3]}),!1,"setter should not be verified for argSet[3]");n.strictEqual(r.mole.verify(function(n){return n.setter=i[0]},t.exact(0)),!1,"setter should not be verified for argSet[0] 0 times");n.strictEqual(r.mole.verify(function(n){return n.setter=i[0]},t.exact(1)),!1,"setter should not be verified for argSet[0] 1 times");n.strictEqual(r.mole.verify(function(n){return n.setter=i[0]},t.exact(2)),!1,"setter not should be verified for argSet[0] 2 times");n.strictEqual(r.mole.verify(function(n){return n.setter=i[0]},t.exact(3)),!0,"setter should be verified for argSet[0] 3 times");n.strictEqual(r.mole.verify(function(n){return n.setter=i[0]},t.exact(4)),!1,"setter should not be verified for argSet[0] 4 times");n.strictEqual(r.mole.verify(function(n){return n.setter=i[1]},t.exact(0)),!1,"setter should not be verified for argSet[1] 0 times");n.strictEqual(r.mole.verify(function(n){return n.setter=i[1]},t.exact(1)),!0,"setter should be verified for argSet[1] 1 times");n.strictEqual(r.mole.verify(function(n){return n.setter=i[1]},t.exact(2)),!1,"setter should not be verified for argSet[1] 2 times");n.strictEqual(r.mole.verify(function(n){return n.setter=i[1]},t.exact(3)),!1,"setter should not be verified for argSet[1] 3 times");n.strictEqual(r.mole.verify(function(n){return n.setter=i[2]},t.exact(0)),!1,"setter should not be verified for argSet[2] 0 times");n.strictEqual(r.mole.verify(function(n){return n.setter=i[2]},t.exact(1)),!1,"setter should not be verified for argSet[2] 1 times");n.strictEqual(r.mole.verify(function(n){return n.setter=i[2]},t.exact(2)),!1,"setter should not be verified for argSet[2] 2 times");n.strictEqual(r.mole.verify(function(n){return n.setter=i[2]},t.exact(3)),!0,"setter should be verified for argSet[2] 3 times");n.strictEqual(r.mole.verify(function(n){return n.setter=i[2]},t.exact(4)),!1,"setter should not be verified for argSet[2] 4 times");n.strictEqual(r.mole.verify(function(n){return n.setter=i[2]},t.exact(5)),!1,"setter should not be verified for argSet[2] 5 times");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter}),!0,"getterAndSetter getter should be verified");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter},t.exact(0)),!1,"getterAndSetter getter should not be verified for 0");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter},t.exact(1)),!1,"getterAndSetter getter should not be verified for 1");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter},t.exact(2)),!1,"getterAndSetter getter should not be verified for 2");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter},t.exact(3)),!1,"getterAndSetter getter should not be verified for 3");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter},t.exact(4)),!0);n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter},t.exact(5)),!1,"getterAndSetter getter should not be verified for 5");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter},t.exact(6)),!1,"getterAndSetter getter should not be verified for 6");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter=i[0]}),!0,"getterAndSetter setter should be verified for argSet[0]");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter=i[1]}),!0,"getterAndSetter setter should be verified for argSet[1]");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter=i[2]}),!0,"getterAndSetter setter should be verified for argSet[2]");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter=i[3]}),!1,"getterAndSetter setter should not be verified for argSet[3]");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter=i[0]},t.exact(0)),!1,"getterAndSetter setter should not be verified for argSet[0] 0 times");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter=i[0]},t.exact(1)),!1,"getterAndSetter setter should not be verified for argSet[0] 1 times");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter=i[0]},t.exact(2)),!1,"getterAndSetter setter not should be verified for argSet[0] 2 times");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter=i[0]},t.exact(3)),!0,"getterAndSetter setter should be verified for argSet[0] 3 times");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter=i[0]},t.exact(4)),!1,"getterAndSetter setter should not be verified for argSet[0] 4 times");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter=i[1]},t.exact(0)),!1,"getterAndSetter setter should not be verified for argSet[1] 0 times");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter=i[1]},t.exact(1)),!0,"getterAndSetter setter should be verified for argSet[1] 1 times");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter=i[1]},t.exact(2)),!1,"getterAndSetter setter should not be verified for argSet[1] 2 times");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter=i[1]},t.exact(3)),!1,"getterAndSetter setter should not be verified for argSet[1] 3 times");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter=i[2]},t.exact(0)),!1,"getterAndSetter setter should not be verified for argSet[2] 0 times");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter=i[2]},t.exact(1)),!1,"getterAndSetter setter should not be verified for argSet[2] 1 times");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter=i[2]},t.exact(2)),!1,"getterAndSetter setter should not be verified for argSet[2] 2 times");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter=i[2]},t.exact(3)),!0,"getterAndSetter setter should be verified for argSet[2] 3 times");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter=i[2]},t.exact(4)),!1,"getterAndSetter setter should not be verified for argSet[2] 4 times");n.strictEqual(r.mole.verify(function(n){return n.getterAndSetter=i[2]},t.exact(5)),!1,"getterAndSetter setter should not be verified for argSet[2] 5 times")});QUnit.test("verify - times returns false should return false",1,function(n){var t=this,i={match:function(){return!1}},r=t.mole.verify(function(n){return n.noArgumentsFunction()},i);n.strictEqual(r,!1,"should return false if times do not match")});QUnit.test("verify - times returns true should return true",1,function(n){var t=this,i={match:function(){return!0}},r=t.mole.verify(function(n){return n.noArgumentsFunction()},i);n.strictEqual(r,!0,"should return true if times match")});QUnit.test("verify - one argument - ItIsBase returns false should return false",1,function(n){var t=this,i=new u,r;i.match=function(){return!1};t.testObject.oneArgumentsFunction(1);r=t.mole.verify(function(n){return n.oneArgumentsFunction(i)});n.strictEqual(r,!1,"should return false if ItIs returns false")});QUnit.test("verify - one argument - ItIsBase returns false should return true",1,function(n){var t=this,i=new u,r;i.match=function(){return!0};t.testObject.oneArgumentsFunction(1);r=t.mole.verify(function(n){return n.oneArgumentsFunction(i)});n.strictEqual(r,!0,"should return true if ItIs returns true")});QUnit.test("verify - many arguments - ItIsBase returns false should return false",1,function(n){var i=this,t=new u,r;t.match=function(){return!1};i.testObject.manyArgumentsFunction(1,1,1);r=i.mole.verify(function(n){return n.manyArgumentsFunction(t,t,t)});n.strictEqual(r,!1,"should return false if ItIs returns false")});QUnit.test("verify - many arguments - ItIsBase returns true should return true",1,function(n){var i=this,t=new u,r;t.match=function(){return!0};i.testObject.manyArgumentsFunction(1,1,1);r=i.mole.verify(function(n){return n.manyArgumentsFunction(t,t,t)});n.strictEqual(r,!0,"should return true if ItIs returns true")});QUnit.test("verify - many arguments - ItIsBase returns true and false should return false",1,function(n){var r=this,t=new u,i,f;t.match=function(){return!0};i=new u;i.match=function(){return!1};r.testObject.manyArgumentsFunction(1,1,1);f=r.mole.verify(function(n){return n.manyArgumentsFunction(t,t,i)});n.strictEqual(f,!1,"should return false if some ItIs returns false")});QUnit.test("verify - many arguments - ItIsBase returns true and other arguments dont match should return false",1,function(n){var i=this,t=new u,r;t.match=function(){return!0};i.testObject.manyArgumentsFunction(1,1,1);r=i.mole.verify(function(n){return n.manyArgumentsFunction(t,t,2)});n.strictEqual(r,!1,"should return false if some arguments dont match")});QUnit.test("verify - many arguments - called many times ItIsBase returns true should return true",1,function(n){var i=this,r=new u,f;r.match=function(){return!0};i.testObject.manyArgumentsFunction(1,1,2);i.testObject.manyArgumentsFunction(1,1,1);i.testObject.manyArgumentsFunction(1,1,1);i.testObject.manyArgumentsFunction(1,1,2);i.testObject.manyArgumentsFunction(1,1,1);i.testObject.manyArgumentsFunction(1,1,1);f=i.mole.verify(function(n){return n.manyArgumentsFunction(r,r,2)},t.exact(2));n.strictEqual(f,!0,"should return true if ItIs returns true and the times match")});QUnit.test("verify - many arguments - called many times ItIsBase returns true once should return true",1,function(n){var i=this,r=new u,f=0,e;r.match=function(){return f++,f<=1};i.testObject.manyArgumentsFunction(1,1,2);i.testObject.manyArgumentsFunction(1,1,1);i.testObject.manyArgumentsFunction(1,1,1);i.testObject.manyArgumentsFunction(1,1,2);i.testObject.manyArgumentsFunction(1,1,1);i.testObject.manyArgumentsFunction(1,1,1);e=i.mole.verify(function(n){return n.manyArgumentsFunction(1,r,2)},t.exact(1));n.strictEqual(e,!0,"should return true if ItIs returns true and the times match")});QUnit.test("verify - many arguments - called with numbers and strings should return only the strings",1,function(n){var r=this,u=i.isAny(Number),e=i.isAny(String),f;r.testObject.manyArgumentsFunction(11,1,1);r.testObject.manyArgumentsFunction(12,1,2);r.testObject.manyArgumentsFunction(13,"1",3);r.testObject.manyArgumentsFunction(14,1,4);r.testObject.manyArgumentsFunction(15,"112",5);r.testObject.manyArgumentsFunction(16,1,6);f=r.mole.verify(function(n){return n.manyArgumentsFunction(u,e,u)},t.exact(2));n.strictEqual(f,!0,"should return true for 2 string calls")});QUnit.test("verify - setter - ItIsBase returns false should return false",1,function(n){var t=this,i=new u,r;i.match=function(){return!1};t.testObject.setter=1;r=t.mole.verify(function(n){return n.setter=i});n.strictEqual(r,!1,"should return false if ItIs returns false")});QUnit.test("verify - setter - ItIsBase returns false should return true",1,function(n){var t=this,i=new u,r;i.match=function(){return!0};t.testObject.setter=1;r=t.mole.verify(function(n){return n.setter=i});n.strictEqual(r,!0,"should return true if ItIs returns true")});QUnit.test("verify - getter&setter - setter - ItIsBase returns false should return false",1,function(n){var t=this,i=new u,r;i.match=function(){return!1};t.testObject.getterAndSetter=1;r=t.mole.verify(function(n){return n.getterAndSetter=i});n.strictEqual(r,!1,"should return false if ItIs returns false")});QUnit.test("verify - getter&setter - setter - ItIsBase returns false should return true",1,function(n){var t=this,i=new u,r;i.match=function(){return!0};t.testObject.getterAndSetter=1;r=t.mole.verify(function(n){return n.getterAndSetter=i});n.strictEqual(r,!0,"should return true if ItIs returns true")});QUnit.test("verify - after setups should count ok",function(n){var r=this;r.mole.setup(function(n){return n.getter}).callback(function(){});r.testObject.getter;r.testObject.getter;r.testObject.getter;r.testObject.getter;r.mole.setup(function(n){return n.oneArgumentsFunction(1)}).callback(function(){});r.mole.setup(function(n){return n.oneArgumentsFunction(2)}).callback(function(){});r.mole.setup(function(n){return n.oneArgumentsFunction(3)}).callback(function(){});r.testObject.oneArgumentsFunction(1);r.testObject.oneArgumentsFunction(2);r.testObject.oneArgumentsFunction(2);r.testObject.oneArgumentsFunction(3);r.testObject.oneArgumentsFunction(3);r.testObject.oneArgumentsFunction(3);r.testObject.oneArgumentsFunction(4);r.testObject.oneArgumentsFunction(4);r.testObject.oneArgumentsFunction(4);r.testObject.oneArgumentsFunction(4);n.strictEqual(r.mole.verify(function(n){return n.getter},t.exact(4)),!0,"should verify getter correctly");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(1)},t.exact(1)),!0,"should verify calling the function with parameter correctly");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(2)},t.exact(2)),!0,"should verify calling the function with parameter correctly");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(3)},t.exact(3)),!0,"should verify calling the function with parameter correctly");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(4)},t.exact(4)),!0,"should verify calling the function with parameter correctly");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(i.isAny(Number))},t.exact(10)),!0,"should verify calling with any number correctly");n.strictEqual(r.mole.verify(function(n){return n.oneArgumentsFunction(i.isAny(Number))},t.exact(11)),!1,"should verify calling with any number correctly")});QUnit.test("verifyPrivate - should verify only the private function",3,function(t){var i=this,r={},u={},f={};i.testObject.callPrivateFunction(1);var e=i.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[1]),o=i.mole.verify(function(n){return n.oneArgumentsFunction(r)}),s=i.mole.verify(function(n){return n.manyArgumentsFunction(r,u,f)});t.strictEqual(e,!0,"private function should be verified");t.strictEqual(o,!1,"one arguments should not be verified");t.strictEqual(s,!1,"many arguments should not be verified")});QUnit.test("verifyPrivate - should verify only the many argument function",3,function(t){var r=this,u={},f={},e={};r.testObject.manyArgumentsFunction(u,f,e);var o=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[i.isAny(Object)]),s=r.mole.verify(function(n){return n.oneArgumentsFunction(u)}),h=r.mole.verify(function(n){return n.manyArgumentsFunction(u,f,e)});t.strictEqual(o,!1,"no arguments should not be verified");t.strictEqual(s,!1,"one arguments should not be verified");t.strictEqual(h,!0,"many arguments should be verified")});QUnit.test("verifyPrivate - was not called should not find a match",function(t){QUnit.expect(1);var i=this,r=i.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[{}]);t.strictEqual(r,!1,"should not find a match")});QUnit.test("verifyPrivate - was not called should not find 1 match",function(i){QUnit.expect(1);var r=this,u=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[{}],t.exact(1));i.strictEqual(u,!1,"should not find a match")});QUnit.test("verifyPrivate - was not called should not find 2 matches",function(i){QUnit.expect(1);var r=this,u=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[{}],t.exact(2));i.strictEqual(u,!1,"should not find a match")});QUnit.test("verifyPrivate - was not called should find 0 matches",function(i){QUnit.expect(1);var r=this,u=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[{}],t.exact(0));i.strictEqual(u,!0,"should find 0 matches")});QUnit.test("verifyPrivate - was called should find a match",function(t){var i,r,u;QUnit.expect(1);i=this;r={};i.testObject.callPrivateFunction(r);u=i.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[r]);t.strictEqual(u,!0,"should find a match")});QUnit.test("verifyPrivate - was called should find 1 match",function(i){var r,u,f;QUnit.expect(1);r=this;u={};r.testObject.callPrivateFunction(u);f=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[u],t.exact(1));i.strictEqual(f,!0,"should find a match")});QUnit.test("verifyPrivate - was called should not find 2 matches",function(i){var r,u,f;QUnit.expect(1);r=this;u={};r.testObject.callPrivateFunction(u);f=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[u],t.exact(2));i.strictEqual(f,!1,"should not find matches")});QUnit.test("verifyPrivate - was called should not verify 0 matches",function(i){var r,u,f;QUnit.expect(1);r=this;u={};r.testObject.callPrivateFunction(u);f=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[u],t.exact(0));i.strictEqual(f,!1,"should not verify 0 matches")});QUnit.test("verifyPrivate - was called twice should find a match",function(t){var i,r,u;QUnit.expect(1);i=this;r={};i.testObject.callPrivateFunction(r);i.testObject.callPrivateFunction(r);u=i.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[r]);t.strictEqual(u,!0,"should verify match")});QUnit.test("verifyPrivate - was called twice should find 2 matches",function(i){var r,u,f;QUnit.expect(1);r=this;u={};r.testObject.callPrivateFunction(u);r.testObject.callPrivateFunction(u);f=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[u],t.exact(2));i.strictEqual(f,!0,"should verify match")});QUnit.test("verifyPrivate - was called twice should not find 0 matches",function(i){var r,u,f;QUnit.expect(1);r=this;u={};r.testObject.callPrivateFunction(u);r.testObject.callPrivateFunction(u);f=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[u],t.exact(0));i.strictEqual(f,!1,"should not verify 0 matches")});QUnit.test("verifyPrivate - was called twice should not find 1 matches",function(i){var r,u,f;QUnit.expect(1);r=this;u={};r.testObject.callPrivateFunction(u);r.testObject.callPrivateFunction(u);f=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[u],t.exact(1));i.strictEqual(f,!1,"should not verify 1 matches")});QUnit.test("verifyPrivate - was called twice should not find 3 matches",function(i){var r,u,f;QUnit.expect(1);r=this;u={};r.testObject.callPrivateFunction(u);r.testObject.callPrivateFunction(u);f=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[u],t.exact(3));i.strictEqual(f,!1,"should not verify 3 matches")});QUnit.test("verifyPrivate - was called twice should verify first arg",function(t){var u;QUnit.expect(1);var i=this,r={};i.testObject.callPrivateFunction(r);i.testObject.callPrivateFunction({});u=i.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[r]);t.strictEqual(u,!0,"should verify")});QUnit.test("verifyPrivate - was called twice should verify first arg called 1 time",function(i){var f;QUnit.expect(1);var r=this,u={};r.testObject.callPrivateFunction(u);r.testObject.callPrivateFunction({});f=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[u],t.exact(1));i.strictEqual(f,!0,"should verify")});QUnit.test("verifyPrivate - was called twice should not verify first arg called 0 times",function(i){var f;QUnit.expect(1);var r=this,u={};r.testObject.callPrivateFunction(u);r.testObject.callPrivateFunction({});f=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[u],t.exact(0));i.strictEqual(f,!1,"should not verify")});QUnit.test("verifyPrivate - was called twice should not verify first arg called 2 times",function(i){var f;QUnit.expect(1);var r=this,u={};r.testObject.callPrivateFunction(u);r.testObject.callPrivateFunction({});f=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[u],t.exact(2));i.strictEqual(f,!1,"should not verify")});QUnit.test("verifyPrivate - was called 3 times should not verify first arg called 2 times",function(i){var e;QUnit.expect(1);var r=this,u={},f={};r.testObject.callPrivateFunction(u);r.testObject.callPrivateFunction(f);r.testObject.callPrivateFunction(f);e=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[u],t.exact(2));i.strictEqual(e,!1,"should not verify")});QUnit.test("verifyPrivate - was called 3 times should verify first arg called 2 times",function(i){var f;QUnit.expect(1);var r=this,u={};r.testObject.callPrivateFunction(u);r.testObject.callPrivateFunction({});r.testObject.callPrivateFunction(u);f=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[u],t.exact(2));i.strictEqual(f,!0,"should verify")});QUnit.test("verifyPrivate - was called twice should verify second arg was called",function(t){var u;QUnit.expect(1);var i=this,r={};i.testObject.callPrivateFunction({});i.testObject.callPrivateFunction(r);u=i.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[r]);t.strictEqual(u,!0,"should verify")});QUnit.test("verifyPrivate - was called twice should verify second arg was called 1 time",function(i){var f;QUnit.expect(1);var r=this,u={};r.testObject.callPrivateFunction({});r.testObject.callPrivateFunction(u);f=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[u],t.exact(1));i.strictEqual(f,!0,"should verify")});QUnit.test("verifyPrivate - was called twice should not verify second arg was called 2 times",function(i){var f;QUnit.expect(1);var r=this,u={};r.testObject.callPrivateFunction({});r.testObject.callPrivateFunction(u);f=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[u],t.exact(2));i.strictEqual(f,!1,"should not verify")});QUnit.test("verifyPrivate - was called twice should not verify second arg was called 0 times",function(i){var f;QUnit.expect(1);var r=this,u={};r.testObject.callPrivateFunction({});r.testObject.callPrivateFunction(u);f=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[u],t.exact(0));i.strictEqual(f,!1,"should not verify")});QUnit.test("verifyPrivate - was called 3 times should not verify second arg was called 0 times",function(i){var f;QUnit.expect(1);var r=this,u={};r.testObject.callPrivateFunction({});r.testObject.callPrivateFunction(u);r.testObject.callPrivateFunction(u);f=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[u],t.exact(0));i.strictEqual(f,!1,"should not verify")});QUnit.test("verifyPrivate - was called 3 times should not verify second arg was called 1 times",function(i){var f;QUnit.expect(1);var r=this,u={};r.testObject.callPrivateFunction({});r.testObject.callPrivateFunction(u);r.testObject.callPrivateFunction(u);f=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[u],t.exact(1));i.strictEqual(f,!1,"should not verify")});QUnit.test("verifyPrivate - was called 3 times should verify second arg was called 2 times",function(i){var f;QUnit.expect(1);var r=this,u={};r.testObject.callPrivateFunction({});r.testObject.callPrivateFunction(u);r.testObject.callPrivateFunction(u);f=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[u],t.exact(2));i.strictEqual(f,!0,"should verify")});QUnit.test("verifyPrivate - was called 3 times should not verify second arg was called 3 times",function(i){var f;QUnit.expect(1);var r=this,u={};r.testObject.callPrivateFunction({});r.testObject.callPrivateFunction(u);r.testObject.callPrivateFunction(u);f=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[u],t.exact(3));i.strictEqual(f,!1,"should not verify")});QUnit.test("verifyPrivate - was called twice should not verify with another arg",function(t){var r;QUnit.expect(1);var i=this;i.testObject.callPrivateFunction({});i.testObject.callPrivateFunction({});r=i.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[{}]);t.strictEqual(r,!1,"should not verify")});QUnit.test("verifyPrivate - was called twice should not verify with another arg was called 1 times",function(i){var u;QUnit.expect(1);var r=this;r.testObject.callPrivateFunction({});r.testObject.callPrivateFunction({});u=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[{}],t.exact(1));i.strictEqual(u,!1,"should not verify")});QUnit.test("verifyPrivate - was called twice should not verify with another arg was called 2 times",function(i){var u;QUnit.expect(1);var r=this;r.testObject.callPrivateFunction({});r.testObject.callPrivateFunction({});u=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[{}],t.exact(2));i.strictEqual(u,!1,"should not verify")});QUnit.test("verifyPrivate - was called twice should verify with another arg was called 0 times",function(i){var u;QUnit.expect(1);var r=this;r.testObject.callPrivateFunction({});r.testObject.callPrivateFunction({});u=r.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[{}],t.exact(0));i.strictEqual(u,!0,"should verify")});QUnit.test("verifyPrivate - times returns false should return false",1,function(t){var i=this,r={match:function(){return!1}},u=i.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[1],r);t.strictEqual(u,!1,"should return false if times do not match")});QUnit.test("verifyPrivate - times returns true should return true",1,function(t){var i=this,r={match:function(){return!0}},u=i.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[1],r);t.strictEqual(u,!0,"should return true if times match")});QUnit.test("verifyPrivate - one argument - ItIsBase returns false should return false",1,function(t){var i=this,r=new u,f;r.match=function(){return!1};i.testObject.callPrivateFunction(1);f=i.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[r]);t.strictEqual(f,!1,"should return false if ItIs returns false")});QUnit.test("verifyPrivate - one argument - ItIsBase returns false should return true",1,function(t){var i=this,r=new u,f;r.match=function(){return!0};i.testObject.callPrivateFunction(1);f=i.mole.verifyPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,[r]);t.strictEqual(f,!0,"should return true if ItIs returns true")});QUnit.test("callBase - set to true after constructor should call the original function",1,function(t){var i=new n.TestObject,u=new r(i);u.callBase=!0;i.onNoArgumentsFunctionCalled=function(){t.ok(!0,"original function should be called")};i.noArgumentsFunction()});QUnit.test("callBase - set to true after constructor should call the original getter",1,function(t){var i=new n.TestObject,f=new r(i),u;f.callBase=!0;u=function(){t.ok(!0,"original getter should be called")};i.onGetterCalled=u;i.getter});QUnit.test("callBase - set to true after constructor should call the original setter",1,function(t){var i=new n.TestObject,f=new r(i),u;f.callBase=!0;u=function(){t.ok(!0,"original setter should be called")};i.onSetterCalled=u;i.setter=1});QUnit.test("callBase - set to true after constructor should call the original getter of getter and setter",1,function(t){var i=new n.TestObject,f=new r(i),u;f.callBase=!0;u=function(){t.ok(!0,"original getter should be called")};i.onGetterOfGetterAndSetterCalled=u;i.getterAndSetter});QUnit.test("callBase - set to true after constructor should call the original setter of getter and setter",1,function(t){var i=new n.TestObject,f=new r(i),u;f.callBase=!0;u=function(){t.ok(!0,"original setter should be called")};i.onSetterOfGetterAndSetterCalled=u;i.getterAndSetter=1});QUnit.test("callBase - set to false after constructor should not call the original function",0,function(t){var i=new n.TestObject,u=new r(i);u.callBase=!1;i.onNoArgumentsFunctionCalled=function(){t.ok(!1,"original function should not be called")};i.noArgumentsFunction()});QUnit.test("callBase - set to false after constructor should not call the original getters and setters",0,function(t){var i=new n.TestObject,f=new r(i),u;f.callBase=!1;u=function(){t.ok(!1,"should not be called")};i.onGetterCalled=u;i.onSetterCalled=u;i.onGetterOfGetterAndSetterCalled=u;i.onSetterOfGetterAndSetterCalled=u;i.getter;i.setter=1;i.getterAndSetter;i.getterAndSetter=1});QUnit.test("callBase - set to true should return the original function value",1,function(t){var i=new n.TestObject,f=new r(i),u;f.callBase=!0;u=i.returning1Function();t.strictEqual(u,1,"should return the original value")});QUnit.test("callBase - set to true should return the original getter value",1,function(t){var i=new n.TestObject,e=new r(i),u,f;e.callBase=!0;u={};i.getterValue=u;f=i.getter;t.strictEqual(f,u,"should return the correct value")});QUnit.test("callBase - set to true should set the setter value",1,function(t){var i=new n.TestObject,f=new r(i),u;f.callBase=!0;u={};i.setter=u;t.strictEqual(i.setterValue,u,"should set the correct value")});QUnit.test("callBase - set to true should return the original getter of getter and setter value",1,function(t){var i=new n.TestObject,e=new r(i),u,f;e.callBase=!0;u={};i.getterAndSetterValue=u;f=i.getterAndSetter;t.strictEqual(f,u,"should return the correct value")});QUnit.test("callBase - set to true should set the setter of getter and setter value",1,function(t){var i=new n.TestObject,f=new r(i),u;f.callBase=!0;u={};i.getterAndSetter=u;t.strictEqual(i.getterAndSetterValue,u,"should set the correct value")});QUnit.test("callBase - set to false should not return the original function value",1,function(t){var i=new n.TestObject,f=new r(i),u;f.callBase=!1;u=i.returning1Function();t.notStrictEqual(u,1,"should not return the original value")});QUnit.test("callBase - set to false should not return the original getter value",1,function(t){var i=new n.TestObject,e=new r(i),u,f;e.callBase=!1;u={};i.getterValue=u;f=i.getter;t.notStrictEqual(f,u,"should not return the value")});QUnit.test("callBase - set to false should not set the setter value",1,function(t){var i=new n.TestObject,f=new r(i),u;f.callBase=!1;u={};i.setter=u;t.notStrictEqual(i.setterValue,u,"should not set the value")});QUnit.test("callBase - set to false should not return the original getter of getter and setter value",1,function(t){var i=new n.TestObject,e=new r(i),u,f;e.callBase=!1;u={};i.getterAndSetterValue=u;f=i.getterAndSetter;t.notStrictEqual(f,u,"should not return the correct value")});QUnit.test("callBase - set to false should not set the setter of getter and setter value",1,function(t){var i=new n.TestObject,f=new r(i),u;f.callBase=!1;u={};i.getterAndSetter=u;t.notStrictEqual(i.getterAndSetterValue,u,"should not set the value")});QUnit.test("callBase - set to false should return undefined",1,function(t){var i=new n.TestObject,f=new r(i),u;f.callBase=!1;u=i.returning1Function();t.strictEqual(u,undefined,"should return undefined")});QUnit.test("callBase - set to false should return undefined from getters",2,function(t){var i=new n.TestObject,e=new r(i),u,f;e.callBase=!1;i.getterValue=1;i.getterAndSetterValue=1;u=i.getter;f=i.getterAndSetter;t.strictEqual(u,undefined,"should return undefined");t.strictEqual(f,undefined,"should return undefined")});QUnit.test("setup - callback - should not call callback if function is not called",0,function(n){var t=this;t.mole.setup(function(n){return n.noArgumentsFunction()}).callback(function(){n.ok(!1,"should not call callback")})});QUnit.test("setup - callback - should not call callback if getter is not called",0,function(n){var t=this;t.mole.setup(function(n){return n.getter}).callback(function(){n.ok(!1,"should not call callback")})});QUnit.test("setup - callback - should not call callback if setter is not called",0,function(n){var t=this;t.mole.setup(function(n){return n.setter=1}).callback(function(){n.ok(!1,"should not call callback")})});QUnit.test("setup - callback - should not call callback if getter of getter and setter is not called",0,function(n){var t=this;t.mole.setup(function(n){return n.getterAndSetter}).callback(function(){n.ok(!1,"should not call callback")})});QUnit.test("setup - callback - should not call callback if setter of getter and setter is not called",0,function(n){var t=this;t.mole.setup(function(n){return n.getterAndSetter=1}).callback(function(){n.ok(!1,"should not call callback")})});QUnit.test("setup - callback - should call callback when function is called",1,function(n){var t=this;t.mole.setup(function(n){return n.noArgumentsFunction()}).callback(function(){n.ok(!0,"should call callback")});t.testObject.noArgumentsFunction()});QUnit.test("setup - callback - should call callback when getter is called",1,function(n){var t=this;t.mole.setup(function(n){return n.getter}).callback(function(){n.ok(!0,"should call callback")});t.testObject.getter});QUnit.test("setup - callback - should call callback when setter is called",1,function(n){var t=this;t.mole.setup(function(n){return n.setter=1}).callback(function(){n.ok(!0,"should call callback")});t.testObject.setter=1});QUnit.test("setup - callback - should call callback when getter of getter and setter is called",1,function(n){var t=this;t.mole.setup(function(n){return n.getterAndSetter}).callback(function(){n.ok(!0,"should call callback")});t.testObject.getterAndSetter});QUnit.test("setup - callback - should call callback when setter of getter and setter is called",1,function(n){var t=this;t.mole.setup(function(n){return n.getterAndSetter=1}).callback(function(){n.ok(!0,"should call callback")});t.testObject.getterAndSetter=1});QUnit.test("setup - callback - should not call the original function",0,function(n){var t=this;t.mole.setup(function(n){return n.noArgumentsFunction()}).callback(function(){});t.testObject.onNoArgumentsFunctionCalled=function(){n.ok(!1,"should not call the original function")};t.testObject.noArgumentsFunction()});QUnit.test("setup - callback - should not call the original getter",0,function(n){var t=this;t.mole.setup(function(n){return n.getter}).callback(function(){});t.testObject.onGetterCalled=function(){n.ok(!1,"should not call the original function")};t.testObject.getter});QUnit.test("setup - callback - should not call the original setter",0,function(n){var t=this;t.mole.setup(function(n){return n.setter=1}).callback(function(){});t.testObject.onSetterCalled=function(){n.ok(!1,"should not call the original function")};t.testObject.setter=1});QUnit.test("setup - callback - should not call the original getter of getter and setter",0,function(n){var t=this;t.mole.setup(function(n){return n.getterAndSetter}).callback(function(){});t.testObject.onGetterOfGetterAndSetterCalled=function(){n.ok(!1,"should not call the original function")};t.testObject.getterAndSetter});QUnit.test("setup - callback - should not call the original setter of getter and setter",0,function(n){var t=this;t.mole.setup(function(n){return n.getterAndSetter=1}).callback(function(){});t.testObject.onSetterOfGetterAndSetterCalled=function(){n.ok(!1,"should not call the original function")};t.testObject.getterAndSetter=1});QUnit.test("setup - callback - should pass the same parameters",1,function(n){var t=this,r=1;t.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).callback(function(t){n.strictEqual(t,r,"should return same argument")});t.testObject.oneArgumentsFunction(r)});QUnit.test("setup - callback - should pass the same parameters 2",3,function(n){var t=this,r=1,u=2,f=3;t.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).callback(function(t,i,e){n.strictEqual(t,r,"should return same argument");n.strictEqual(i,u,"should return same argument");n.strictEqual(e,f,"should return same argument")});t.testObject.manyArgumentsFunction(r,u,f)});QUnit.test("setup - callback - should pass the same parameters to setter",1,function(n){var t=this,r=1;t.mole.setup(function(n){return n.setter=i.isAny(Number)}).callback(function(t){n.strictEqual(t,r,"should call with same argument")});t.testObject.setter=r});QUnit.test("setup - callback - should pass the same parameters to setter of getter and setter",1,function(n){var t=this,r=1;t.mole.setup(function(n){return n.getterAndSetter=i.isAny(Number)}).callback(function(t){n.strictEqual(t,r,"should pass the same argument")});t.testObject.getterAndSetter=r});QUnit.test("setup - callback - should not call other original functions",0,function(n){var t=this,i;t.mole.setup(function(n){return n.noArgumentsFunction()}).callback(function(){});i=function(){n.ok(!1,"should not call the original function")};t.testObject.onNoArgumentsFunctionCalled=i;t.testObject.manyArgumentsFunction=i;t.testObject.oneArgumentsFunction=i;t.testObject.onGetterCalled=i;t.testObject.onSetterCalled=i;t.testObject.onGetterOfGetterAndSetterCalled=i;t.testObject.onSetterOfGetterAndSetterCalled=i;t.testObject.noArgumentsFunction()});QUnit.test("setup - callback - should not call other original functions 2",0,function(n){var t=this,i;t.mole.setup(function(n){return n.getterAndSetter}).callback(function(){});i=function(){n.ok(!1,"should not call the original function")};t.testObject.onNoArgumentsFunctionCalled=i;t.testObject.manyArgumentsFunction=i;t.testObject.oneArgumentsFunction=i;t.testObject.onGetterCalled=i;t.testObject.onSetterCalled=i;t.testObject.onGetterOfGetterAndSetterCalled=i;t.testObject.onSetterOfGetterAndSetterCalled=i;t.testObject.getterAndSetter});QUnit.test("setup - callback - should not call other original functions 3",0,function(n){var t=this,i;t.mole.setup(function(n){return n.setter=1}).callback(function(){});i=function(){n.ok(!1,"should not call the original function")};t.testObject.onNoArgumentsFunctionCalled=i;t.testObject.manyArgumentsFunction=i;t.testObject.oneArgumentsFunction=i;t.testObject.onGetterCalled=i;t.testObject.onSetterCalled=i;t.testObject.onGetterOfGetterAndSetterCalled=i;t.testObject.onSetterOfGetterAndSetterCalled=i;t.testObject.setter=1});QUnit.test("setup - callback - should not call callbacks on other functions",0,function(n){var t=this,r;t.mole.setup(function(n){return n.noArgumentsFunction()}).callback(function(){});r=function(){n.ok(!1,"should not call the original function")};t.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).callback(r);t.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).callback(r);t.mole.setup(function(n){return n.getter}).callback(r);t.mole.setup(function(n){return n.setter=1}).callback(r);t.mole.setup(function(n){return n.getterAndSetter}).callback(r);t.mole.setup(function(n){return n.getterAndSetter=1}).callback(r);t.testObject.onNoArgumentsFunctionCalled=r;t.testObject.manyArgumentsFunction=r;t.testObject.oneArgumentsFunction=r;t.testObject.onGetterCalled=r;t.testObject.onSetterCalled=r;t.testObject.onGetterOfGetterAndSetterCalled=r;t.testObject.onSetterOfGetterAndSetterCalled=r;t.testObject.noArgumentsFunction()});QUnit.test("setup - callback - should not call lazyReturns on other functions",0,function(n){var t=this,r;t.mole.setup(function(n){return n.noArgumentsFunction()}).callback(function(){});r=function(){n.ok(!1,"should not call the original function")};t.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).lazyReturns(r);t.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).lazyReturns(r);t.testObject.onNoArgumentsFunctionCalled=r;t.testObject.manyArgumentsFunction=r;t.testObject.oneArgumentsFunction=r;t.testObject.noArgumentsFunction()});QUnit.test("setup - callback - should not return the callback return value",1,function(n){var t=this,i;t.mole.setup(function(n){return n.returning1Function()}).callback(function(){return{}});i=t.testObject.returning1Function();n.strictEqual(i,undefined,"should return undefined")});QUnit.test("setup - callback - should call all the callbacks when function is called",4,function(n){var t=this;t.mole.setup(function(n){return n.noArgumentsFunction()}).callback(function(){n.ok(!0,"should call callback")}).callback(function(){n.ok(!0,"should call callback")}).callback(function(){n.ok(!0,"should call callback")}).callback(function(){n.ok(!0,"should call callback")});t.testObject.noArgumentsFunction()});QUnit.test("setup - callback - should call all the callbacks when function is called for getter",4,function(n){var t=this;t.mole.setup(function(n){return n.getter}).callback(function(){n.ok(!0,"should call callback")}).callback(function(){n.ok(!0,"should call callback")}).callback(function(){n.ok(!0,"should call callback")}).callback(function(){n.ok(!0,"should call callback")});t.testObject.getter});QUnit.test("setup - callback - should call all the callbacks when function is called for setter",4,function(n){var t=this;t.mole.setup(function(n){return n.setter=1}).callback(function(){n.ok(!0,"should call callback")}).callback(function(){n.ok(!0,"should call callback")}).callback(function(){n.ok(!0,"should call callback")}).callback(function(){n.ok(!0,"should call callback")});t.testObject.setter=1});QUnit.test("setup - callback - should call all the callbacks when function is called for getter of getter and setter",4,function(n){var t=this;t.mole.setup(function(n){return n.getterAndSetter}).callback(function(){n.ok(!0,"should call callback")}).callback(function(){n.ok(!0,"should call callback")}).callback(function(){n.ok(!0,"should call callback")}).callback(function(){n.ok(!0,"should call callback")});t.testObject.getterAndSetter});QUnit.test("setup - callback - should call all the callbacks when function is called for setter of getter and setter",4,function(n){var t=this;t.mole.setup(function(n){return n.getterAndSetter=1}).callback(function(){n.ok(!0,"should call callback")}).callback(function(){n.ok(!0,"should call callback")}).callback(function(){n.ok(!0,"should call callback")}).callback(function(){n.ok(!0,"should call callback")});t.testObject.getterAndSetter=1});QUnit.test("setup - callback - should pass teh same parameters to all the callbacks when function is called",4,function(n){var r=this,u=12,t=function(t){n.strictEqual(t,u,"should pass same argument")};r.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).callback(t).callback(t).callback(t).callback(t);r.testObject.oneArgumentsFunction(u)});QUnit.test("setup - callback - should pass teh same parameters to all the callbacks when function is called 2",12,function(n){var r=this,u=11,f=12,e=13,t=function(t,i,r){n.strictEqual(t,u,"should pass same argument");n.strictEqual(i,f,"should pass same argument");n.strictEqual(r,e,"should pass same argument")};r.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).callback(t).callback(t).callback(t).callback(t);r.testObject.manyArgumentsFunction(u,f,e)});QUnit.test("setup - callback - should not affect verify",1,function(n){var i=this;i.mole.setup(function(n){return n.noArgumentsFunction()}).callback(function(){});n.ok(i.mole.verify(function(n){return n.noArgumentsFunction()},t.exact(0)),"should not effect verify")});QUnit.test("setup - callback - should not affect verify for getter",1,function(n){var i=this;i.mole.setup(function(n){return n.getter}).callback(function(){});n.ok(i.mole.verify(function(n){return n.getter},t.exact(0)),"should not effect verify")});QUnit.test("setup - callback - should not affect verify for setter",1,function(n){var i=this;i.mole.setup(function(n){return n.setter=1}).callback(function(){});n.ok(i.mole.verify(function(n){return n.setter=1},t.exact(0)),"should not effect verify")});QUnit.test("setup - callback - should not affect verify for getter of getter and setter",1,function(n){var i=this;i.mole.setup(function(n){return n.getterAndSetter}).callback(function(){});n.ok(i.mole.verify(function(n){return n.getterAndSetter},t.exact(0)),"should not effect verify")});QUnit.test("setup - callback - should not affect verify for setter of getter and setter",1,function(n){var i=this;i.mole.setup(function(n){return n.getterAndSetter=1}).callback(function(){});n.ok(i.mole.verify(function(n){return n.getterAndSetter=1},t.exact(0)),"should not effect verify")});QUnit.test("setup - callback - setting setter should not affect getter",1,function(n){var t=this,i,r;t.mole.setup(function(n){return n.getterAndSetter=1}).callback(function(){});i={};t.testObject.getterAndSetterValue=i;r=t.testObject.getterAndSetter;n.strictEqual(r,i,"should return the correct value")});QUnit.test("setup - callback - setting getter should not affect setter",1,function(n){var t=this,i;t.mole.setup(function(n){return n.getterAndSetter}).callback(function(){});i={};t.testObject.getterAndSetter=i;n.strictEqual(t.testObject.getterAndSetterValue,i,"should set the correct value")});QUnit.test("setup - callback - calling with not matching value should call the original function",2,function(n){var t=this,i;t.mole.setup(function(n){return n.oneArgumentsFunction(1)}).callback(function(){});i={};t.testObject.onOneArgumentsFunctionCalled=function(t){n.ok(!0,"should call the original function");n.strictEqual(t,i,"should call with the passed value")};t.testObject.oneArgumentsFunction(i)});QUnit.test("setup - callback - calling setter with not matching value should call the original setter",2,function(n){var t=this,i;t.mole.setup(function(n){return n.setter=1}).callback(function(){});i={};t.testObject.onSetterCalled=function(t){n.ok(!0,"should call the original setter");n.strictEqual(t,i,"should call with the passed value")};t.testObject.setter=i});QUnit.test("setup - returns - should not call the original function",0,function(n){var t=this;t.mole.setup(function(n){return n.noArgumentsFunction()}).returns(111);t.testObject.onNoArgumentsFunctionCalled=function(){n.ok(!1,"should not call the original function")};t.testObject.noArgumentsFunction()});QUnit.test("setup - returns - should not call the original getter",0,function(n){var t=this;t.mole.setup(function(n){return n.getter}).returns(111);t.testObject.onGetterCalled=function(){n.ok(!1,"should not call the original function")};t.testObject.getter});QUnit.test("setup - returns - should not call the original getter of getter and setter",0,function(n){var t=this;t.mole.setup(function(n){return n.getterAndSetter}).returns(111);t.testObject.onGetterOfGetterAndSetterCalled=function(){n.ok(!1,"should not call the original function")};t.testObject.getterAndSetter});QUnit.test("setup - returns - should not call other original functions",0,function(n){var t=this,i;t.mole.setup(function(n){return n.noArgumentsFunction()}).returns(111);i=function(){n.ok(!1,"should not call the original function")};t.testObject.onNoArgumentsFunctionCalled=i;t.testObject.manyArgumentsFunction=i;t.testObject.oneArgumentsFunction=i;t.testObject.noArgumentsFunction()});QUnit.test("setup - returns - should not call callbacks on other functions",0,function(n){var t=this,r;t.mole.setup(function(n){return n.noArgumentsFunction()}).returns(111);r=function(){n.ok(!1,"should not call the original function")};t.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).callback(r);t.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).callback(r);t.testObject.onNoArgumentsFunctionCalled=r;t.testObject.manyArgumentsFunction=r;t.testObject.oneArgumentsFunction=r;t.testObject.noArgumentsFunction()});QUnit.test("setup - returns - should not call lazyReturns on other functions",0,function(n){var t=this,r;t.mole.setup(function(n){return n.noArgumentsFunction()}).returns(111);r=function(){n.ok(!1,"should not call the original function")};t.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).lazyReturns(r);t.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).lazyReturns(r);t.testObject.onNoArgumentsFunctionCalled=r;t.testObject.manyArgumentsFunction=r;t.testObject.oneArgumentsFunction=r;t.testObject.noArgumentsFunction()});QUnit.test("setup - returns - should return the value",1,function(n){var t=this,i={},r;t.mole.setup(function(n){return n.returning1Function()}).returns(i);r=t.testObject.returning1Function();n.strictEqual(r,i,"should return the configured value")});QUnit.test("setup - returns - should return the value for getter",1,function(n){var t=this,i={},r;t.mole.setup(function(n){return n.getter}).returns(i);r=t.testObject.getter;n.strictEqual(r,i,"should return the configured value")});QUnit.test("setup - returns - should return the value for getter and setter",1,function(n){var t=this,i={},r;t.mole.setup(function(n){return n.getterAndSetter}).returns(i);r=t.testObject.getterAndSetter;n.strictEqual(r,i,"should return the configured value")});QUnit.test("setup - returns - should return the last returns value",1,function(n){var t=this,i={},r;t.mole.setup(function(n){return n.returning1Function()}).returns({});t.mole.setup(function(n){return n.returning1Function()}).returns({});t.mole.setup(function(n){return n.returning1Function()}).returns({});t.mole.setup(function(n){return n.returning1Function()}).returns(i);r=t.testObject.returning1Function();n.strictEqual(r,i,"should return the last returnValue")});QUnit.test("setup - returns - should not affect verify",1,function(n){var i=this;i.mole.setup(function(n){return n.noArgumentsFunction()}).returns(4);n.ok(i.mole.verify(function(n){return n.noArgumentsFunction()},t.exact(0)),"should not effect verify")});QUnit.test("setup - returns - setting getter should not affect setter",1,function(n){var t=this,i;t.mole.setup(function(n){return n.getterAndSetter}).returns({});i={};t.testObject.getterAndSetter=i;n.strictEqual(t.testObject.getterAndSetterValue,i,"should set the configured value")});QUnit.test("setup - returns - calling with not matching argument should return the original",1,function(n){var t=this,i={},r;t.mole.setup(function(n){return n.oneArgumentsFunction(1)}).returns(i);r=t.testObject.oneArgumentsFunction(2);n.notStrictEqual(r,i,"should not return the configured value")});QUnit.test("setup - returnsInOrder - should not call the original function",0,function(n){var t=this;t.mole.setup(function(n){return n.noArgumentsFunction()}).returnsInOrder([111]);t.testObject.onNoArgumentsFunctionCalled=function(){n.ok(!1,"should not call the original function")};t.testObject.noArgumentsFunction()});QUnit.test("setup - returnsInOrder - should not call other original functions",0,function(n){var t=this,i;t.mole.setup(function(n){return n.noArgumentsFunction()}).returnsInOrder([111]);i=function(){n.ok(!1,"should not call the original function")};t.testObject.onNoArgumentsFunctionCalled=i;t.testObject.manyArgumentsFunction=i;t.testObject.oneArgumentsFunction=i;t.testObject.noArgumentsFunction()});QUnit.test("setup - returnsInOrder - should not call callbacks on other functions",0,function(n){var t=this,r;t.mole.setup(function(n){return n.noArgumentsFunction()}).returnsInOrder([111]);r=function(){n.ok(!1,"should not call the original function")};t.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).callback(r);t.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).callback(r);t.testObject.onNoArgumentsFunctionCalled=r;t.testObject.manyArgumentsFunction=r;t.testObject.oneArgumentsFunction=r;t.testObject.noArgumentsFunction()});QUnit.test("setup - returnsInOrder - should not call lazyReturns on other functions",0,function(n){var t=this,r;t.mole.setup(function(n){return n.noArgumentsFunction()}).returns([111]);r=function(){n.ok(!1,"should not call the original function")};t.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).lazyReturns(r);t.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).lazyReturns(r);t.testObject.onNoArgumentsFunctionCalled=r;t.testObject.manyArgumentsFunction=r;t.testObject.oneArgumentsFunction=r;t.testObject.noArgumentsFunction()});QUnit.test("setup - returnsInOrder - should return the values",4,function(n){var t=this,i={},r={},u={};t.mole.setup(function(n){return n.returning1Function()}).returnsInOrder([i,r,u]);var f=t.testObject.returning1Function(),e=t.testObject.returning1Function(),o=t.testObject.returning1Function(),s=t.testObject.returning1Function();n.strictEqual(f,i,"should return the configured value1");n.strictEqual(e,r,"should return the configured value2");n.strictEqual(o,u,"should return the configured value3");n.strictEqual(s,undefined,"should return undefined")});QUnit.test("setup - returnsInOrder - should return the last returns values",4,function(n){var t=this,i={},r={},u={};t.mole.setup(function(n){return n.returning1Function()}).returns({});t.mole.setup(function(n){return n.returning1Function()}).returnsInOrder([{},{},{}]);t.mole.setup(function(n){return n.returning1Function()}).returnsInOrder([i,r,u]);var f=t.testObject.returning1Function(),e=t.testObject.returning1Function(),o=t.testObject.returning1Function(),s=t.testObject.returning1Function();n.strictEqual(f,i,"should return the last returnValue5");n.strictEqual(e,r,"should return the last returnValue6");n.strictEqual(o,u,"should return the last returnValue7");n.strictEqual(s,undefined,"should return undefined")});QUnit.test("setup - returnsInOrder - should not affect verify",1,function(n){var i=this;i.mole.setup(function(n){return n.noArgumentsFunction()}).returnsInOrder([4]);n.ok(i.mole.verify(function(n){return n.noArgumentsFunction()},t.exact(0)),"should not effect verify")});QUnit.test("setup - returnsInOrder - should return the last returns values for getter",4,function(n){var t=this,i={},r={},u={};t.mole.setup(function(n){return n.getter}).returns({});t.mole.setup(function(n){return n.getter}).returnsInOrder([{},{},{}]);t.mole.setup(function(n){return n.getter}).returnsInOrder([i,r,u]);var f=t.testObject.getter,e=t.testObject.getter,o=t.testObject.getter,s=t.testObject.getter;n.strictEqual(f,i,"should return the last returnValue5");n.strictEqual(e,r,"should return the last returnValue6");n.strictEqual(o,u,"should return the last returnValue7");n.strictEqual(s,undefined,"should return undefined")});QUnit.test("setup - lazyReturns - should not call returnFunction if function is not called",0,function(n){var t=this;t.mole.setup(function(n){return n.noArgumentsFunction()}).lazyReturns(function(){n.ok(!1,"should not call returnFunction")})});QUnit.test("setup - lazyReturns - should call returnFunction when function is called",1,function(n){var t=this;t.mole.setup(function(n){return n.noArgumentsFunction()}).lazyReturns(function(){n.ok(!0,"should call returnFunction")});t.testObject.noArgumentsFunction()});QUnit.test("setup - lazyReturns - should not call the original function",0,function(n){var t=this;t.mole.setup(function(n){return n.noArgumentsFunction()}).lazyReturns(function(){});t.testObject.onNoArgumentsFunctionCalled=function(){n.ok(!1,"should not call the original function")};t.testObject.noArgumentsFunction()});QUnit.test("setup - lazyReturns - should pass the same parameters",1,function(n){var t=this,r=1;t.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).lazyReturns(function(t){n.strictEqual(t,r,"should return same argument")});t.testObject.oneArgumentsFunction(r)});QUnit.test("setup - lazyReturns - should pass the same parameters 2",3,function(n){var t=this,r=1,u=2,f=3;t.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).lazyReturns(function(t,i,e){n.strictEqual(t,r,"should return same argument");n.strictEqual(i,u,"should return same argument");n.strictEqual(e,f,"should return same argument")});t.testObject.manyArgumentsFunction(r,u,f)});QUnit.test("setup - lazyReturns - should not call other original functions",0,function(n){var t=this,i;t.mole.setup(function(n){return n.noArgumentsFunction()}).lazyReturns(function(){});i=function(){n.ok(!1,"should not call the original function")};t.testObject.onNoArgumentsFunctionCalled=i;t.testObject.manyArgumentsFunction=i;t.testObject.oneArgumentsFunction=i;t.testObject.noArgumentsFunction()});QUnit.test("setup - lazyReturns - should not call callbacks on other functions",0,function(n){var t=this,r;t.mole.setup(function(n){return n.noArgumentsFunction()}).lazyReturns(function(){});r=function(){n.ok(!1,"should not call the original function")};t.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).callback(r);t.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).callback(r);t.testObject.onNoArgumentsFunctionCalled=r;t.testObject.manyArgumentsFunction=r;t.testObject.oneArgumentsFunction=r;t.testObject.noArgumentsFunction()});QUnit.test("setup - lazyReturns - should not call lazyReturns on other functions",0,function(n){var t=this,r;t.mole.setup(function(n){return n.noArgumentsFunction()}).lazyReturns(function(){});r=function(){n.ok(!1,"should not call the original function")};t.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).lazyReturns(r);t.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).lazyReturns(r);t.testObject.onNoArgumentsFunctionCalled=r;t.testObject.manyArgumentsFunction=r;t.testObject.oneArgumentsFunction=r;t.testObject.noArgumentsFunction()});QUnit.test("setup - lazyReturns - should return the returnFunction return value",1,function(n){var t=this,i={},r;t.mole.setup(function(n){return n.returning1Function()}).lazyReturns(function(){return i});r=t.testObject.returning1Function();n.strictEqual(r,i,"should return returnValue")});QUnit.test("setup - lazyReturns - should return the last returnFunction return value",1,function(n){var t=this,u={},f={},e={},i={},r;t.mole.setup(function(n){return n.returning1Function()}).lazyReturns(function(){return u}).lazyReturns(function(){return f}).lazyReturns(function(){return e}).lazyReturns(function(){return i});r=t.testObject.returning1Function();n.strictEqual(r,i,"should return the last returnValue")});QUnit.test("setup - lazyReturns - should not affect verify",1,function(n){var i=this;i.mole.setup(function(n){return n.noArgumentsFunction()}).lazyReturns(function(){return 4});n.ok(i.mole.verify(function(n){return n.noArgumentsFunction()},t.exact(0)),"should not effect verify")});QUnit.test("setup - lazyReturns - should return the last returnFunction return of getter of getter and setter",1,function(n){var t=this,u={},f={},e={},i={},r;t.mole.setup(function(n){return n.getterAndSetter}).lazyReturns(function(){return u}).lazyReturns(function(){return f}).lazyReturns(function(){return e}).lazyReturns(function(){return i});r=t.testObject.getterAndSetter;n.strictEqual(r,i,"should return the last returnValue")});QUnit.test("setup - lazyReturnsInOrder - should not call returnFunction if function is not called",0,function(n){var t=this;t.mole.setup(function(n){return n.noArgumentsFunction()}).lazyReturnsInOrder([function(){n.ok(!1,"should not call returnFunction")}])});QUnit.test("setup - lazyReturnsInOrder - should call returnFunction when function is called",4,function(n){var i=this,t=[];i.mole.setup(function(n){return n.noArgumentsFunction()}).lazyReturnsInOrder([function(){return t.push(1)},function(){return t.push(2)},function(){return t.push(3)}]);i.testObject.noArgumentsFunction();i.testObject.noArgumentsFunction();i.testObject.noArgumentsFunction();i.testObject.noArgumentsFunction();n.strictEqual(t.length,3,"there should be only 3 function calls");n.strictEqual(t[0],1,"should be function number 1");n.strictEqual(t[1],2,"should be function number 2");n.strictEqual(t[2],3,"should be function number 3")});QUnit.test("setup - lazyReturnsInOrder - should not call the original function",0,function(n){var t=this;t.mole.setup(function(n){return n.noArgumentsFunction()}).lazyReturnsInOrder([function(){}]);t.testObject.onNoArgumentsFunctionCalled=function(){n.ok(!1,"should not call the original function")};t.testObject.noArgumentsFunction()});QUnit.test("setup - lazyReturnsInOrder - should pass the same parameters",2,function(n){var t=this,r=1,u=2;t.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).lazyReturnsInOrder([function(t){n.strictEqual(t,r,"should return same argument")},function(t){n.strictEqual(t,u,"should return same argument")}]);t.testObject.oneArgumentsFunction(r);t.testObject.oneArgumentsFunction(u)});QUnit.test("setup - lazyReturnsInOrder - should pass the same parameters 2",6,function(n){var t=this,r=1,u=2,f=3,e=4,o=5,s=6;t.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).lazyReturnsInOrder([function(t,i,e){n.strictEqual(t,r,"should return same argument");n.strictEqual(i,u,"should return same argument");n.strictEqual(e,f,"should return same argument")},function(t,i,r){n.strictEqual(t,e,"should return same argument");n.strictEqual(i,o,"should return same argument");n.strictEqual(r,s,"should return same argument")}]);t.testObject.manyArgumentsFunction(r,u,f);t.testObject.manyArgumentsFunction(e,o,s)});QUnit.test("setup - lazyReturnsInOrder - should not call other original functions",0,function(n){var t=this,i;t.mole.setup(function(n){return n.noArgumentsFunction()}).lazyReturnsInOrder([function(){}]);i=function(){n.ok(!1,"should not call the original function")};t.testObject.onNoArgumentsFunctionCalled=i;t.testObject.manyArgumentsFunction=i;t.testObject.oneArgumentsFunction=i;t.testObject.noArgumentsFunction()});QUnit.test("setup - lazyReturnsInOrder - should not call callbacks on other functions",0,function(n){var t=this,r;t.mole.setup(function(n){return n.noArgumentsFunction()}).lazyReturnsInOrder([function(){}]);r=function(){n.ok(!1,"should not call the original function")};t.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).callback(r);t.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).callback(r);t.testObject.onNoArgumentsFunctionCalled=r;t.testObject.manyArgumentsFunction=r;t.testObject.oneArgumentsFunction=r;t.testObject.noArgumentsFunction()});QUnit.test("setup - lazyReturnsInOrder - should not call lazyReturns on other functions",0,function(n){var t=this,r;t.mole.setup(function(n){return n.noArgumentsFunction()}).lazyReturnsInOrder([function(){}]);r=function(){n.ok(!1,"should not call the original function")};t.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).lazyReturns(r);t.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).lazyReturns(r);t.testObject.onNoArgumentsFunctionCalled=r;t.testObject.manyArgumentsFunction=r;t.testObject.oneArgumentsFunction=r;t.testObject.noArgumentsFunction()});QUnit.test("setup - lazyReturnsInOrder - should return the returnFunction return values",4,function(n){var t=this,i={},r={},u={};t.mole.setup(function(n){return n.returning1Function()}).lazyReturnsInOrder([function(){return i},function(){return r},function(){return u}]);var f=t.testObject.returning1Function(),e=t.testObject.returning1Function(),o=t.testObject.returning1Function(),s=t.testObject.returning1Function();n.strictEqual(f,i,"should return returnValue1");n.strictEqual(e,r,"should return returnValue2");n.strictEqual(o,u,"should return returnValue3");n.strictEqual(s,undefined,"should return undefined")});QUnit.test("setup - lazyReturnsInOrder - should return the last returnFunction return values",4,function(n){var t=this,f={},e={},o={},s={},i={},r={},u={};t.mole.setup(function(n){return n.returning1Function()}).lazyReturns(function(){return f}).lazyReturns(function(){return e}).lazyReturnsInOrder([function(){return o},function(){return s}]).lazyReturnsInOrder([function(){return i},function(){return r},function(){return u}]);var h=t.testObject.returning1Function(),c=t.testObject.returning1Function(),l=t.testObject.returning1Function(),a=t.testObject.returning1Function();n.strictEqual(h,i,"should return the last returnValue5");n.strictEqual(c,r,"should return the last returnValue6");n.strictEqual(l,u,"should return the last returnValue7");n.strictEqual(a,undefined,"should return the last returnValue")});QUnit.test("setup - lazyReturnsInOrder - should not affect verify",1,function(n){var i=this;i.mole.setup(function(n){return n.noArgumentsFunction()}).lazyReturnsInOrder([function(){return 4}]);n.ok(i.mole.verify(function(n){return n.noArgumentsFunction()},t.exact(0)),"should not effect verify")});QUnit.test("setup - lazyReturnsInOrder - should return the last returnFunction return values of getter of getter and setter",4,function(n){var t=this,f={},e={},o={},s={},i={},r={},u={};t.mole.setup(function(n){return n.getterAndSetter}).lazyReturns(function(){return f}).lazyReturns(function(){return e}).lazyReturnsInOrder([function(){return o},function(){return s}]).lazyReturnsInOrder([function(){return i},function(){return r},function(){return u}]);var h=t.testObject.getterAndSetter,c=t.testObject.getterAndSetter,l=t.testObject.getterAndSetter,a=t.testObject.getterAndSetter;n.strictEqual(h,i,"should return the last returnValue5");n.strictEqual(c,r,"should return the last returnValue6");n.strictEqual(l,u,"should return the last returnValue7");n.strictEqual(a,undefined,"should return the last returnValue")});QUnit.test("setup - throws - should not call the original function",0,function(n){var t=this;t.mole.setup(function(n){return n.noArgumentsFunction()}).throws(111);t.testObject.onNoArgumentsFunctionCalled=function(){n.ok(!1,"should not call the original function")};try{t.testObject.noArgumentsFunction()}catch(i){}});QUnit.test("setup - throws - should not call other original functions",0,function(n){var t=this,i;t.mole.setup(function(n){return n.noArgumentsFunction()}).throws(111);i=function(){n.ok(!1,"should not call the original function")};t.testObject.onNoArgumentsFunctionCalled=i;t.testObject.manyArgumentsFunction=i;t.testObject.oneArgumentsFunction=i;try{t.testObject.noArgumentsFunction()}catch(r){}});QUnit.test("setup - throws - should not call callbacks on other functions",0,function(n){var t=this,r;t.mole.setup(function(n){return n.noArgumentsFunction()}).throws(111);r=function(){n.ok(!1,"should not call the original function")};t.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).callback(r);t.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).callback(r);t.testObject.onNoArgumentsFunctionCalled=r;t.testObject.manyArgumentsFunction=r;t.testObject.oneArgumentsFunction=r;try{t.testObject.noArgumentsFunction()}catch(u){}});QUnit.test("setup - throws - should not call lazyReturns on other functions",0,function(n){var t=this,r;t.mole.setup(function(n){return n.noArgumentsFunction()}).throws(111);r=function(){n.ok(!1,"should not call the original function")};t.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).lazyReturns(r);t.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).lazyReturns(r);t.testObject.onNoArgumentsFunctionCalled=r;t.testObject.manyArgumentsFunction=r;t.testObject.oneArgumentsFunction=r;try{t.testObject.noArgumentsFunction()}catch(u){}});QUnit.test("setup - throws - should throw the error",1,function(n){var t=this,i={};t.mole.setup(function(n){return n.returning1Function()}).throws(i);try{t.testObject.returning1Function()}catch(r){n.strictEqual(r,i,"should throw the configured error")}});QUnit.test("setup - throws - should throw the last error",1,function(n){var t=this,i={};t.mole.setup(function(n){return n.returning1Function()}).throws({}).throws({}).throws({}).throws(i);try{t.testObject.returning1Function()}catch(r){n.strictEqual(r,i,"should throw the configured error")}});QUnit.test("setup - throws - should throw the last error for getter",1,function(n){var t=this,i={};t.mole.setup(function(n){return n.getter}).throws({}).throws({}).throws({}).throws(i);try{t.testObject.getter}catch(r){n.strictEqual(r,i,"should throw the configured error")}});QUnit.test("setup - throws - should throw the last error for setter",1,function(n){var t=this,i={};t.mole.setup(function(n){return n.setter=1}).throws({}).throws({}).throws({}).throws(i);try{t.testObject.setter=1}catch(r){n.strictEqual(r,i,"should throw the configured error")}});QUnit.test("setup - throws - should throw the last error for getter of getter and setter",1,function(n){var t=this,i={};t.mole.setup(function(n){return n.getterAndSetter}).throws({}).throws({}).throws({}).throws(i);try{t.testObject.getterAndSetter}catch(r){n.strictEqual(r,i,"should throw the configured error")}});QUnit.test("setup - throws - should throw the last error for setter of getter and setter",1,function(n){var t=this,i={};t.mole.setup(function(n){return n.getterAndSetter=1}).throws({}).throws({}).throws({}).throws(i);try{t.testObject.getterAndSetter=1}catch(r){n.strictEqual(r,i,"should throw the configured error")}});QUnit.test("setup - throws - should not affect verify",1,function(n){var i=this;i.mole.setup(function(n){return n.noArgumentsFunction()}).throws("error");n.ok(i.mole.verify(function(n){return n.noArgumentsFunction()},t.exact(0)),"should not effect verify")});QUnit.test("setup - throws - setting getter should not affect setter",0,function(n){var t=this;t.mole.setup(function(n){return n.getterAndSetter}).throws({}).throws({}).throws({}).throws({});try{t.testObject.getterAndSetter=1}catch(i){n.ok(!1,"should not throw")}});QUnit.test("setup - throws - setting setter should not affect getter",0,function(n){var t=this;t.mole.setup(function(n){return n.getterAndSetter=1}).throws({}).throws({}).throws({}).throws({});try{t.testObject.getterAndSetter}catch(i){n.ok(!1,"should not throw")}});QUnit.test("setup - throws - calling setter with not matching argument should not throw",0,function(n){var t=this;t.mole.setup(function(n){return n.setter=1}).throws({});try{t.testObject.setter=2}catch(i){n.ok(!1,"should not throw")}});QUnit.test("setup - throws - calling setter of getter and setter with not matching argument should not throw",0,function(n){var t=this;t.mole.setup(function(n){return n.getterAndSetter=1}).throws({});try{t.testObject.getterAndSetter=2}catch(i){n.ok(!1,"should not throw")}});QUnit.test("setup - throws - calling function with not matching argument should not throw",0,function(n){var t=this;t.mole.setup(function(n){return n.oneArgumentsFunction(1)}).throws({});try{t.testObject.oneArgumentsFunction(2)}catch(i){n.ok(!1,"should not throw")}});QUnit.test("setup - lazyThrows - should not call returnErrorFunction if function is not called",0,function(n){var t=this;t.mole.setup(function(n){return n.noArgumentsFunction()}).lazyThrows(function(){n.ok(!1,"should not call returnFunction")})});QUnit.test("setup - lazyThrows - should call returnErrorFunction when function is called",1,function(n){var t=this;t.mole.setup(function(n){return n.noArgumentsFunction()}).lazyThrows(function(){n.ok(!0,"should call returnFunction")});try{t.testObject.noArgumentsFunction()}catch(i){}});QUnit.test("setup - lazyThrows - should not call the original function",0,function(n){var t=this;t.mole.setup(function(n){return n.noArgumentsFunction()}).lazyThrows(function(){});t.testObject.onNoArgumentsFunctionCalled=function(){n.ok(!1,"should not call the original function")};try{t.testObject.noArgumentsFunction()}catch(i){}});QUnit.test("setup - lazyThrows - should pass the same parameters",1,function(n){var t=this,r=1;t.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).lazyThrows(function(t){n.strictEqual(t,r,"should return same argument")});try{t.testObject.oneArgumentsFunction(r)}catch(u){}});QUnit.test("setup - lazyThrows - should pass the same parameters 2",3,function(n){var t=this,r=1,u=2,f=3;t.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).lazyThrows(function(t,i,e){n.strictEqual(t,r,"should return same argument");n.strictEqual(i,u,"should return same argument");n.strictEqual(e,f,"should return same argument")});try{t.testObject.manyArgumentsFunction(r,u,f)}catch(e){}});QUnit.test("setup - lazyThrows - should not call other original functions",0,function(n){var t=this,i;t.mole.setup(function(n){return n.noArgumentsFunction()}).lazyThrows(function(){});i=function(){n.ok(!1,"should not call the original function")};t.testObject.onNoArgumentsFunctionCalled=i;t.testObject.manyArgumentsFunction=i;t.testObject.oneArgumentsFunction=i;try{t.testObject.noArgumentsFunction()}catch(r){}});QUnit.test("setup - lazyThrows - should not call callbacks on other functions",0,function(n){var t=this,r;t.mole.setup(function(n){return n.noArgumentsFunction()}).lazyThrows(function(){});r=function(){n.ok(!1,"should not call the original function")};t.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).callback(r);t.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).callback(r);t.testObject.onNoArgumentsFunctionCalled=r;t.testObject.manyArgumentsFunction=r;t.testObject.oneArgumentsFunction=r;try{t.testObject.noArgumentsFunction()}catch(u){}});QUnit.test("setup - lazyThrows - should not call lazyThrows on other functions",0,function(n){var t=this,r;t.mole.setup(function(n){return n.noArgumentsFunction()}).lazyThrows(function(){});r=function(){n.ok(!1,"should not call the original function")};t.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).lazyReturns(r);t.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).lazyReturns(r);t.testObject.onNoArgumentsFunctionCalled=r;t.testObject.manyArgumentsFunction=r;t.testObject.oneArgumentsFunction=r;try{t.testObject.noArgumentsFunction()}catch(u){}});QUnit.test("setup - lazyThrows - should throw the returnErrorFunction error",1,function(n){var t=this,i={};t.mole.setup(function(n){return n.returning1Function()}).lazyThrows(function(){return i});try{t.testObject.returning1Function()}catch(r){n.strictEqual(r,i,"should throw the error")}});QUnit.test("setup - lazyThrows - should throw the last returnErrorFunction error",1,function(n){var t=this,r={},u={},f={},i={};t.mole.setup(function(n){return n.returning1Function()}).lazyThrows(function(){return r}).lazyThrows(function(){return u}).lazyThrows(function(){return f}).lazyThrows(function(){return i});try{t.testObject.returning1Function()}catch(e){n.strictEqual(e,i,"should throw the last error")}});QUnit.test("setup - lazyThrows - should not affect verify",1,function(n){var i=this;i.mole.setup(function(n){return n.noArgumentsFunction()}).lazyThrows(function(){return 4});n.ok(i.mole.verify(function(n){return n.noArgumentsFunction()},t.exact(0)),"should not effect verify")});QUnit.test("setup - mix - should throw error if configured after return",1,function(n){var t=this,i={};t.mole.setup(function(n){return n.returning1Function()}).returns({}).throws(i);try{t.testObject.returning1Function()}catch(r){n.strictEqual(r,i,"should throw the error")}});QUnit.test("setup - mix - should return value if configured after throw",1,function(n){var t=this,i={},r;t.mole.setup(function(n){return n.returning1Function()}).throws({}).returns(i);r=t.testObject.returning1Function();n.strictEqual(r,i,"should return the configured value")});QUnit.test("setup - mix - should call all the callbacks and the lazy returns but return last configured one",5,function(n){var t=this,i={},r;t.mole.setup(function(n){return n.returning1Function()}).throws({}).lazyReturns(function(){return n.ok(!0,"should call lazyRerturns"),1}).lazyReturns(function(){return n.ok(!0,"should call lazyRerturns"),2}).lazyReturns(function(){return n.ok(!0,"should call lazyRerturns"),3}).callback(function(){return n.ok(!0,"should call callback")}).returns(i);r=t.testObject.returning1Function();n.strictEqual(r,i,"should return the configured value")});QUnit.test("setup - mix - should call all the callbacks and the lazy returns but return last configured one 2",5,function(n){var t=this,i={},r;t.mole.setup(function(n){return n.returning1Function()}).throws({}).lazyReturns(function(){return n.ok(!0,"should call lazyRerturns"),1}).lazyReturns(function(){return n.ok(!0,"should call lazyRerturns"),2}).returns(3).lazyReturns(function(){return n.ok(!0,"should call lazyRerturns"),i}).callback(function(){return n.ok(!0,"should call callback")});r=t.testObject.returning1Function();n.strictEqual(r,i,"should return the configured value")});QUnit.test("setup - mix - should call all the callbacks and the lazy returns but throw last configured error",5,function(n){var t=this,i={};t.mole.setup(function(n){return n.returning1Function()}).throws("asdasd").lazyReturns(function(){return n.ok(!0,"should call lazyRerturns"),1}).lazyReturns(function(){return n.ok(!0,"should call lazyRerturns"),2}).returns({}).lazyReturns(function(){return n.ok(!0,"should call lazyRerturns"),3}).throws(i).callback(function(){return n.ok(!0,"should call callback")});try{t.testObject.returning1Function()}catch(r){n.strictEqual(r,i,"should throw the configured error")}});QUnit.test("setup - mix - should not affect the verify",1,function(n){var i=this;i.mole.setup(function(n){return n.returning1Function()}).throws("asdasd").lazyReturns(function(){return 1}).lazyReturns(function(){return 2}).lazyReturns(function(){return 3}).throws({}).returns({}).callback(function(){});n.ok(i.mole.verify(function(n){return n.returning1Function()},t.exact(0)),"should be called once")});QUnit.test("setup - mix - should call only the matching set",3,function(n){var t=this,r={},u;t.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).lazyReturns(function(){n.ok(!1,"lazyReturns should not be called for any number")}).returns("return value").callback(function(){n.ok(!1,"callback should not be called for any number")});t.mole.setup(function(n){return n.oneArgumentsFunction("aaa")}).throws("error").lazyReturns(function(){n.ok(!1,"lazyReturns should not be called aaa")}).callback(function(){n.ok(!1,"callback should not be called for aaa")});t.mole.setup(function(n){return n.oneArgumentsFunction("bbb")}).lazyReturns(function(){n.ok(!0,"should be called")}).callback(function(){n.ok(!0,"should be called")}).returns(r);u=t.testObject.oneArgumentsFunction("bbb");n.strictEqual(u,r,"should return the return value")});QUnit.test("setup - mix - if both setups match should call both",4,function(n){var t=this;t.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).lazyReturns(function(){n.ok(!0,"should call")}).returns("return value").callback(function(){n.ok(!0,"should call")});t.mole.setup(function(n){return n.oneArgumentsFunction(1)}).lazyReturns(function(){n.ok(!0,"should call")}).returns("return value").callback(function(){n.ok(!0,"should call")});t.testObject.oneArgumentsFunction(1)});QUnit.test("setup - mix - if both setups match should return from the last",1,function(n){var t=this,r={},u;t.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).lazyReturns(function(){return 1}).returns(function(){return 2});t.mole.setup(function(n){return n.oneArgumentsFunction(1)}).lazyReturns(function(){return 3}).returns(r);u=t.testObject.oneArgumentsFunction(1);n.strictEqual(u,r,"should return the returnValue")});QUnit.test("setup - mix - if both setups match should return from the last 2",1,function(n){var t=this,r={},u;t.mole.setup(function(n){return n.oneArgumentsFunction(1)}).lazyReturns(function(){return 1}).returns(function(){return 2});t.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).lazyReturns(function(){return 3}).returns(r);u=t.testObject.oneArgumentsFunction(1);n.strictEqual(u,r,"should return the returnValue")});QUnit.test("setup - mix - if both setups match should throw from the last",1,function(n){var t=this,r={};t.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).lazyReturns(function(){return 1}).throws("error").returns(function(){return 2});t.mole.setup(function(n){return n.oneArgumentsFunction(1)}).lazyReturns(function(){return 3}).throws(r);try{t.testObject.oneArgumentsFunction(1)}catch(u){n.strictEqual(u,r,"should throw the thrownError")}});QUnit.test("setup - mix - if both setups match should throw from the last 2",1,function(n){var t=this,r={};t.mole.setup(function(n){return n.oneArgumentsFunction(1)}).lazyReturns(function(){return 1}).throws("error").returns(function(){return 2});t.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).lazyReturns(function(){return 3}).throws(r);try{t.testObject.oneArgumentsFunction(1)}catch(u){n.strictEqual(u,r,"should throw the thrownError")}});QUnit.test("setup - mix - setup for one object should not affect other",5,function(t){var v=this,f=new n.TestObject,u=new n.TestObject,s=new r(f),y=new r(u),h=10,c=1,e,o,l,a;s.setup(function(n){return n.getter}).returns(c);s.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).callback(function(n){t.strictEqual(n,h,"should call with correct argument")});e=20;u.onOneArgumentsFunctionCalled=function(n){t.strictEqual(n,e,"should call with correct argument")};f.onGetterCalled=function(){t.ok(!1,"should not be called")};u.onGetterCalled=function(){t.ok(!0,"should be called")};o={};u.getterValue=o;l=f.getter;a=u.getter;f.oneArgumentsFunction(h);u.oneArgumentsFunction(e);t.strictEqual(l,c,"should return the correct value");t.strictEqual(a,o,"should return the correct value")});QUnit.test("setupPrivate - callback - should not call callback if function is not called",0,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME).callback(function(){t.ok(!1,"should not call callback")})});QUnit.test("setupPrivate - callback - should not call callback if getter is not called",0,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_NAME).callback(function(){t.ok(!1,"should not call callback")})});QUnit.test("setupPrivate - callback - should not call callback if setter is not called",0,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_SETTER_NAME,1).callback(function(){t.ok(!1,"should not call callback")})});QUnit.test("setupPrivate - callback - should not call callback if getter of geter&setter is not called",0,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_AND_SETTER_NAME).callback(function(){t.ok(!1,"should not call callback")})});QUnit.test("setupPrivate - callback - should not call callback if setter of geter&setter is not called",0,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_AND_SETTER_NAME,1).callback(function(){t.ok(!1,"should not call callback")})});QUnit.test("setupPrivate - callback - should call callback when function is called",1,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,null).callback(function(){t.ok(!0,"should call callback")});i.testObject.callPrivateFunction(null)});QUnit.test("setupPrivate - callback - should call callback when getter is called",1,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_NAME).callback(function(){t.ok(!0,"should call callback")});i.testObject.callPrivateGetter()});QUnit.test("setupPrivate - callback - should call callback when setter is called",1,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_SETTER_NAME,1).callback(function(){t.ok(!0,"should call callback")});i.testObject.callPrivateSetter(1)});QUnit.test("setupPrivate - callback - should not call callback when setter is called with wrong parameter",0,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_SETTER_NAME,1).callback(function(){t.ok(!1,"should not call callback")});i.testObject.callPrivateSetter(2)});QUnit.test("setupPrivate - callback - should call callback when getter of getter&setter is called",1,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_AND_SETTER_NAME).callback(function(){t.ok(!0,"should call callback")});i.testObject.callPrivateGetterOfGetterAndSetter()});QUnit.test("setupPrivate - callback - should call callback when setter of getter&setter is called",1,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_AND_SETTER_NAME,1).callback(function(){t.ok(!0,"should call callback")});i.testObject.callPrivateSetterOfGetterAndSetter(1)});QUnit.test("setupPrivate - callback - should not call callback when setter of getter&setter is called with wrong parameter",0,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_AND_SETTER_NAME,1).callback(function(){t.ok(!1,"should not call callback")});i.testObject.callPrivateSetterOfGetterAndSetter(2)});QUnit.test("setupPrivate - callback - should not call the original function",0,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,null).callback(function(){});i.testObject.onPrivateFunctionCalled=function(){t.ok(!1,"should not call the original function")};i.testObject.callPrivateFunction(null)});QUnit.test("setupPrivate - callback - should not call the original getter",0,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_NAME).callback(function(){});i.testObject.onPrivateGetterCalled=function(){t.ok(!1,"should not call the original function")};i.testObject.callPrivateGetter()});QUnit.test("setupPrivate - callback - should not call the original setter",0,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_SETTER_NAME,1).callback(function(){});i.testObject.onPrivateSetterCalled=function(){t.ok(!1,"should not call the original function")};i.testObject.callPrivateSetter(1)});QUnit.test("setupPrivate - callback - should call the original setter if called with other argument",1,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_SETTER_NAME,1).callback(function(){});i.testObject.onPrivateSetterCalled=function(){t.ok(!0,"should call the original setter")};i.testObject.callPrivateSetter(2)});QUnit.test("setupPrivate - callback - should not call the original getter of getter and setter",0,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_AND_SETTER_NAME).callback(function(){});i.testObject.onPrivateGetterOfGetterAndSetterCalled=function(){t.ok(!1,"should not call the original function")};i.testObject.callPrivateGetterOfGetterAndSetter()});QUnit.test("setupPrivate - callback - should not call the original setter of getter and setter",0,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_AND_SETTER_NAME,1).callback(function(){});i.testObject.onPrivateSetterOfGetterAndSetterCalled=function(){t.ok(!1,"should not call the original function")};i.testObject.callPrivateSetterOfGetterAndSetter(1)});QUnit.test("setupPrivate - callback - should call the original setter of getter and setter if called with other argument",1,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_AND_SETTER_NAME,1).callback(function(){});i.testObject.onPrivateSetterOfGetterAndSetterCalled=function(){t.ok(!0,"should call the original setter")};i.testObject.callPrivateSetterOfGetterAndSetter(2)});QUnit.test("setupPrivate - callback - should pass the same parameters",1,function(t){var r=this,u=1;r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,i.isAny(Number)).callback(function(n){t.strictEqual(n,u,"should return same argument")});r.testObject.callPrivateFunction(u)});QUnit.test("setupPrivate - callback - should pass the same parameters 2",1,function(t){var i=this,r=2;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,2).callback(function(n){t.strictEqual(n,r,"should return same argument")});i.testObject.callPrivateFunction(r)});QUnit.test("setupPrivate - callback - should pass the same parameters to setter",1,function(t){var i=this,r=2;i.mole.setupPrivate(n.TestObject.PRIVATE_SETTER_NAME,2).callback(function(n){t.strictEqual(n,r,"should return same argument")});i.testObject.callPrivateSetter(r)});QUnit.test("setupPrivate - callback - should pass the same parameters to setter of getter&setter",1,function(t){var i=this,r=2;i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_AND_SETTER_NAME,2).callback(function(n){t.strictEqual(n,r,"should return same argument")});i.testObject.callPrivateSetterOfGetterAndSetter(r)});QUnit.test("setupPrivate - callback - should not call if not matching",0,function(t){var r=this;r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,i.isAny(Number)).callback(function(){t.ok(!1,"should not be called")});r.testObject.callPrivateFunction("some text")});QUnit.test("setupPrivate - callback - should not call if not matching 2",0,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,2).callback(function(){t.ok(!1,"should not be called")});i.testObject.callPrivateFunction(3)});QUnit.test("setupPrivate - callback - should not call if not matching 3",0,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME).callback(function(){t.ok(!1,"should not be called")});i.testObject.callPrivateFunction(undefined)});QUnit.test("setupPrivate - callback - should not call setter if not matching",0,function(t){var r=this;r.mole.setupPrivate(n.TestObject.PRIVATE_SETTER_NAME,i.isAny(Number)).callback(function(){t.ok(!1,"should not be called")});r.testObject.callPrivateSetter("some text")});QUnit.test("setupPrivate - callback - should not call setter of getter&setter if not matching",0,function(t){var r=this;r.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_AND_SETTER_NAME,i.isAny(Number)).callback(function(){t.ok(!1,"should not be called")});r.testObject.callPrivateSetterOfGetterAndSetter("some text")});QUnit.test("setupPrivate - callback - should not call other original functions",0,function(t){var i=this,r;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,null).callback(function(){});r=function(){t.ok(!1,"should not call the original function")};i.testObject.onNoArgumentsFunctionCalled=r;i.testObject.manyArgumentsFunction=r;i.testObject.oneArgumentsFunction=r;i.testObject.callPrivateFunction(null)});QUnit.test("setupPrivate - callback - should not call callbacks on other functions",0,function(t){var r=this,u;r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,null).callback(function(){});u=function(){t.ok(!1,"should not call the original function")};r.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).callback(u);r.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).callback(u);r.testObject.onNoArgumentsFunctionCalled=u;r.testObject.manyArgumentsFunction=u;r.testObject.oneArgumentsFunction=u;r.testObject.callPrivateFunction(null)});QUnit.test("setupPrivate - callback - should not call lazyReturns on other functions",0,function(t){var r=this,u;r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).callback(function(){});u=function(){t.ok(!1,"should not call the original function")};r.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).lazyReturns(u);r.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).lazyReturns(u);r.testObject.onNoArgumentsFunctionCalled=u;r.testObject.manyArgumentsFunction=u;r.testObject.oneArgumentsFunction=u;r.testObject.callPrivateFunction(1)});QUnit.test("setupPrivate - callback - should not return the callback return value",1,function(t){var i=this,r;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).callback(function(){return{}});r=i.testObject.callPrivateFunction(1);t.strictEqual(r,undefined,"should return undefined")});QUnit.test("setupPrivate - callback - should call all the callbacks when function is called",4,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).callback(function(){t.ok(!0,"should call callback")}).callback(function(){t.ok(!0,"should call callback")}).callback(function(){t.ok(!0,"should call callback")}).callback(function(){t.ok(!0,"should call callback")});i.testObject.callPrivateFunction(1)});QUnit.test("setupPrivate - callback - should pass the same parameters to all the callbacks when function is called",4,function(t){var u=this,f=12,r=function(n){t.strictEqual(n,f,"should pass same argument")};u.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,i.isAny(Number)).callback(r).callback(r).callback(r).callback(r);u.testObject.callPrivateFunction(f)});QUnit.test("setupPrivate - returns - should not call the original function",0,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).returns(111);i.testObject.onPrivateFunctionCalled=function(){t.ok(!1,"should not call the original function")};i.testObject.callPrivateFunction(1)});QUnit.test("setupPrivate - returns - should not call other original functions",0,function(t){var i=this,r;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).returns(111);r=function(){t.ok(!1,"should not call the original function")};i.testObject.onNoArgumentsFunctionCalled=r;i.testObject.manyArgumentsFunction=r;i.testObject.oneArgumentsFunction=r;i.testObject.callPrivateFunction(1)});QUnit.test("setupPrivate - returns - should not call callbacks on other functions",0,function(t){var r=this,u;r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).returns(111);u=function(){t.ok(!1,"should not call the original function")};r.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).callback(u);r.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).callback(u);r.testObject.onNoArgumentsFunctionCalled=u;r.testObject.manyArgumentsFunction=u;r.testObject.oneArgumentsFunction=u;r.testObject.callPrivateFunction(1)});QUnit.test("setupPrivate - returns - should not call lazyReturns on other functions",0,function(t){var r=this,u;r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).returns(111);u=function(){t.ok(!1,"should not call the original function")};r.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).lazyReturns(u);r.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).lazyReturns(u);r.testObject.onNoArgumentsFunctionCalled=u;r.testObject.manyArgumentsFunction=u;r.testObject.oneArgumentsFunction=u;r.testObject.callPrivateFunction(1)});QUnit.test("setupPrivate - returns - should return the value",1,function(t){var i=this,r={},u;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).returns(r);u=i.testObject.callPrivateFunction(1);t.strictEqual(u,r,"should return the configured value")});QUnit.test("setupPrivate - returns - should return the last returns value",1,function(t){var i=this,r={},u;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).returns({});i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).returns({});i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).returns({});i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).returns(r);u=i.testObject.callPrivateFunction(1);t.strictEqual(u,r,"should return the last returnValue")});QUnit.test("setupPrivate - returns - should return the last getter value",1,function(t){var i=this,r={},u;i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_NAME).returns({});i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_NAME).returns({});i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_NAME).returns({});i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_NAME).returns(r);u=i.testObject.callPrivateGetter();t.strictEqual(u,r,"should return the last returnValue")});QUnit.test("setupPrivate - returns - should return the last getter of getter and setter value",1,function(t){var i=this,r={},u;i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_AND_SETTER_NAME).returns({});i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_AND_SETTER_NAME).returns({});i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_AND_SETTER_NAME).returns({});i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_AND_SETTER_NAME).returns(r);u=i.testObject.callPrivateGetterOfGetterAndSetter();t.strictEqual(u,r,"should return the last returnValue")});QUnit.test("setupPrivate - lazyReturns - should not call returnFunction if function is not called",0,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).lazyReturns(function(){t.ok(!1,"should not call returnFunction")})});QUnit.test("setupPrivate - lazyReturns - should call returnFunction when function is called",1,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).lazyReturns(function(){t.ok(!0,"should call returnFunction")});i.testObject.callPrivateFunction(1)});QUnit.test("setupPrivate - lazyReturns - should not call the original function",0,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).lazyReturns(function(){});i.testObject.onPrivateFunctionCalled=function(){t.ok(!1,"should not call the original function")};i.testObject.callPrivateFunction(1)});QUnit.test("setupPrivate - lazyReturns - should pass the same parameters",1,function(t){var r=this,u=1;r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,i.isAny(Number)).lazyReturns(function(n){t.strictEqual(n,u,"should return same argument")});r.testObject.callPrivateFunction(u)});QUnit.test("setupPrivate - lazyReturns - should pass the same parameters 2",1,function(t){var r=this,i=1;r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,i).lazyReturns(function(n){t.strictEqual(n,i,"should return same argument")});r.testObject.callPrivateFunction(i)});QUnit.test("setupPrivate - lazyReturns - should not call other original functions",0,function(t){var i=this,r;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).lazyReturns(function(){});r=function(){t.ok(!1,"should not call the original function")};i.testObject.onNoArgumentsFunctionCalled=r;i.testObject.manyArgumentsFunction=r;i.testObject.oneArgumentsFunction=r;i.testObject.callPrivateFunction(1)});QUnit.test("setupPrivate - lazyReturns - should not call callbacks on other functions",0,function(t){var r=this,u;r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).lazyReturns(function(){});u=function(){t.ok(!1,"should not call the original function")};r.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).callback(u);r.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).callback(u);r.testObject.onNoArgumentsFunctionCalled=u;r.testObject.manyArgumentsFunction=u;r.testObject.oneArgumentsFunction=u;r.testObject.callPrivateFunction(1)});QUnit.test("setupPrivate - lazyReturns - should not call lazyReturns on other functions",0,function(t){var r=this,u;r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).lazyReturns(function(){});u=function(){t.ok(!1,"should not call the original function")};r.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).lazyReturns(u);r.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).lazyReturns(u);r.testObject.onNoArgumentsFunctionCalled=u;r.testObject.manyArgumentsFunction=u;r.testObject.oneArgumentsFunction=u;r.testObject.callPrivateFunction(1)});QUnit.test("setupPrivate - lazyReturns - should return the returnFunction return value",1,function(t){var i=this,r={},u;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).lazyReturns(function(){return r});u=i.testObject.callPrivateFunction(1);t.strictEqual(u,r,"should return returnValue")});QUnit.test("setupPrivate - lazyReturns - should return the last returnFunction return value",1,function(t){var i=this,f={},e={},o={},r={},u;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).lazyReturns(function(){return f}).lazyReturns(function(){return e}).lazyReturns(function(){return o}).lazyReturns(function(){return r});u=i.testObject.callPrivateFunction(1);t.strictEqual(u,r,"should return the last returnValue")});QUnit.test("setupPrivate - lazyReturns - setup getter should not affect setter",1,function(t){var i=this,r;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME).lazyReturns(function(){return 1});r={};i.testObject.callPrivateSetterOfGetterAndSetter(r);t.strictEqual(i.testObject.privateGetterAndSetterValue,r,"should set the value")});QUnit.test("setupPrivate - throws - should not call the original function",0,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).throws(111);i.testObject.onNoArgumentsFunctionCalled=function(){t.ok(!1,"should not call the original function")};try{i.testObject.callPrivateFunction(1)}catch(r){}});QUnit.test("setupPrivate - throws - should not call other original functions",0,function(t){var i=this,r;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).throws(111);r=function(){t.ok(!1,"should not call the original function")};i.testObject.onNoArgumentsFunctionCalled=r;i.testObject.manyArgumentsFunction=r;i.testObject.oneArgumentsFunction=r;try{i.testObject.callPrivateFunction(1)}catch(u){}});QUnit.test("setupPrivate - throws - should not call callbacks on other functions",0,function(t){var r=this,u;r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).throws(111);u=function(){t.ok(!1,"should not call the original function")};r.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).callback(u);r.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).callback(u);r.testObject.onNoArgumentsFunctionCalled=u;r.testObject.manyArgumentsFunction=u;r.testObject.oneArgumentsFunction=u;try{r.testObject.callPrivateFunction(1)}catch(f){}});QUnit.test("setupPrivate - throws - should not call lazyReturns on other functions",0,function(t){var r=this,u;r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).throws(111);u=function(){t.ok(!1,"should not call the original function")};r.mole.setup(function(n){return n.oneArgumentsFunction(i.isAny(Number))}).lazyReturns(u);r.mole.setup(function(n){return n.manyArgumentsFunction(i.isAny(Number),i.isAny(Number),i.isAny(Number))}).lazyReturns(u);r.testObject.onNoArgumentsFunctionCalled=u;r.testObject.manyArgumentsFunction=u;r.testObject.oneArgumentsFunction=u;try{r.testObject.callPrivateFunction(1)}catch(f){}});QUnit.test("setupPrivate - throws - should throw the error",1,function(t){var i=this,r={};i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).throws(r);try{i.testObject.callPrivateFunction(1)}catch(u){t.strictEqual(u,r,"should throw the configured error")}});QUnit.test("setupPrivate - throws - should throw the error for getter",1,function(t){var i=this,r={};i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_NAME).throws(r);try{i.testObject.callPrivateGetter()}catch(u){t.strictEqual(u,r,"should throw the configured error")}});QUnit.test("setupPrivate - throws - should throw the error for setter",1,function(t){var i=this,r={};i.mole.setupPrivate(n.TestObject.PRIVATE_SETTER_NAME,1).throws(r);try{i.testObject.callPrivateSetter(1)}catch(u){t.strictEqual(u,r,"should throw the configured error")}});QUnit.test("setupPrivate - throws - should not throw the error for setter if arguments dont match",0,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_SETTER_NAME,1).throws({});try{i.testObject.callPrivateSetter(2)}catch(r){t.ok(!1,"should not throw error")}});QUnit.test("setupPrivate - throws - should throw the error for getter of getter&setter",1,function(t){var i=this,r={};i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_AND_SETTER_NAME).throws(r);try{i.testObject.callPrivateGetterOfGetterAndSetter()}catch(u){t.strictEqual(u,r,"should throw the configured error")}});QUnit.test("setupPrivate - throws - should throw the error for setter of getter&setter",1,function(t){var i=this,r={};i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_AND_SETTER_NAME,1).throws(r);try{i.testObject.callPrivateSetterOfGetterAndSetter(1)}catch(u){t.strictEqual(u,r,"should throw the configured error")}});QUnit.test("setupPrivate - throws - should not throw the error for setter of getter&setter if arguments dont match",0,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_AND_SETTER_NAME,1).throws({});try{i.testObject.callPrivateSetterOfGetterAndSetter(2)}catch(r){t.ok(!1,"should not throw error")}});QUnit.test("setupPrivate - throws - setup getter should not throw on setter",0,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_AND_SETTER_NAME).throws({});try{i.testObject.callPrivateSetterOfGetterAndSetter(2)}catch(r){t.ok(!1,"should not throw error")}});QUnit.test("setupPrivate - throws - setup setter should not throw on getter",0,function(t){var i=this;i.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_AND_SETTER_NAME,1).throws({});try{i.testObject.callPrivateGetterOfGetterAndSetter()}catch(r){t.ok(!1,"should not throw error")}});QUnit.test("setupPrivate - throws - should throw the last error",1,function(t){var i=this,r={};i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).throws({}).throws({}).throws({}).throws(r);try{i.testObject.callPrivateFunction(1)}catch(u){t.strictEqual(u,r,"should throw the configured error")}});QUnit.test("setupPrivate - mix - should throw error if configured after return",1,function(t){var i=this,r={};i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).returns({}).throws(r);try{i.testObject.callPrivateFunction(1)}catch(u){t.strictEqual(u,r,"should throw the error")}});QUnit.test("setupPrivate - mix - should return value if configured after throw",1,function(t){var i=this,r={},u;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).throws({}).returns(r);u=i.testObject.callPrivateFunction(1);t.strictEqual(u,r,"should return the configured value")});QUnit.test("setupPrivate - mix - should call all the callbacks and the lazy returns but return last configured one",5,function(t){var i=this,r={},u;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).throws({}).lazyReturns(function(){return t.ok(!0,"should call lazyRerturns"),1}).lazyReturns(function(){return t.ok(!0,"should call lazyRerturns"),2}).lazyReturns(function(){return t.ok(!0,"should call lazyRerturns"),3}).callback(function(){return t.ok(!0,"should call callback")}).returns(r);u=i.testObject.callPrivateFunction(1);t.strictEqual(u,r,"should return the configured value")});QUnit.test("setupPrivate - mix - should call all the callbacks and the lazy returns but return last configured one 2",5,function(t){var i=this,r={},u;i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).throws({}).lazyReturns(function(){return t.ok(!0,"should call lazyRerturns"),1}).lazyReturns(function(){return t.ok(!0,"should call lazyRerturns"),2}).returns(3).lazyReturns(function(){return t.ok(!0,"should call lazyRerturns"),r}).callback(function(){return t.ok(!0,"should call callback")});u=i.testObject.callPrivateFunction(1);t.strictEqual(u,r,"should return the configured value")});QUnit.test("setupPrivate - mix - should call all the callbacks and the lazy returns but throw last configured error",5,function(t){var i=this,r={};i.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).throws("asdasd").lazyReturns(function(){return t.ok(!0,"should call lazyRerturns"),1}).lazyReturns(function(){return t.ok(!0,"should call lazyRerturns"),2}).returns({}).lazyReturns(function(){return t.ok(!0,"should call lazyRerturns"),3}).throws(r).callback(function(){return t.ok(!0,"should call callback")});try{i.testObject.callPrivateFunction(1)}catch(u){t.strictEqual(u,r,"should throw the configured error")}});QUnit.test("setupPrivate - mix - should call only the matching set",3,function(t){var r=this,u={},f;r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,i.isAny(Number)).lazyReturns(function(){t.ok(!1,"lazyReturns should not be called for any number")}).returns("return value").callback(function(){t.ok(!1,"callback should not be called for any number")});r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,"aaa").throws("error").lazyReturns(function(){t.ok(!1,"lazyReturns should not be called aaa")}).callback(function(){t.ok(!1,"callback should not be called for aaa")});r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,"bbb").lazyReturns(function(){t.ok(!0,"should be called")}).callback(function(){t.ok(!0,"should be called")}).returns(u);f=r.testObject.callPrivateFunction("bbb");t.strictEqual(f,u,"should return the return value")});QUnit.test("setupPrivate - mix - if both setups match should call both",4,function(t){var r=this;r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,i.isAny(Number)).lazyReturns(function(){t.ok(!0,"should call")}).returns("return value").callback(function(){t.ok(!0,"should call")});r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).lazyReturns(function(){t.ok(!0,"should call")}).returns("return value").callback(function(){t.ok(!0,"should call")});r.testObject.callPrivateFunction(1)});QUnit.test("setupPrivate - mix - if both setups match should call both for setter",4,function(t){var r=this;r.mole.setupPrivate(n.TestObject.PRIVATE_SETTER_NAME,i.isAny(Number)).lazyReturns(function(){t.ok(!0,"should call")}).returns("return value").callback(function(){t.ok(!0,"should call")});r.mole.setupPrivate(n.TestObject.PRIVATE_SETTER_NAME,1).lazyReturns(function(){t.ok(!0,"should call")}).returns("return value").callback(function(){t.ok(!0,"should call")});r.testObject.callPrivateSetter(1)});QUnit.test("setupPrivate - mix - if both setups match should call both for setter of getter and setter",4,function(t){var r=this;r.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_AND_SETTER_NAME,i.isAny(Number)).lazyReturns(function(){t.ok(!0,"should call")}).returns("return value").callback(function(){t.ok(!0,"should call")});r.mole.setupPrivate(n.TestObject.PRIVATE_GETTER_AND_SETTER_NAME,1).lazyReturns(function(){t.ok(!0,"should call")}).returns("return value").callback(function(){t.ok(!0,"should call")});r.testObject.callPrivateSetterOfGetterAndSetter(1)});QUnit.test("setupPrivate - mix - if both setups match should return from the last",1,function(t){var r=this,u={},f;r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,i.isAny(Number)).lazyReturns(function(){return 1}).returns(function(){return 2});r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).lazyReturns(function(){return 3}).returns(u);f=r.testObject.callPrivateFunction(1);t.strictEqual(f,u,"should return the returnValue")});QUnit.test("setupPrivate - mix - if both setups match should return from the last 2",1,function(t){var r=this,u={},f;r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).lazyReturns(function(){return 1}).returns(function(){return 2});r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,i.isAny(Number)).lazyReturns(function(){return 3}).returns(u);f=r.testObject.callPrivateFunction(1);t.strictEqual(f,u,"should return the returnValue")});QUnit.test("setupPrivate - mix - if both setups match should throw from the last",1,function(t){var r=this,u={};r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,i.isAny(Number)).lazyReturns(function(){return 1}).throws("error").returns(function(){return 2});r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).lazyReturns(function(){return 3}).throws(u);try{r.testObject.callPrivateFunction(1)}catch(f){t.strictEqual(f,u,"should throw the thrownError")}});QUnit.test("setupPrivate - mix - if both setups match should throw from the last 2",1,function(t){var r=this,u={};r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,1).lazyReturns(function(){return 1}).throws("error").returns(function(){return 2});r.mole.setupPrivate(n.TestObject.PRIVATE_FUNCTION_NAME,i.isAny(Number)).lazyReturns(function(){return 3}).throws(u);try{r.testObject.callPrivateFunction(1)}catch(f){t.strictEqual(f,u,"should throw the thrownError")}});QUnit.test("isStrict - true - no setup should throw error",1,function(n){var t=this;t.mole.isStrict=!0;try{t.testObject.noArgumentsFunction()}catch(i){n.ok(!0,"should throw error")}});QUnit.test("isStrict - true - no setup for getter should throw error",1,function(n){var t=this;t.mole.isStrict=!0;try{t.testObject.getter}catch(i){n.ok(!0,"should throw error")}});QUnit.test("isStrict - true - no setup for setter should throw error",1,function(n){var t=this;t.mole.isStrict=!0;try{t.testObject.setter=1}catch(i){n.ok(!0,"should throw error")}});QUnit.test("isStrict - true - no setup for getter of getter and setter should throw error",1,function(n){var t=this;t.mole.isStrict=!0;try{t.testObject.getterAndSetter}catch(i){n.ok(!0,"should throw error")}});QUnit.test("isStrict - true - no setup for setter of getter and setter should throw error",1,function(n){var t=this;t.mole.isStrict=!0;try{t.testObject.getterAndSetter=1}catch(i){n.ok(!0,"should throw error")}});QUnit.test("isStrict - true - has callback setup should call the callback and not throw error",1,function(n){var t=this;t.mole.isStrict=!0;t.mole.setup(function(n){return n.noArgumentsFunction()}).callback(function(){n.ok(!0,"should call the setup")});try{t.testObject.noArgumentsFunction()}catch(i){n.ok(!1,"should not throw error")}});QUnit.test("isStrict - true - getter has callback setup should call the callback and not throw error",1,function(n){var t=this;t.mole.isStrict=!0;t.mole.setup(function(n){return n.getter}).callback(function(){n.ok(!0,"should call the setup")});try{t.testObject.getter}catch(i){n.ok(!1,"should not throw error")}});QUnit.test("isStrict - true - setter has callback setup should call the callback and not throw error",1,function(n){var t=this;t.mole.isStrict=!0;t.mole.setup(function(n){return n.setter=1}).callback(function(){n.ok(!0,"should call the setup")});try{t.testObject.setter=1}catch(i){n.ok(!1,"should not throw error")}});QUnit.test("isStrict - true - getter of getter&setter has callback setup should call the callback and not throw error",1,function(n){var t=this;t.mole.isStrict=!0;t.mole.setup(function(n){return n.getterAndSetter}).callback(function(){n.ok(!0,"should call the setup")});try{t.testObject.getterAndSetter}catch(i){n.ok(!1,"should not throw error")}});QUnit.test("isStrict - true - setter of getter&setter has callback setup should call the callback and not throw error",1,function(n){var t=this;t.mole.isStrict=!0;t.mole.setup(function(n){return n.getterAndSetter=1}).callback(function(){n.ok(!0,"should call the setup")});try{t.testObject.getterAndSetter=1}catch(i){n.ok(!1,"should not throw error")}});QUnit.test("isStrict - true - has callback setup  for other argument should throw error",1,function(n){var t=this;t.mole.isStrict=!0;t.mole.setup(function(n){return n.oneArgumentsFunction(1)}).callback(function(){});try{t.testObject.oneArgumentsFunction(2)}catch(i){n.ok(!0,"should throw error")}});QUnit.test("isStrict - true - setter has callback setup for other argument should throw error",1,function(n){var t=this;t.mole.isStrict=!0;t.mole.setup(function(n){return n.setter=1}).callback(function(){});try{t.testObject.setter=2}catch(i){n.ok(!0,"should throw error")}});QUnit.test("isStrict - true - setter of getter&setter has callback setup for other argument should throw error",1,function(n){var t=this;t.mole.isStrict=!0;t.mole.setup(function(n){return n.getterAndSetter=1}).callback(function(){});try{t.testObject.getterAndSetter=2}catch(i){n.ok(!0,"should throw error")}});QUnit.test("isStrict - true - has lazyReturns setup should call the lazyReturns and not throw error",2,function(n){var t=this,i,r;t.mole.isStrict=!0;i={};t.mole.setup(function(n){return n.noArgumentsFunction()}).lazyReturns(function(){return n.ok(!0,"should call the lazyReturns"),i});try{r=t.testObject.noArgumentsFunction();n.strictEqual(r,i,"should return the return value")}catch(u){n.ok(!1,"should not throw error")}});QUnit.test("isStrict - true - has returns setup should return the returnValue and not throw error",1,function(n){var t=this,i,r;t.mole.isStrict=!0;i={};t.mole.setup(function(n){return n.noArgumentsFunction()}).returns(i);try{r=t.testObject.noArgumentsFunction();n.strictEqual(r,i,"should return the return value")}catch(u){n.ok(!1,"should not throw error")}});QUnit.test("isStrict - true - has throws setup should throw the thrownError",1,function(n){var t=this,i;t.mole.isStrict=!0;i={};t.mole.setup(function(n){return n.noArgumentsFunction()}).throws(i);try{t.testObject.noArgumentsFunction()}catch(r){n.strictEqual(r,i,"should throw the thrown error")}});QUnit.test("isStrict - false - no setup should not throw error",0,function(n){var t=this;t.mole.isStrict=!1;try{t.testObject.noArgumentsFunction()}catch(i){n.ok(!1,"should not throw error")}});QUnit.test("isStrict - false - has callbeck setup should call the callback and not throw error",1,function(n){var t=this;t.mole.isStrict=!1;t.mole.setup(function(n){return n.noArgumentsFunction()}).callback(function(){n.ok(!0,"should call the setup")});try{t.testObject.noArgumentsFunction()}catch(i){n.ok(!1,"should not throw error")}});QUnit.test("isStrict - false - has lazyReturns setup should call the lazyReturns and not throw error",2,function(n){var t=this,i,r;t.mole.isStrict=!1;i={};t.mole.setup(function(n){return n.noArgumentsFunction()}).lazyReturns(function(){return n.ok(!0,"should call the lazyReturns"),i});try{r=t.testObject.noArgumentsFunction();n.strictEqual(r,i,"should return the return value")}catch(u){n.ok(!1,"should not throw error")}});QUnit.test("isStrict - false - has returns setup should return the returnValue and not throw error",1,function(n){var t=this,i,r;t.mole.isStrict=!1;i={};t.mole.setup(function(n){return n.noArgumentsFunction()}).returns(i);try{r=t.testObject.noArgumentsFunction();n.strictEqual(r,i,"should return the return value")}catch(u){n.ok(!1,"should not throw error")}});QUnit.test("isStrict - false - has throws setup should throw the thrownError",1,function(n){var t=this,i;t.mole.isStrict=!1;i={};t.mole.setup(function(n){return n.noArgumentsFunction()}).throws(i);try{t.testObject.noArgumentsFunction()}catch(r){n.strictEqual(r,i,"should throw the thrown error")}});QUnit.test("staticFunction - Override static function",1,function(t){var u=this,i=new r(n.TestObject);i.setup(function(){n.TestObject.staticFunction()}).callback(function(){t.ok(!0,"should call callback")});n.TestObject.staticFunction()});QUnit.test("setup - inheritence - callback on sons function should call callback",1,function(t){var f=this,i=new n.TestObjectSon,u=new r(i);u.setup(function(n){return n.noArgumentsFunction()}).callback(function(){t.ok(!0,"callbeck was called")});i.noArgumentsFunction()});QUnit.test("dispose - before dispose should not call the original function",1,function(t){var f=this,i=new n.TestObject,u=new r(i);i.onNoArgumentsFunctionCalled=function(){t.ok(!1,"should not call original function")};u.setup(function(n){return n.noArgumentsFunction()}).callback(function(){t.ok(!0,"should call the setup")});i.noArgumentsFunction()});QUnit.test("dispose - before dispose should not call the original getter",1,function(t){var f=this,i=new n.TestObject,u=new r(i);i.onGetterCalled=function(){t.ok(!1,"should not call original function")};u.setup(function(n){return n.getter}).callback(function(){t.ok(!0,"should call the setup")});i.getter});QUnit.test("dispose - before dispose should not call the original setter",1,function(t){var f=this,i=new n.TestObject,u=new r(i);i.onSetterCalled=function(){t.ok(!1,"should not call original function")};u.setup(function(n){return n.setter=1}).callback(function(){t.ok(!0,"should call the setup")});i.setter=1});QUnit.test("dispose - before dispose should not call the original getter of getter and setter",1,function(t){var f=this,i=new n.TestObject,u=new r(i);i.onGetterOfGetterAndSetterCalled=function(){t.ok(!1,"should not call original function")};u.setup(function(n){return n.getterAndSetter}).callback(function(){t.ok(!0,"should call the setup")});i.getterAndSetter});QUnit.test("dispose - before dispose should not call the original setter of getter and setter",1,function(t){var f=this,i=new n.TestObject,u=new r(i);i.onSetterOfGetterAndSetterCalled=function(){t.ok(!1,"should not call original function")};u.setup(function(n){return n.getterAndSetter=1}).callback(function(){t.ok(!0,"should call the setup")});i.getterAndSetter=1});QUnit.test("dispose - should call the original function",1,function(t){var f=this,i=new n.TestObject,u=new r(i);i.onNoArgumentsFunctionCalled=function(){t.ok(!0,"should call original function")};u.setup(function(n){return n.noArgumentsFunction()}).callback(function(){t.ok(!1,"should not call the setup")});u.dispose();i.noArgumentsFunction()});QUnit.test("dispose - should call the original getter",1,function(t){var f=this,i=new n.TestObject,u=new r(i);i.onGetterCalled=function(){t.ok(!0,"should call original function")};u.setup(function(n){return n.getter}).callback(function(){t.ok(!1,"should not call the setup")});u.dispose();i.getter});QUnit.test("dispose - should call the original setter",1,function(t){var f=this,i=new n.TestObject,u=new r(i);i.onSetterCalled=function(){t.ok(!0,"should call original function")};u.setup(function(n){return n.setter=1}).callback(function(){t.ok(!1,"should not call the setup")});u.dispose();i.setter=1});QUnit.test("dispose - should call the original getter of getter and setter",1,function(t){var f=this,i=new n.TestObject,u=new r(i);i.onGetterOfGetterAndSetterCalled=function(){t.ok(!0,"should call original function")};u.setup(function(n){return n.getterAndSetter}).callback(function(){t.ok(!1,"should not call the setup")});u.dispose();i.getterAndSetter});QUnit.test("dispose - should call the original setter of getter and setter",1,function(t){var f=this,i=new n.TestObject,u=new r(i);i.onSetterOfGetterAndSetterCalled=function(){t.ok(!0,"should call original function")};u.setup(function(n){return n.getterAndSetter=1}).callback(function(){t.ok(!1,"should not call the setup")});u.dispose();i.getterAndSetter=1});QUnit.test("findMoleByObject - if null should return null",1,function(n){var t=r.findMoleByObject(null);n.strictEqual(t,null,"should return null")});QUnit.test("findMoleByObject - if undefined should return null",1,function(n){var t=r.findMoleByObject(undefined);n.strictEqual(t,null,"should return null")});QUnit.test("findMoleByObject - object without mole should return null",1,function(n){var t=r.findMoleByObject({});n.strictEqual(t,null,"should return null")});QUnit.test("findMoleByObject - object with mole should return the mole",1,function(n){var t=this,i=r.findMoleByObject(t.testObject);n.strictEqual(i,t.mole,"should return correct mole")});QUnit.test("findMoleByObject - objects with moles should return correct moles",3,function(n){var t=this,i={},u={},f=new r(i),e=new r(u),o=r.findMoleByObject(i),s=r.findMoleByObject(u),h=r.findMoleByObject(t.testObject);n.strictEqual(o,f,"should return correct mole");n.strictEqual(s,e,"should return correct mole");n.strictEqual(h,t.mole,"should return correct mole")});QUnit.test("findMoleByObject - after dispose on mole should not return the mole for the object",4,function(n){var t=this,i={},u={},f={},e=new r(i),o=new r(u);o.dispose();var s=new r(f),h=r.findMoleByObject(i),c=r.findMoleByObject(u),l=r.findMoleByObject(t.testObject),a=r.findMoleByObject(f);n.strictEqual(h,e,"should return correct mole");n.strictEqual(c,null,"should return null after dispose");n.strictEqual(l,t.mole,"should return correct mole");n.strictEqual(a,s,"should return correct mole")});QUnit.test("moleReturnValue - should be false",1,function(n){var t=this;n.strictEqual(t.mole.moleReturnValue,!1,"moleReturnValue should be false")});QUnit.test("moleReturnValue - should not create mole of the return value by default",1,function(n){var t=this,i=t.testObject.complexReturnFunction(),u=r.findMoleByObject(i);n.strictEqual(u,null,"should not create mole for return value")});QUnit.test("moleReturnValue - set to false should not create mole of the return value",2,function(n){var t=this,i,u;t.mole.moleReturnValue=!1;i=t.testObject.complexReturnFunction();u=r.findMoleByObject(i);n.strictEqual(t.mole.moleReturnValue,!1,"moleReturnValue should be false");n.strictEqual(u,null,"should not create mole for return value")});QUnit.test("moleReturnValue - set to true should create mole for the return value",2,function(n){var t=this,i,u;t.mole.moleReturnValue=!0;i=t.testObject.complexReturnFunction();u=r.findMoleByObject(i);n.strictEqual(t.mole.moleReturnValue,!0,"moleReturnValue should be true");n.notStrictEqual(u,null,"should create mole for return value")});QUnit.test("moleReturnValue - set to true should create new mole for the return value",2,function(n){var t=this,i,u,f,e;t.mole.moleReturnValue=!0;i=t.testObject.complexReturnFunction();u=r.findMoleByObject(i);u.setup(function(n){return n.returning1Function()}).returns(2);f=t.testObject.returning1Function();e=i.returning1Function();n.strictEqual(f,1,"should return the original value");n.strictEqual(e,2,"should reutrn the setup value")});QUnit.test("moleReturnValue - set to true should create mole for the return value return value",2,function(n){var t=this,i,u;t.mole.moleReturnValue=!0;i=t.testObject.complexReturnFunction().complexReturnFunction();u=r.findMoleByObject(i);n.strictEqual(t.mole.moleReturnValue,!0,"moleReturnValue should be true");n.notStrictEqual(u,null,"should create mole for return value")});QUnit.test("moleReturnValue - set to true should create new mole for the return value return value",2,function(n){var t=this,i,u,f,e;t.mole.moleReturnValue=!0;i=t.testObject.complexReturnFunction().complexReturnFunction();u=r.findMoleByObject(i);u.setup(function(n){return n.returning1Function()}).returns(2);f=t.testObject.returning1Function();e=i.returning1Function();n.strictEqual(f,1,"should return the original value");n.strictEqual(e,2,"should reutrn the setup value")});QUnit.test("moleReturnValue - getter - set to false should not create mole of the return value",2,function(n){var t=this,i,u;t.mole.moleReturnValue=!1;i=t.testObject.complexGetterFunction;u=r.findMoleByObject(i);n.strictEqual(t.mole.moleReturnValue,!1,"moleReturnValue should be false");n.strictEqual(u,null,"should not create mole for return value")});QUnit.test("moleReturnValue - getter - set to true should create mole for the return value",2,function(n){var t=this,i,u;t.mole.moleReturnValue=!0;i=t.testObject.complexGetterFunction;u=r.findMoleByObject(i);n.strictEqual(t.mole.moleReturnValue,!0,"moleReturnValue should be true");n.notStrictEqual(u,null,"should create mole for return value")});QUnit.test("moleReturnValue - getter - set to true should create new mole for the return value",2,function(n){var t=this,i,u,f,e;t.mole.moleReturnValue=!0;i=t.testObject.complexGetterFunction;u=r.findMoleByObject(i);u.setup(function(n){return n.returning1Function()}).returns(2);f=t.testObject.returning1Function();e=i.returning1Function();n.strictEqual(f,1,"should return the original value");n.strictEqual(e,2,"should reutrn the setup value")});QUnit.test("moleReturnValue - getter - set to true should create mole for the return value return value",2,function(n){var t=this,i,u;t.mole.moleReturnValue=!0;i=t.testObject.complexGetterFunction.complexGetterFunction;u=r.findMoleByObject(i);n.strictEqual(t.mole.moleReturnValue,!0,"moleReturnValue should be true");n.notStrictEqual(u,null,"should create mole for return value")});QUnit.test("moleReturnValue - getter - set to true should create new mole for the return value return value",2,function(n){var t=this,i,u,f,e;t.mole.moleReturnValue=!0;i=t.testObject.complexGetterFunction.complexGetterFunction;u=r.findMoleByObject(i);u.setup(function(n){return n.returning1Function()}).returns(2);f=t.testObject.returning1Function();e=i.returning1Function();n.strictEqual(f,1,"should return the original value");n.strictEqual(e,2,"should reutrn the setup value")})}(Tests||(Tests={})),function(){var n=moqJS.Times,t=function(){function n(){this.beforeEach=function(){var n=this};this.afterEach=function(){}}return n}();QUnit.module("Times",new t);QUnit.test("lessThan - on smaller should return true",1,function(t){var i=n.lessThan(4),r=i.match(1);t.strictEqual(r,!0,"lessThan should return true when the actual is smaller")});QUnit.test("lessThan - on bigger should return false",1,function(t){var i=n.lessThan(4),r=i.match(5);t.strictEqual(r,!1,"lessThan should return false when the actual is bigger")});QUnit.test("lessThan - on same should return false",1,function(t){var i=n.lessThan(4),r=i.match(4);t.strictEqual(r,!1,"lessThan should return false when the actual is same")});QUnit.test("atMost - on smaller should return true",1,function(t){var i=n.atMost(4),r=i.match(1);t.strictEqual(r,!0,"atMost should return true when the actual is smaller")});QUnit.test("atMost - on bigger should return false",1,function(t){var i=n.atMost(4),r=i.match(5);t.strictEqual(r,!1,"atMost should return false when the actual is bigger")});QUnit.test("atMost - on same should return true",1,function(t){var i=n.atMost(4),r=i.match(4);t.strictEqual(r,!0,"atMost should return true when the actual is same")});QUnit.test("exact - on smaller should return false",1,function(t){var i=n.exact(4),r=i.match(1);t.strictEqual(r,!1,"exact should return false when the actual is smaller")});QUnit.test("exact - on bigger should return false",1,function(t){var i=n.exact(4),r=i.match(5);t.strictEqual(r,!1,"exact should return false when the actual is bigger")});QUnit.test("exact - on same should return true",1,function(t){var i=n.exact(4),r=i.match(4);t.strictEqual(r,!0,"exact should return true when the actual is same")});QUnit.test("atLeast - on smaller should return false",1,function(t){var i=n.atLeast(4),r=i.match(1);t.strictEqual(r,!1,"atLeast should return false when the actual is smaller")});QUnit.test("atLeast - on bigger should return true",1,function(t){var i=n.atLeast(4),r=i.match(5);t.strictEqual(r,!0,"atLeast should return true when the actual is bigger")});QUnit.test("atLeast - on same should return false",1,function(t){var i=n.atLeast(4),r=i.match(4);t.strictEqual(r,!0,"atLeast should return true when the actual is same")});QUnit.test("moreThan - on smaller should return false",1,function(t){var i=n.moreThan(4),r=i.match(1);t.strictEqual(r,!1,"moreThan should return false when the actual is smaller")});QUnit.test("moreThan - on bigger should return true",1,function(t){var i=n.moreThan(4),r=i.match(5);t.strictEqual(r,!0,"moreThan should return true when the actual is bigger")});QUnit.test("moreThan - on same should return false",1,function(t){var i=n.moreThan(4),r=i.match(4);t.strictEqual(r,!1,"moreThan should return false when the actual is same")});QUnit.test("between - on smaller should return false",1,function(t){var i=n.between(4,7),r=i.match(1);t.strictEqual(r,!1,"between should return false when the actual is smaller")});QUnit.test("between - on bigger should return false",1,function(t){var i=n.between(4,7),r=i.match(8);t.strictEqual(r,!1,"between should return false when the actual is bigger")});QUnit.test("between - when between should return true",1,function(t){var i=n.between(4,7),r=i.match(5);t.strictEqual(r,!0,"between should return true when the actual is between")});QUnit.test("between - when between on lower should return true",1,function(t){var i=n.between(4,7),r=i.match(4);t.strictEqual(r,!0,"between should return true when the actual is between on lower")});QUnit.test("between - when between on higher should return true",1,function(t){var i=n.between(4,7),r=i.match(7);t.strictEqual(r,!0,"between should return true when the actual is between on higher")})}(Tests||(Tests={}));
//# sourceMappingURL=MoqJS.min.js.map
